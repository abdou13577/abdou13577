{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"],"imports":1}},{"name":"fast-deep-equal","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":40,"index":114}}],"key":"kmUMBZlZK8fLQ5NsiSOBIMofZVo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":115},"end":{"line":5,"column":31,"index":146}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":147},"end":{"line":6,"column":46,"index":193}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"],"imports":1}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":194},"end":{"line":7,"column":52,"index":246}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"],"imports":1}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":247},"end":{"line":8,"column":45,"index":292}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"],"imports":1}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":293},"end":{"line":9,"column":35,"index":328}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"],"imports":1}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":329},"end":{"line":10,"column":49,"index":378}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"],"imports":1}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":379},"end":{"line":11,"column":51,"index":430}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"],"imports":1}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":431},"end":{"line":12,"column":73,"index":504}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"],"imports":1}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":505},"end":{"line":13,"column":69,"index":574}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"],"imports":1}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":575},"end":{"line":14,"column":69,"index":644}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"],"imports":1}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":645},"end":{"line":15,"column":67,"index":712}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"],"imports":1}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":713},"end":{"line":16,"column":37,"index":750}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"],"imports":1}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":751},"end":{"line":17,"column":47,"index":798}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"],"imports":1}},{"name":"./UnhandledActionContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":799},"end":{"line":18,"column":69,"index":868}}],"key":"hbxQFgxZ0nD1dniBnLKjFC5C/nw=","exportNames":["*"],"imports":1}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":869},"end":{"line":19,"column":59,"index":928}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"],"imports":1}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":929},"end":{"line":20,"column":67,"index":996}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"],"imports":1}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":997},"end":{"line":21,"column":49,"index":1046}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"],"imports":1}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1047},"end":{"line":22,"column":57,"index":1104}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"],"imports":1}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1105},"end":{"line":23,"column":53,"index":1158}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"],"imports":1}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1159},"end":{"line":24,"column":55,"index":1214}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"],"imports":1}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1215},"end":{"line":25,"column":93,"index":1308}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"],"imports":1}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1309},"end":{"line":26,"column":53,"index":1362}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"],"imports":1}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1363},"end":{"line":27,"column":69,"index":1432}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"],"imports":1}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1433},"end":{"line":28,"column":49,"index":1482}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"],"imports":1}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1483},"end":{"line":29,"column":65,"index":1548}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"],"imports":1}},{"name":"./useNavigationState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1549},"end":{"line":30,"column":74,"index":1623}}],"key":"YLzO6pWqOUYOyLCSKhbq1BFmhy0=","exportNames":["*"],"imports":1}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1624},"end":{"line":31,"column":47,"index":1671}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"],"imports":1}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1672},"end":{"line":32,"column":51,"index":1723}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"],"imports":1}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1724},"end":{"line":33,"column":55,"index":1779}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"],"imports":1}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":1780},"end":{"line":34,"column":65,"index":1845}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"],"imports":1}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":1846},"end":{"line":35,"column":59,"index":1905}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":2021},"end":{"line":39,"column":48,"index":2069}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\", \"UNSTABLE_router\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _reactNavigationRouters = require(_dependencyMap[1], \"@react-navigation/routers\");\n  var _fastDeepEqual = require(_dependencyMap[2], \"fast-deep-equal\");\n  var deepEqual = _interopDefault(_fastDeepEqual);\n  var _react = require(_dependencyMap[3], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactIs = require(_dependencyMap[4], \"react-is\");\n  var _useLatestCallback = require(_dependencyMap[5], \"use-latest-callback\");\n  var useLatestCallback = _interopDefault(_useLatestCallback);\n  var _deepFreezeJs = require(_dependencyMap[6], \"./deepFreeze.js\");\n  var _GroupJs = require(_dependencyMap[7], \"./Group.js\");\n  var _isArrayEqualJs = require(_dependencyMap[8], \"./isArrayEqual.js\");\n  var _isRecordEqualJs = require(_dependencyMap[9], \"./isRecordEqual.js\");\n  var _NavigationHelpersContextJs = require(_dependencyMap[10], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContextJs = require(_dependencyMap[11], \"./NavigationRouteContext.js\");\n  var _NavigationStateContextJs = require(_dependencyMap[12], \"./NavigationStateContext.js\");\n  var _PreventRemoveProviderJs = require(_dependencyMap[13], \"./PreventRemoveProvider.js\");\n  var _ScreenJs = require(_dependencyMap[14], \"./Screen.js\");\n  var _typesJs = require(_dependencyMap[15], \"./types.js\");\n  var _UnhandledActionContextJs = require(_dependencyMap[16], \"./UnhandledActionContext.js\");\n  var _useChildListenersJs = require(_dependencyMap[17], \"./useChildListeners.js\");\n  var _useClientLayoutEffectJs = require(_dependencyMap[18], \"./useClientLayoutEffect.js\");\n  var _useComponentJs = require(_dependencyMap[19], \"./useComponent.js\");\n  var _useCurrentRenderJs = require(_dependencyMap[20], \"./useCurrentRender.js\");\n  var _useDescriptorsJs = require(_dependencyMap[21], \"./useDescriptors.js\");\n  var _useEventEmitterJs = require(_dependencyMap[22], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapterJs = require(_dependencyMap[23], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEventsJs = require(_dependencyMap[24], \"./useFocusEvents.js\");\n  var _useKeyedChildListenersJs = require(_dependencyMap[25], \"./useKeyedChildListeners.js\");\n  var _useLazyValueJs = require(_dependencyMap[26], \"./useLazyValue.js\");\n  var _useNavigationHelpersJs = require(_dependencyMap[27], \"./useNavigationHelpers.js\");\n  var _useNavigationStateJs = require(_dependencyMap[28], \"./useNavigationState.js\");\n  var _useOnActionJs = require(_dependencyMap[29], \"./useOnAction.js\");\n  var _useOnGetStateJs = require(_dependencyMap[30], \"./useOnGetState.js\");\n  var _useOnRouteFocusJs = require(_dependencyMap[31], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigatorJs = require(_dependencyMap[32], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdateJs = require(_dependencyMap[33], \"./useScheduleUpdate.js\");\n  var _reactJsxRuntime = require(_dependencyMap[34], \"react/jsx-runtime\");\n  _typesJs.PrivateValueStore;\n  const isScreen = child => {\n    return child.type === _ScreenJs.Screen;\n  };\n  const isGroup = child => {\n    return child.type === React.Fragment || child.type === _GroupJs.Group;\n  };\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _GroupJs.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n  const getStateFromParams = params => {\n    if (params?.state != null) {\n      return params.state;\n    } else if (typeof params?.screen === 'string' && params?.initial !== false) {\n      return {\n        routes: [{\n          name: params.screen,\n          params: params.params,\n          path: params.path\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigatorJs.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContextJs.NavigationRouteContext);\n    const {\n        children,\n        layout,\n        screenOptions,\n        screenLayout,\n        screenListeners,\n        UNSTABLE_router\n      } = options,\n      rest = (0, _objectWithoutPropertiesLoose.default)(options, _excluded);\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValueJs.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return Object.assign({}, original, overrides);\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const doesStateHaveOnlyInvalidRoutes = React.useCallback(state => state.routes.every(r => !routeNames.includes(r.name)), [routeNames]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContextJs.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [stateBeforeInitialization, initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? Object.assign({}, initialParams, initialParamsFromParams) : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [undefined, router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        const stateFromParams = getStateFromParams(route?.params);\n        const stateBeforeInitialization = stateFromParams ?? currentState;\n        const hydratedState = router.getRehydratedState(stateBeforeInitialization, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        });\n        if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && doesStateHaveOnlyInvalidRoutes(stateBeforeInitialization)) {\n          return [stateBeforeInitialization, hydratedState, true];\n        }\n        return [undefined, hydratedState, false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    const [unhandledState, setUnhandledState] = React.useState(stateBeforeInitialization);\n\n    // An unhandled state is state that didn't have any valid routes\n    // So it was unhandled, i.e. not used for initializing the state\n    // It's possible that they were absent due to conditional render\n    // Store this state so we can reuse it if the routes change later\n    if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && stateBeforeInitialization && unhandledState !== stateBeforeInitialization) {\n      setUnhandledState(stateBeforeInitialization);\n    }\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    let shouldClearUnhandledState = false;\n\n    // Previously unhandled state is now valid again\n    // And current state no longer has any valid routes\n    // We should reuse the unhandled state instead of re-calculating the state\n    if (unhandledState?.routes.every(r => routeNames.includes(r.name)) && state?.routes.every(r => !routeNames.includes(r.name))) {\n      shouldClearUnhandledState = true;\n      nextState = router.getRehydratedState(unhandledState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      });\n    } else if (!(0, _isArrayEqualJs.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqualJs.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && doesStateHaveOnlyInvalidRoutes(route.params.state)) {\n          if (route.params.state !== unhandledState) {\n            setUnhandledState(route.params.state);\n          }\n        } else {\n          // If the route was updated with new state, we should reset to it\n          action = _reactNavigationRouters.CommonActions.reset(route.params.state);\n        }\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && !routeNames.includes(route.params.screen)) {\n          const state = getStateFromParams(route.params);\n          if (state != null && !(0, deepEqual.default)(state, unhandledState)) {\n            setUnhandledState(state);\n          }\n        } else {\n          // If the route was updated with new screen name and/or params, we should navigate there\n          action = _reactNavigationRouters.CommonActions.navigate({\n            name: route.params.screen,\n            params: route.params.params,\n            path: route.params.path,\n            merge: route.params.merge,\n            pop: route.params.pop\n          });\n        }\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdateJs.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n        if (shouldClearUnhandledState) {\n          setUnhandledState(undefined);\n        }\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useClientLayoutEffectJs.useClientLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreezeJs.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitterJs.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEventsJs.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListenersJs.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListenersJs.useKeyedChildListeners)();\n    const onAction = (0, _useOnActionJs.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocusJs.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const onUnhandledActionParent = React.useContext(_UnhandledActionContextJs.UnhandledActionContext);\n    const onUnhandledAction = (0, useLatestCallback.default)(action => {\n      if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && action.type === 'NAVIGATE' && action.payload != null && 'name' in action.payload && typeof action.payload.name === 'string' && !routeNames.includes(action.payload.name)) {\n        const state = {\n          routes: [{\n            name: action.payload.name,\n            params: 'params' in action.payload && typeof action.payload.params === 'object' && action.payload.params !== null ? action.payload.params : undefined,\n            path: 'path' in action.payload && typeof action.payload.path === 'string' ? action.payload.path : undefined\n          }]\n        };\n        setUnhandledState(state);\n      }\n      onUnhandledActionParent?.(action);\n    });\n    const navigation = (0, _useNavigationHelpersJs.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      onUnhandledAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapterJs.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetStateJs.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptorsJs.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRenderJs.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponentJs.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_NavigationHelpersContextJs.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_useNavigationStateJs.NavigationStateListenerProvider, {\n          state: state,\n          children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_PreventRemoveProviderJs.PreventRemoveProvider, {\n            children: element\n          })\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":591,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,8,1,13,"_excluded"],[4,17,1,13],[4,115,37,0],[5,2,38,0],[6,2,38,0,"Object"],[6,8,38,0],[6,9,38,0,"defineProperty"],[6,23,38,0],[6,24,38,0,"exports"],[6,31,38,0],[7,4,38,0,"value"],[7,9,38,0],[8,2,38,0],[9,2,38,0],[9,11,38,0,"_interopDefault"],[9,27,38,0,"e"],[9,28,38,0],[10,4,38,0],[10,11,38,0,"e"],[10,12,38,0],[10,16,38,0,"e"],[10,17,38,0],[10,18,38,0,"__esModule"],[10,28,38,0],[10,31,38,0,"e"],[10,32,38,0],[11,6,38,0,"default"],[11,13,38,0],[11,15,38,0,"e"],[12,4,38,0],[13,2,38,0],[14,2,38,0],[14,11,38,0,"_interopNamespace"],[14,29,38,0,"e"],[14,30,38,0],[15,4,38,0],[15,8,38,0,"e"],[15,9,38,0],[15,13,38,0,"e"],[15,14,38,0],[15,15,38,0,"__esModule"],[15,25,38,0],[15,34,38,0,"e"],[15,35,38,0],[16,4,38,0],[16,8,38,0,"n"],[16,9,38,0],[17,4,38,0],[17,8,38,0,"e"],[17,9,38,0],[17,11,38,0,"Object"],[17,17,38,0],[17,18,38,0,"keys"],[17,22,38,0],[17,23,38,0,"e"],[17,24,38,0],[17,26,38,0,"forEach"],[17,33,38,0],[17,44,38,0,"k"],[17,45,38,0],[18,6,38,0],[18,10,38,0,"d"],[18,11,38,0],[18,14,38,0,"Object"],[18,20,38,0],[18,21,38,0,"getOwnPropertyDescriptor"],[18,45,38,0],[18,46,38,0,"e"],[18,47,38,0],[18,49,38,0,"k"],[18,50,38,0],[19,6,38,0,"Object"],[19,12,38,0],[19,13,38,0,"defineProperty"],[19,27,38,0],[19,28,38,0,"n"],[19,29,38,0],[19,31,38,0,"k"],[19,32,38,0],[19,34,38,0,"d"],[19,35,38,0],[19,36,38,0,"get"],[19,39,38,0],[19,42,38,0,"d"],[19,43,38,0],[20,8,38,0,"enumerable"],[20,18,38,0],[21,8,38,0,"get"],[21,11,38,0],[21,22,38,0,"get"],[21,23,38,0],[22,10,38,0],[22,17,38,0,"e"],[22,18,38,0],[22,19,38,0,"k"],[22,20,38,0],[23,8,38,0],[24,6,38,0],[25,4,38,0],[26,4,38,0,"n"],[26,5,38,0],[26,6,38,0,"default"],[26,13,38,0],[26,16,38,0,"e"],[26,17,38,0],[27,4,38,0],[27,11,38,0,"n"],[27,12,38,0],[28,2,38,0],[29,2,160,0,"exports"],[29,9,160,0],[29,10,160,0,"useNavigationBuilder"],[29,30,160,0],[29,33,160,0,"useNavigationBuilder"],[29,53,160,0],[30,2,567,1],[30,6,567,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[30,54,567,1],[30,57,567,1,"require"],[30,64,567,1],[30,65,567,1,"_dependencyMap"],[30,79,567,1],[31,2,567,1],[31,6,567,1,"_objectWithoutPropertiesLoose"],[31,35,567,1],[31,38,567,1,"_interopDefault"],[31,53,567,1],[31,54,567,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[31,102,567,1],[32,2,3,0],[32,6,3,0,"_reactNavigationRouters"],[32,29,3,0],[32,32,3,0,"require"],[32,39,3,0],[32,40,3,0,"_dependencyMap"],[32,54,3,0],[33,2,4,0],[33,6,4,0,"_fastDeepEqual"],[33,20,4,0],[33,23,4,0,"require"],[33,30,4,0],[33,31,4,0,"_dependencyMap"],[33,45,4,0],[34,2,4,0],[34,6,4,0,"deepEqual"],[34,15,4,0],[34,18,4,0,"_interopDefault"],[34,33,4,0],[34,34,4,0,"_fastDeepEqual"],[34,48,4,0],[35,2,5,0],[35,6,5,0,"_react"],[35,12,5,0],[35,15,5,0,"require"],[35,22,5,0],[35,23,5,0,"_dependencyMap"],[35,37,5,0],[36,2,5,0],[36,6,5,0,"React"],[36,11,5,0],[36,14,5,0,"_interopNamespace"],[36,31,5,0],[36,32,5,0,"_react"],[36,38,5,0],[37,2,6,0],[37,6,6,0,"_reactIs"],[37,14,6,0],[37,17,6,0,"require"],[37,24,6,0],[37,25,6,0,"_dependencyMap"],[37,39,6,0],[38,2,7,0],[38,6,7,0,"_useLatestCallback"],[38,24,7,0],[38,27,7,0,"require"],[38,34,7,0],[38,35,7,0,"_dependencyMap"],[38,49,7,0],[39,2,7,0],[39,6,7,0,"useLatestCallback"],[39,23,7,0],[39,26,7,0,"_interopDefault"],[39,41,7,0],[39,42,7,0,"_useLatestCallback"],[39,60,7,0],[40,2,8,0],[40,6,8,0,"_deepFreezeJs"],[40,19,8,0],[40,22,8,0,"require"],[40,29,8,0],[40,30,8,0,"_dependencyMap"],[40,44,8,0],[41,2,9,0],[41,6,9,0,"_GroupJs"],[41,14,9,0],[41,17,9,0,"require"],[41,24,9,0],[41,25,9,0,"_dependencyMap"],[41,39,9,0],[42,2,10,0],[42,6,10,0,"_isArrayEqualJs"],[42,21,10,0],[42,24,10,0,"require"],[42,31,10,0],[42,32,10,0,"_dependencyMap"],[42,46,10,0],[43,2,11,0],[43,6,11,0,"_isRecordEqualJs"],[43,22,11,0],[43,25,11,0,"require"],[43,32,11,0],[43,33,11,0,"_dependencyMap"],[43,47,11,0],[44,2,12,0],[44,6,12,0,"_NavigationHelpersContextJs"],[44,33,12,0],[44,36,12,0,"require"],[44,43,12,0],[44,44,12,0,"_dependencyMap"],[44,58,12,0],[45,2,13,0],[45,6,13,0,"_NavigationRouteContextJs"],[45,31,13,0],[45,34,13,0,"require"],[45,41,13,0],[45,42,13,0,"_dependencyMap"],[45,56,13,0],[46,2,14,0],[46,6,14,0,"_NavigationStateContextJs"],[46,31,14,0],[46,34,14,0,"require"],[46,41,14,0],[46,42,14,0,"_dependencyMap"],[46,56,14,0],[47,2,15,0],[47,6,15,0,"_PreventRemoveProviderJs"],[47,30,15,0],[47,33,15,0,"require"],[47,40,15,0],[47,41,15,0,"_dependencyMap"],[47,55,15,0],[48,2,16,0],[48,6,16,0,"_ScreenJs"],[48,15,16,0],[48,18,16,0,"require"],[48,25,16,0],[48,26,16,0,"_dependencyMap"],[48,40,16,0],[49,2,17,0],[49,6,17,0,"_typesJs"],[49,14,17,0],[49,17,17,0,"require"],[49,24,17,0],[49,25,17,0,"_dependencyMap"],[49,39,17,0],[50,2,18,0],[50,6,18,0,"_UnhandledActionContextJs"],[50,31,18,0],[50,34,18,0,"require"],[50,41,18,0],[50,42,18,0,"_dependencyMap"],[50,56,18,0],[51,2,19,0],[51,6,19,0,"_useChildListenersJs"],[51,26,19,0],[51,29,19,0,"require"],[51,36,19,0],[51,37,19,0,"_dependencyMap"],[51,51,19,0],[52,2,20,0],[52,6,20,0,"_useClientLayoutEffectJs"],[52,30,20,0],[52,33,20,0,"require"],[52,40,20,0],[52,41,20,0,"_dependencyMap"],[52,55,20,0],[53,2,21,0],[53,6,21,0,"_useComponentJs"],[53,21,21,0],[53,24,21,0,"require"],[53,31,21,0],[53,32,21,0,"_dependencyMap"],[53,46,21,0],[54,2,22,0],[54,6,22,0,"_useCurrentRenderJs"],[54,25,22,0],[54,28,22,0,"require"],[54,35,22,0],[54,36,22,0,"_dependencyMap"],[54,50,22,0],[55,2,23,0],[55,6,23,0,"_useDescriptorsJs"],[55,23,23,0],[55,26,23,0,"require"],[55,33,23,0],[55,34,23,0,"_dependencyMap"],[55,48,23,0],[56,2,24,0],[56,6,24,0,"_useEventEmitterJs"],[56,24,24,0],[56,27,24,0,"require"],[56,34,24,0],[56,35,24,0,"_dependencyMap"],[56,49,24,0],[57,2,25,0],[57,6,25,0,"_useFocusedListenersChildrenAdapterJs"],[57,43,25,0],[57,46,25,0,"require"],[57,53,25,0],[57,54,25,0,"_dependencyMap"],[57,68,25,0],[58,2,26,0],[58,6,26,0,"_useFocusEventsJs"],[58,23,26,0],[58,26,26,0,"require"],[58,33,26,0],[58,34,26,0,"_dependencyMap"],[58,48,26,0],[59,2,27,0],[59,6,27,0,"_useKeyedChildListenersJs"],[59,31,27,0],[59,34,27,0,"require"],[59,41,27,0],[59,42,27,0,"_dependencyMap"],[59,56,27,0],[60,2,28,0],[60,6,28,0,"_useLazyValueJs"],[60,21,28,0],[60,24,28,0,"require"],[60,31,28,0],[60,32,28,0,"_dependencyMap"],[60,46,28,0],[61,2,29,0],[61,6,29,0,"_useNavigationHelpersJs"],[61,29,29,0],[61,32,29,0,"require"],[61,39,29,0],[61,40,29,0,"_dependencyMap"],[61,54,29,0],[62,2,30,0],[62,6,30,0,"_useNavigationStateJs"],[62,27,30,0],[62,30,30,0,"require"],[62,37,30,0],[62,38,30,0,"_dependencyMap"],[62,52,30,0],[63,2,31,0],[63,6,31,0,"_useOnActionJs"],[63,20,31,0],[63,23,31,0,"require"],[63,30,31,0],[63,31,31,0,"_dependencyMap"],[63,45,31,0],[64,2,32,0],[64,6,32,0,"_useOnGetStateJs"],[64,22,32,0],[64,25,32,0,"require"],[64,32,32,0],[64,33,32,0,"_dependencyMap"],[64,47,32,0],[65,2,33,0],[65,6,33,0,"_useOnRouteFocusJs"],[65,24,33,0],[65,27,33,0,"require"],[65,34,33,0],[65,35,33,0,"_dependencyMap"],[65,49,33,0],[66,2,34,0],[66,6,34,0,"_useRegisterNavigatorJs"],[66,29,34,0],[66,32,34,0,"require"],[66,39,34,0],[66,40,34,0,"_dependencyMap"],[66,54,34,0],[67,2,35,0],[67,6,35,0,"_useScheduleUpdateJs"],[67,26,35,0],[67,29,35,0,"require"],[67,36,35,0],[67,37,35,0,"_dependencyMap"],[67,51,35,0],[68,2,39,0],[68,6,39,0,"_reactJsxRuntime"],[68,22,39,0],[68,25,39,0,"require"],[68,32,39,0],[68,33,39,0,"_dependencyMap"],[68,47,39,0],[69,2,40,0,"PrivateValueStore"],[69,10,40,17],[69,11,40,17,"PrivateValueStore"],[69,28,40,17],[70,2,41,0],[70,8,41,6,"isScreen"],[70,16,41,14],[70,19,41,17,"child"],[70,24,41,22],[70,28,41,26],[71,4,42,2],[71,11,42,9,"child"],[71,16,42,14],[71,17,42,15,"type"],[71,21,42,19],[71,26,42,24,"Screen"],[71,35,42,30],[71,36,42,30,"Screen"],[71,42,42,30],[72,2,43,0],[72,3,43,1],[73,2,44,0],[73,8,44,6,"isGroup"],[73,15,44,13],[73,18,44,16,"child"],[73,23,44,21],[73,27,44,25],[74,4,45,2],[74,11,45,9,"child"],[74,16,45,14],[74,17,45,15,"type"],[74,21,45,19],[74,26,45,24,"React"],[74,31,45,29],[74,32,45,30,"Fragment"],[74,40,45,38],[74,44,45,42,"child"],[74,49,45,47],[74,50,45,48,"type"],[74,54,45,52],[74,59,45,57,"Group"],[74,67,45,62],[74,68,45,62,"Group"],[74,73,45,62],[75,2,46,0],[75,3,46,1],[76,2,47,0],[76,8,47,6,"isValidKey"],[76,18,47,16],[76,21,47,19,"key"],[76,24,47,22],[76,28,47,26,"key"],[76,31,47,29],[76,36,47,34,"undefined"],[76,45,47,43],[76,49,47,47],[76,56,47,54,"key"],[76,59,47,57],[76,64,47,62],[76,72,47,70],[76,76,47,74,"key"],[76,79,47,77],[76,84,47,82],[76,86,47,84],[78,2,49,0],[79,0,50,0],[80,0,51,0],[81,0,52,0],[82,0,53,0],[83,2,54,0],[83,8,54,6,"getRouteConfigsFromChildren"],[83,35,54,33],[83,38,54,36,"getRouteConfigsFromChildren"],[83,39,54,37,"children"],[83,47,54,45],[83,49,54,47,"groupKey"],[83,57,54,55],[83,59,54,57,"groupOptions"],[83,71,54,69],[83,73,54,71,"groupLayout"],[83,84,54,82],[83,89,54,87],[84,4,55,2],[84,10,55,8,"configs"],[84,17,55,15],[84,20,55,18,"React"],[84,25,55,23],[84,26,55,24,"Children"],[84,34,55,32],[84,35,55,33,"toArray"],[84,42,55,40],[84,43,55,41,"children"],[84,51,55,49],[84,52,55,50],[84,53,55,51,"reduce"],[84,59,55,57],[84,60,55,58],[84,61,55,59,"acc"],[84,64,55,62],[84,66,55,64,"child"],[84,71,55,69],[84,76,55,74],[85,6,56,4],[85,10,56,8],[85,23,56,21,"React"],[85,28,56,26],[85,29,56,27,"isValidElement"],[85,43,56,41],[85,44,56,42,"child"],[85,49,56,47],[85,50,56,48],[85,52,56,50],[86,8,57,6],[86,12,57,10,"isScreen"],[86,20,57,18],[86,21,57,19,"child"],[86,26,57,24],[86,27,57,25],[86,29,57,27],[87,10,58,8],[88,10,59,8],[90,10,61,8],[90,14,61,12],[90,21,61,19,"child"],[90,26,61,24],[90,27,61,25,"props"],[90,32,61,30],[90,37,61,35],[90,45,61,43],[90,49,61,47,"child"],[90,54,61,52],[90,55,61,53,"props"],[90,60,61,58],[90,65,61,63],[90,69,61,67],[90,71,61,69],[91,12,62,10],[91,18,62,16],[91,22,62,20,"Error"],[91,27,62,25],[91,28,62,26],[91,64,62,62],[91,65,62,63],[92,10,63,8],[93,10,64,8],[93,14,64,12],[93,21,64,19,"child"],[93,26,64,24],[93,27,64,25,"props"],[93,32,64,30],[93,33,64,31,"name"],[93,37,64,35],[93,42,64,40],[93,50,64,48],[93,54,64,52,"child"],[93,59,64,57],[93,60,64,58,"props"],[93,65,64,63],[93,66,64,64,"name"],[93,70,64,68],[93,75,64,73],[93,77,64,75],[93,79,64,77],[94,12,65,10],[94,18,65,16],[94,22,65,20,"Error"],[94,27,65,25],[94,28,65,26],[94,52,65,50,"JSON"],[94,56,65,54],[94,57,65,55,"stringify"],[94,66,65,64],[94,67,65,65,"child"],[94,72,65,70],[94,73,65,71,"props"],[94,78,65,76],[94,79,65,77,"name"],[94,83,65,81],[94,84,65,82],[94,134,65,132],[94,135,65,133],[95,10,66,8],[96,10,67,8],[96,14,67,12,"child"],[96,19,67,17],[96,20,67,18,"props"],[96,25,67,23],[96,26,67,24,"navigationKey"],[96,39,67,37],[96,44,67,42,"undefined"],[96,53,67,51],[96,58,67,56],[96,65,67,63,"child"],[96,70,67,68],[96,71,67,69,"props"],[96,76,67,74],[96,77,67,75,"navigationKey"],[96,90,67,88],[96,95,67,93],[96,103,67,101],[96,107,67,105,"child"],[96,112,67,110],[96,113,67,111,"props"],[96,118,67,116],[96,119,67,117,"navigationKey"],[96,132,67,130],[96,137,67,135],[96,139,67,137],[96,140,67,138],[96,142,67,140],[97,12,68,10],[97,18,68,16],[97,22,68,20,"Error"],[97,27,68,25],[97,28,68,26],[97,68,68,66,"JSON"],[97,72,68,70],[97,73,68,71,"stringify"],[97,82,68,80],[97,83,68,81,"child"],[97,88,68,86],[97,89,68,87,"props"],[97,94,68,92],[97,95,68,93,"navigationKey"],[97,108,68,106],[97,109,68,107],[97,130,68,128,"child"],[97,135,68,133],[97,136,68,134,"props"],[97,141,68,139],[97,142,68,140,"name"],[97,146,68,144],[97,196,68,194],[97,197,68,195],[98,10,69,8],[99,10,70,8,"acc"],[99,13,70,11],[99,14,70,12,"push"],[99,18,70,16],[99,19,70,17],[100,12,71,10,"keys"],[100,16,71,14],[100,18,71,16],[100,19,71,17,"groupKey"],[100,27,71,25],[100,29,71,27,"child"],[100,34,71,32],[100,35,71,33,"props"],[100,40,71,38],[100,41,71,39,"navigationKey"],[100,54,71,52],[100,55,71,53],[101,12,72,10,"options"],[101,19,72,17],[101,21,72,19,"groupOptions"],[101,33,72,31],[102,12,73,10,"layout"],[102,18,73,16],[102,20,73,18,"groupLayout"],[102,31,73,29],[103,12,74,10,"props"],[103,17,74,15],[103,19,74,17,"child"],[103,24,74,22],[103,25,74,23,"props"],[104,10,75,8],[104,11,75,9],[104,12,75,10],[105,10,76,8],[105,17,76,15,"acc"],[105,20,76,18],[106,8,77,6],[107,8,78,6],[107,12,78,10,"isGroup"],[107,19,78,17],[107,20,78,18,"child"],[107,25,78,23],[107,26,78,24],[107,28,78,26],[108,10,79,8],[108,14,79,12],[108,15,79,13,"isValidKey"],[108,25,79,23],[108,26,79,24,"child"],[108,31,79,29],[108,32,79,30,"props"],[108,37,79,35],[108,38,79,36,"navigationKey"],[108,51,79,49],[108,52,79,50],[108,54,79,52],[109,12,80,10],[109,18,80,16],[109,22,80,20,"Error"],[109,27,80,25],[109,28,80,26],[109,68,80,66,"JSON"],[109,72,80,70],[109,73,80,71,"stringify"],[109,82,80,80],[109,83,80,81,"child"],[109,88,80,86],[109,89,80,87,"props"],[109,94,80,92],[109,95,80,93,"navigationKey"],[109,108,80,106],[109,109,80,107],[109,173,80,171],[109,174,80,172],[110,10,81,8],[112,10,83,8],[113,10,84,8],[114,10,85,8,"acc"],[114,13,85,11],[114,14,85,12,"push"],[114,18,85,16],[114,19,85,17],[114,22,85,20,"getRouteConfigsFromChildren"],[114,49,85,47],[114,50,85,48,"child"],[114,55,85,53],[114,56,85,54,"props"],[114,61,85,59],[114,62,85,60,"children"],[114,70,85,68],[114,72,85,70,"child"],[114,77,85,75],[114,78,85,76,"props"],[114,83,85,81],[114,84,85,82,"navigationKey"],[114,97,85,95],[115,10,86,8],[116,10,87,8],[117,10,88,8,"child"],[117,15,88,13],[117,16,88,14,"type"],[117,20,88,18],[117,25,88,23,"Group"],[117,33,88,28],[117,34,88,28,"Group"],[117,39,88,28],[117,42,88,31,"groupOptions"],[117,54,88,43],[117,57,88,46,"groupOptions"],[117,69,88,58],[117,73,88,62],[117,77,88,66],[117,80,88,69],[117,81,88,70],[117,84,88,73,"groupOptions"],[117,96,88,85],[117,98,88,87,"child"],[117,103,88,92],[117,104,88,93,"props"],[117,109,88,98],[117,110,88,99,"screenOptions"],[117,123,88,112],[117,124,88,113],[117,127,88,116],[117,128,88,117,"child"],[117,133,88,122],[117,134,88,123,"props"],[117,139,88,128],[117,140,88,129,"screenOptions"],[117,153,88,142],[117,154,88,143],[117,156,88,145],[117,163,88,152,"child"],[117,168,88,157],[117,169,88,158,"props"],[117,174,88,163],[117,175,88,164,"screenLayout"],[117,187,88,176],[117,192,88,181],[117,202,88,191],[117,205,88,194,"child"],[117,210,88,199],[117,211,88,200,"props"],[117,216,88,205],[117,217,88,206,"screenLayout"],[117,229,88,218],[117,232,88,221,"groupLayout"],[117,243,88,232],[117,244,88,233],[117,245,88,234],[118,10,89,8],[118,17,89,15,"acc"],[118,20,89,18],[119,8,90,6],[120,6,91,4],[121,6,92,4],[121,12,92,10],[121,16,92,14,"Error"],[121,21,92,19],[121,22,92,20],[121,122,92,120],[121,135,92,133],[121,149,92,133,"React"],[121,154,92,138],[121,155,92,139,"isValidElement"],[121,169,92,153],[121,170,92,154,"child"],[121,175,92,159],[121,176,92,160],[121,179,92,163],[121,183,92,167],[121,190,92,174,"child"],[121,195,92,179],[121,196,92,180,"type"],[121,200,92,184],[121,205,92,189],[121,213,92,197],[121,216,92,200,"child"],[121,221,92,205],[121,222,92,206,"type"],[121,226,92,210],[121,229,92,213,"child"],[121,234,92,218],[121,235,92,219,"type"],[121,239,92,223],[121,241,92,225,"name"],[121,245,92,229],[121,249,92,233,"child"],[121,254,92,238],[121,255,92,239,"props"],[121,260,92,244],[121,264,92,248],[121,268,92,252],[121,272,92,256],[121,279,92,263,"child"],[121,284,92,268],[121,285,92,269,"props"],[121,290,92,274],[121,295,92,279],[121,303,92,287],[121,307,92,291],[121,313,92,297],[121,317,92,301,"child"],[121,322,92,306],[121,323,92,307,"props"],[121,328,92,312],[121,332,92,316,"child"],[121,337,92,321],[121,338,92,322,"props"],[121,343,92,327],[121,345,92,329,"name"],[121,349,92,333],[121,352,92,336],[121,372,92,356,"child"],[121,377,92,361],[121,378,92,362,"props"],[121,383,92,367],[121,384,92,368,"name"],[121,388,92,372],[121,391,92,375],[121,394,92,378],[121,396,92,380],[121,398,92,382],[121,401,92,385],[121,408,92,392,"child"],[121,413,92,397],[121,418,92,402],[121,426,92,410],[121,429,92,413,"JSON"],[121,433,92,417],[121,434,92,418,"stringify"],[121,443,92,427],[121,444,92,428,"child"],[121,449,92,433],[121,450,92,434],[121,453,92,437],[121,457,92,441,"String"],[121,463,92,447],[121,464,92,448,"child"],[121,469,92,453],[121,470,92,454],[121,473,92,457],[121,565,92,549],[121,566,92,550],[122,4,93,2],[122,5,93,3],[122,7,93,5],[122,9,93,7],[122,10,93,8],[123,4,94,2],[123,8,94,6,"process"],[123,15,94,13],[123,16,94,14,"env"],[123,19,94,17],[123,20,94,18,"NODE_ENV"],[123,28,94,26],[123,33,94,31],[123,45,94,43],[123,47,94,45],[124,6,95,4,"configs"],[124,13,95,11],[124,14,95,12,"forEach"],[124,21,95,19],[124,22,95,20,"config"],[124,28,95,26],[124,32,95,30],[125,8,96,6],[125,14,96,12],[126,10,97,8,"name"],[126,14,97,12],[127,10,98,8,"children"],[127,18,98,16],[128,10,99,8,"component"],[128,19,99,17],[129,10,100,8,"getComponent"],[130,8,101,6],[130,9,101,7],[130,12,101,10,"config"],[130,18,101,16],[130,19,101,17,"props"],[130,24,101,22],[131,8,102,6],[131,12,102,10,"children"],[131,20,102,18],[131,24,102,22],[131,28,102,26],[131,32,102,30,"component"],[131,41,102,39],[131,46,102,44,"undefined"],[131,55,102,53],[131,59,102,57,"getComponent"],[131,71,102,69],[131,76,102,74,"undefined"],[131,85,102,83],[131,87,102,85],[132,10,103,8],[132,14,103,12,"children"],[132,22,103,20],[132,26,103,24],[132,30,103,28],[132,34,103,32,"component"],[132,43,103,41],[132,48,103,46,"undefined"],[132,57,103,55],[132,59,103,57],[133,12,104,10],[133,18,104,16],[133,22,104,20,"Error"],[133,27,104,25],[133,28,104,26],[133,89,104,87,"name"],[133,93,104,91],[133,129,104,127],[133,130,104,128],[134,10,105,8],[135,10,106,8],[135,14,106,12,"children"],[135,22,106,20],[135,26,106,24],[135,30,106,28],[135,34,106,32,"getComponent"],[135,46,106,44],[135,51,106,49,"undefined"],[135,60,106,58],[135,62,106,60],[136,12,107,10],[136,18,107,16],[136,22,107,20,"Error"],[136,27,107,25],[136,28,107,26],[136,92,107,90,"name"],[136,96,107,94],[136,132,107,130],[136,133,107,131],[137,10,108,8],[138,10,109,8],[138,14,109,12,"component"],[138,23,109,21],[138,28,109,26,"undefined"],[138,37,109,35],[138,41,109,39,"getComponent"],[138,53,109,51],[138,58,109,56,"undefined"],[138,67,109,65],[138,69,109,67],[139,12,110,10],[139,18,110,16],[139,22,110,20,"Error"],[139,27,110,25],[139,28,110,26],[139,93,110,91,"name"],[139,97,110,95],[139,133,110,131],[139,134,110,132],[140,10,111,8],[141,10,112,8],[141,14,112,12,"children"],[141,22,112,20],[141,26,112,24],[141,30,112,28],[141,34,112,32],[141,41,112,39,"children"],[141,49,112,47],[141,54,112,52],[141,64,112,62],[141,66,112,64],[142,12,113,10],[142,18,113,16],[142,22,113,20,"Error"],[142,27,113,25],[142,28,113,26],[142,88,113,86,"name"],[142,92,113,90],[142,145,113,143],[142,146,113,144],[143,10,114,8],[144,10,115,8],[144,14,115,12,"component"],[144,23,115,21],[144,28,115,26,"undefined"],[144,37,115,35],[144,41,115,39],[144,42,115,40],[144,46,115,40,"isValidElementType"],[144,54,115,58],[144,55,115,58,"isValidElementType"],[144,73,115,58],[144,75,115,59,"component"],[144,84,115,68],[144,85,115,69],[144,87,115,71],[145,12,116,10],[145,18,116,16],[145,22,116,20,"Error"],[145,27,116,25],[145,28,116,26],[145,89,116,87,"name"],[145,93,116,91],[145,133,116,131],[145,134,116,132],[146,10,117,8],[147,10,118,8],[147,14,118,12,"getComponent"],[147,26,118,24],[147,31,118,29,"undefined"],[147,40,118,38],[147,44,118,42],[147,51,118,49,"getComponent"],[147,63,118,61],[147,68,118,66],[147,78,118,76],[147,80,118,78],[148,12,119,10],[148,18,119,16],[148,22,119,20,"Error"],[148,27,119,25],[148,28,119,26],[148,92,119,90,"name"],[148,96,119,94],[148,151,119,149],[148,152,119,150],[149,10,120,8],[150,10,121,8],[150,14,121,12],[150,21,121,19,"component"],[150,30,121,28],[150,35,121,33],[150,45,121,43],[150,47,121,45],[151,12,122,10],[151,16,122,14,"component"],[151,25,122,23],[151,26,122,24,"name"],[151,30,122,28],[151,35,122,33],[151,46,122,44],[151,48,122,46],[152,14,123,12],[153,14,124,12],[154,14,125,12],[155,14,126,12,"console"],[155,21,126,19],[155,22,126,20,"warn"],[155,26,126,24],[155,27,126,25],[155,112,126,110,"name"],[155,116,126,114],[155,395,126,393],[155,396,126,394],[156,12,127,10],[156,13,127,11],[156,19,127,17],[156,23,127,21],[156,31,127,29],[156,32,127,30,"test"],[156,36,127,34],[156,37,127,35,"component"],[156,46,127,44],[156,47,127,45,"name"],[156,51,127,49],[156,52,127,50],[156,54,127,52],[157,14,128,12,"console"],[157,21,128,19],[157,22,128,20,"warn"],[157,26,128,24],[157,27,128,25],[157,61,128,59,"component"],[157,70,128,68],[157,71,128,69,"name"],[157,75,128,73],[157,96,128,94,"name"],[157,100,128,98],[157,301,128,299],[157,302,128,300],[158,12,129,10],[159,10,130,8],[160,8,131,6],[160,9,131,7],[160,15,131,13],[161,10,132,8],[161,16,132,14],[161,20,132,18,"Error"],[161,25,132,23],[161,26,132,24],[161,108,132,106,"name"],[161,112,132,110],[161,293,132,291],[161,294,132,292],[162,8,133,6],[163,6,134,4],[163,7,134,5],[163,8,134,6],[164,4,135,2],[165,4,136,2],[165,11,136,9,"configs"],[165,18,136,16],[166,2,137,0],[166,3,137,1],[167,2,138,0],[167,8,138,6,"getStateFromParams"],[167,26,138,24],[167,29,138,27,"params"],[167,35,138,33],[167,39,138,37],[168,4,139,2],[168,8,139,6,"params"],[168,14,139,12],[168,16,139,14,"state"],[168,21,139,19],[168,25,139,23],[168,29,139,27],[168,31,139,29],[169,6,140,4],[169,13,140,11,"params"],[169,19,140,17],[169,20,140,18,"state"],[169,25,140,23],[170,4,141,2],[170,5,141,3],[170,11,141,9],[170,15,141,13],[170,22,141,20,"params"],[170,28,141,26],[170,30,141,28,"screen"],[170,36,141,34],[170,41,141,39],[170,49,141,47],[170,53,141,51,"params"],[170,59,141,57],[170,61,141,59,"initial"],[170,68,141,66],[170,73,141,71],[170,78,141,76],[170,80,141,78],[171,6,142,4],[171,13,142,11],[172,8,143,6,"routes"],[172,14,143,12],[172,16,143,14],[172,17,143,15],[173,10,144,8,"name"],[173,14,144,12],[173,16,144,14,"params"],[173,22,144,20],[173,23,144,21,"screen"],[173,29,144,27],[174,10,145,8,"params"],[174,16,145,14],[174,18,145,16,"params"],[174,24,145,22],[174,25,145,23,"params"],[174,31,145,29],[175,10,146,8,"path"],[175,14,146,12],[175,16,146,14,"params"],[175,22,146,20],[175,23,146,21,"path"],[176,8,147,6],[176,9,147,7],[177,6,148,4],[177,7,148,5],[178,4,149,2],[179,4,150,2],[179,11,150,9,"undefined"],[179,20,150,18],[180,2,151,0],[180,3,151,1],[182,2,153,0],[183,0,154,0],[184,0,155,0],[185,0,156,0],[186,0,157,0],[187,0,158,0],[188,0,159,0],[189,2,160,7],[189,11,160,16,"useNavigationBuilder"],[189,31,160,36,"useNavigationBuilder"],[189,32,160,37,"createRouter"],[189,44,160,49],[189,46,160,51,"options"],[189,53,160,58],[189,55,160,60],[190,4,161,2],[190,10,161,8,"navigatorKey"],[190,22,161,20],[190,25,161,23],[190,29,161,23,"useRegisterNavigator"],[190,52,161,43],[190,53,161,43,"useRegisterNavigator"],[190,73,161,43],[190,75,161,44],[190,76,161,45],[191,4,162,2],[191,10,162,8,"route"],[191,15,162,13],[191,18,162,16,"React"],[191,23,162,21],[191,24,162,22,"useContext"],[191,34,162,32],[191,35,162,33,"NavigationRouteContext"],[191,60,162,55],[191,61,162,55,"NavigationRouteContext"],[191,83,162,55],[191,84,162,56],[192,4,163,2],[192,10,163,8],[193,8,164,4,"children"],[193,16,164,12],[194,8,165,4,"layout"],[194,14,165,10],[195,8,166,4,"screenOptions"],[195,21,166,17],[196,8,167,4,"screenLayout"],[196,20,167,16],[197,8,168,4,"screenListeners"],[197,23,168,19],[198,8,169,4,"UNSTABLE_router"],[199,6,171,2],[199,7,171,3],[199,10,171,6,"options"],[199,17,171,13],[200,6,170,7,"rest"],[200,10,170,11],[200,17,170,11,"_objectWithoutPropertiesLoose"],[200,46,170,11],[200,47,170,11,"default"],[200,54,170,11],[200,56,171,6,"options"],[200,63,171,13],[200,65,171,13,"_excluded"],[200,74,171,13],[201,4,172,2],[201,10,172,8,"routeConfigs"],[201,22,172,20],[201,25,172,23,"getRouteConfigsFromChildren"],[201,52,172,50],[201,53,172,51,"children"],[201,61,172,59],[201,62,172,60],[202,4,173,2],[202,10,173,8,"router"],[202,16,173,14],[202,19,173,17],[202,23,173,17,"useLazyValue"],[202,38,173,29],[202,39,173,29,"useLazyValue"],[202,51,173,29],[202,53,173,30],[202,59,173,36],[203,6,174,4],[203,10,174,8,"rest"],[203,14,174,12],[203,15,174,13,"initialRouteName"],[203,31,174,29],[203,35,174,33],[203,39,174,37],[203,43,174,41,"routeConfigs"],[203,55,174,53],[203,56,174,54,"every"],[203,61,174,59],[203,62,174,60,"config"],[203,68,174,66],[203,72,174,70,"config"],[203,78,174,76],[203,79,174,77,"props"],[203,84,174,82],[203,85,174,83,"name"],[203,89,174,87],[203,94,174,92,"rest"],[203,98,174,96],[203,99,174,97,"initialRouteName"],[203,115,174,113],[203,116,174,114],[203,118,174,116],[204,8,175,6],[204,14,175,12],[204,18,175,16,"Error"],[204,23,175,21],[204,24,175,22],[204,57,175,55,"rest"],[204,61,175,59],[204,62,175,60,"initialRouteName"],[204,78,175,76],[204,111,175,109],[204,112,175,110],[205,6,176,4],[206,6,177,4],[206,12,177,10,"original"],[206,20,177,18],[206,23,177,21,"createRouter"],[206,35,177,33],[206,36,177,34,"rest"],[206,40,177,38],[206,41,177,39],[207,6,178,4],[207,10,178,8,"UNSTABLE_router"],[207,25,178,23],[207,29,178,27],[207,33,178,31],[207,35,178,33],[208,8,179,6],[208,14,179,12,"overrides"],[208,23,179,21],[208,26,179,24,"UNSTABLE_router"],[208,41,179,39],[208,42,179,40,"original"],[208,50,179,48],[208,51,179,49],[209,8,180,6],[209,15,180,6,"Object"],[209,21,180,6],[209,22,180,6,"assign"],[209,28,180,6],[209,33,181,11,"original"],[209,41,181,19],[209,43,182,11,"overrides"],[209,52,182,20],[210,6,184,4],[211,6,185,4],[211,13,185,11,"original"],[211,21,185,19],[212,4,186,2],[212,5,186,3],[212,6,186,4],[213,4,187,2],[213,10,187,8,"screens"],[213,17,187,15],[213,20,187,18,"routeConfigs"],[213,32,187,30],[213,33,187,31,"reduce"],[213,39,187,37],[213,40,187,38],[213,41,187,39,"acc"],[213,44,187,42],[213,46,187,44,"config"],[213,52,187,50],[213,57,187,55],[214,6,188,4],[214,10,188,8,"config"],[214,16,188,14],[214,17,188,15,"props"],[214,22,188,20],[214,23,188,21,"name"],[214,27,188,25],[214,31,188,29,"acc"],[214,34,188,32],[214,36,188,34],[215,8,189,6],[215,14,189,12],[215,18,189,16,"Error"],[215,23,189,21],[215,24,189,22],[215,133,189,131,"config"],[215,139,189,137],[215,140,189,138,"props"],[215,145,189,143],[215,146,189,144,"name"],[215,150,189,148],[215,154,189,152],[215,155,189,153],[216,6,190,4],[217,6,191,4,"acc"],[217,9,191,7],[217,10,191,8,"config"],[217,16,191,14],[217,17,191,15,"props"],[217,22,191,20],[217,23,191,21,"name"],[217,27,191,25],[217,28,191,26],[217,31,191,29,"config"],[217,37,191,35],[218,6,192,4],[218,13,192,11,"acc"],[218,16,192,14],[219,4,193,2],[219,5,193,3],[219,7,193,5],[219,8,193,6],[219,9,193,7],[219,10,193,8],[220,4,194,2],[220,10,194,8,"routeNames"],[220,20,194,18],[220,23,194,21,"routeConfigs"],[220,35,194,33],[220,36,194,34,"map"],[220,39,194,37],[220,40,194,38,"config"],[220,46,194,44],[220,50,194,48,"config"],[220,56,194,54],[220,57,194,55,"props"],[220,62,194,60],[220,63,194,61,"name"],[220,67,194,65],[220,68,194,66],[221,4,195,2],[221,10,195,8,"routeKeyList"],[221,22,195,20],[221,25,195,23,"routeNames"],[221,35,195,33],[221,36,195,34,"reduce"],[221,42,195,40],[221,43,195,41],[221,44,195,42,"acc"],[221,47,195,45],[221,49,195,47,"curr"],[221,53,195,51],[221,58,195,56],[222,6,196,4,"acc"],[222,9,196,7],[222,10,196,8,"curr"],[222,14,196,12],[222,15,196,13],[222,18,196,16,"screens"],[222,25,196,23],[222,26,196,24,"curr"],[222,30,196,28],[222,31,196,29],[222,32,196,30,"keys"],[222,36,196,34],[222,37,196,35,"map"],[222,40,196,38],[222,41,196,39,"key"],[222,44,196,42],[222,48,196,46,"key"],[222,51,196,49],[222,55,196,53],[222,57,196,55],[222,58,196,56],[222,59,196,57,"join"],[222,63,196,61],[222,64,196,62],[222,67,196,65],[222,68,196,66],[223,6,197,4],[223,13,197,11,"acc"],[223,16,197,14],[224,4,198,2],[224,5,198,3],[224,7,198,5],[224,8,198,6],[224,9,198,7],[224,10,198,8],[225,4,199,2],[225,10,199,8,"routeParamList"],[225,24,199,22],[225,27,199,25,"routeNames"],[225,37,199,35],[225,38,199,36,"reduce"],[225,44,199,42],[225,45,199,43],[225,46,199,44,"acc"],[225,49,199,47],[225,51,199,49,"curr"],[225,55,199,53],[225,60,199,58],[226,6,200,4],[226,12,200,10],[227,8,201,6,"initialParams"],[228,6,202,4],[228,7,202,5],[228,10,202,8,"screens"],[228,17,202,15],[228,18,202,16,"curr"],[228,22,202,20],[228,23,202,21],[228,24,202,22,"props"],[228,29,202,27],[229,6,203,4,"acc"],[229,9,203,7],[229,10,203,8,"curr"],[229,14,203,12],[229,15,203,13],[229,18,203,16,"initialParams"],[229,31,203,29],[230,6,204,4],[230,13,204,11,"acc"],[230,16,204,14],[231,4,205,2],[231,5,205,3],[231,7,205,5],[231,8,205,6],[231,9,205,7],[231,10,205,8],[232,4,206,2],[232,10,206,8,"routeGetIdList"],[232,24,206,22],[232,27,206,25,"routeNames"],[232,37,206,35],[232,38,206,36,"reduce"],[232,44,206,42],[232,45,206,43],[232,46,206,44,"acc"],[232,49,206,47],[232,51,206,49,"curr"],[232,55,206,53],[232,60,206,58,"Object"],[232,66,206,64],[232,67,206,65,"assign"],[232,73,206,71],[232,74,206,72,"acc"],[232,77,206,75],[232,79,206,77],[233,6,207,4],[233,7,207,5,"curr"],[233,11,207,9],[233,14,207,12,"screens"],[233,21,207,19],[233,22,207,20,"curr"],[233,26,207,24],[233,27,207,25],[233,28,207,26,"props"],[233,33,207,31],[233,34,207,32,"getId"],[234,4,208,2],[234,5,208,3],[234,6,208,4],[234,8,208,6],[234,9,208,7],[234,10,208,8],[234,11,208,9],[235,4,209,2],[235,8,209,6],[235,9,209,7,"routeNames"],[235,19,209,17],[235,20,209,18,"length"],[235,26,209,24],[235,28,209,26],[236,6,210,4],[236,12,210,10],[236,16,210,14,"Error"],[236,21,210,19],[236,22,210,20],[236,114,210,112],[236,115,210,113],[237,4,211,2],[238,4,212,2],[238,10,212,8,"isStateValid"],[238,22,212,20],[238,25,212,23,"React"],[238,30,212,28],[238,31,212,29,"useCallback"],[238,42,212,40],[238,43,212,41,"state"],[238,48,212,46],[238,52,212,50,"state"],[238,57,212,55],[238,58,212,56,"type"],[238,62,212,60],[238,67,212,65,"undefined"],[238,76,212,74],[238,80,212,78,"state"],[238,85,212,83],[238,86,212,84,"type"],[238,90,212,88],[238,95,212,93,"router"],[238,101,212,99],[238,102,212,100,"type"],[238,106,212,104],[238,108,212,106],[238,109,212,107,"router"],[238,115,212,113],[238,116,212,114,"type"],[238,120,212,118],[238,121,212,119],[238,122,212,120],[239,4,213,2],[239,10,213,8,"isStateInitialized"],[239,28,213,26],[239,31,213,29,"React"],[239,36,213,34],[239,37,213,35,"useCallback"],[239,48,213,46],[239,49,213,47,"state"],[239,54,213,52],[239,58,213,56,"state"],[239,63,213,61],[239,68,213,66,"undefined"],[239,77,213,75],[239,81,213,79,"state"],[239,86,213,84],[239,87,213,85,"stale"],[239,92,213,90],[239,97,213,95],[239,102,213,100],[239,106,213,104,"isStateValid"],[239,118,213,116],[239,119,213,117,"state"],[239,124,213,122],[239,125,213,123],[239,127,213,125],[239,128,213,126,"isStateValid"],[239,140,213,138],[239,141,213,139],[239,142,213,140],[240,4,214,2],[240,10,214,8,"doesStateHaveOnlyInvalidRoutes"],[240,40,214,38],[240,43,214,41,"React"],[240,48,214,46],[240,49,214,47,"useCallback"],[240,60,214,58],[240,61,214,59,"state"],[240,66,214,64],[240,70,214,68,"state"],[240,75,214,73],[240,76,214,74,"routes"],[240,82,214,80],[240,83,214,81,"every"],[240,88,214,86],[240,89,214,87,"r"],[240,90,214,88],[240,94,214,92],[240,95,214,93,"routeNames"],[240,105,214,103],[240,106,214,104,"includes"],[240,114,214,112],[240,115,214,113,"r"],[240,116,214,114],[240,117,214,115,"name"],[240,121,214,119],[240,122,214,120],[240,123,214,121],[240,125,214,123],[240,126,214,124,"routeNames"],[240,136,214,134],[240,137,214,135],[240,138,214,136],[241,4,215,2],[241,10,215,8],[242,6,216,4,"state"],[242,11,216,9],[242,13,216,11,"currentState"],[242,25,216,23],[243,6,217,4,"getState"],[243,14,217,12],[243,16,217,14,"getCurrentState"],[243,31,217,29],[244,6,218,4,"setState"],[244,14,218,12],[244,16,218,14,"setCurrentState"],[244,31,218,29],[245,6,219,4,"setKey"],[245,12,219,10],[246,6,220,4,"getKey"],[246,12,220,10],[247,6,221,4,"getIsInitial"],[248,4,222,2],[248,5,222,3],[248,8,222,6,"React"],[248,13,222,11],[248,14,222,12,"useContext"],[248,24,222,22],[248,25,222,23,"NavigationStateContext"],[248,50,222,45],[248,51,222,45,"NavigationStateContext"],[248,73,222,45],[248,74,222,46],[249,4,223,2],[249,10,223,8,"stateCleanedUp"],[249,24,223,22],[249,27,223,25,"React"],[249,32,223,30],[249,33,223,31,"useRef"],[249,39,223,37],[249,40,223,38],[249,45,223,43],[249,46,223,44],[250,4,224,2],[250,10,224,8,"setState"],[250,18,224,16],[250,21,224,19],[250,25,224,19,"useLatestCallback"],[250,42,224,36],[250,43,224,36,"default"],[250,50,224,36],[250,52,224,37,"state"],[250,57,224,42],[250,61,224,46],[251,6,225,4],[251,10,225,8,"stateCleanedUp"],[251,24,225,22],[251,25,225,23,"current"],[251,32,225,30],[251,34,225,32],[252,8,226,6],[253,8,227,6],[254,8,228,6],[255,8,229,6],[256,6,230,4],[257,6,231,4,"setCurrentState"],[257,21,231,19],[257,22,231,20,"state"],[257,27,231,25],[257,28,231,26],[258,4,232,2],[258,5,232,3],[258,6,232,4],[259,4,233,2],[259,10,233,8],[259,11,233,9,"stateBeforeInitialization"],[259,36,233,34],[259,38,233,36,"initializedState"],[259,54,233,52],[259,56,233,54,"isFirstStateInitialization"],[259,82,233,80],[259,83,233,81],[259,86,233,84,"React"],[259,91,233,89],[259,92,233,90,"useMemo"],[259,99,233,97],[259,100,233,98],[259,106,233,104],[260,6,234,4],[260,12,234,10,"initialRouteParamList"],[260,33,234,31],[260,36,234,34,"routeNames"],[260,46,234,44],[260,47,234,45,"reduce"],[260,53,234,51],[260,54,234,52],[260,55,234,53,"acc"],[260,58,234,56],[260,60,234,58,"curr"],[260,64,234,62],[260,69,234,67],[261,8,235,6],[261,14,235,12],[262,10,236,8,"initialParams"],[263,8,237,6],[263,9,237,7],[263,12,237,10,"screens"],[263,19,237,17],[263,20,237,18,"curr"],[263,24,237,22],[263,25,237,23],[263,26,237,24,"props"],[263,31,237,29],[264,8,238,6],[264,14,238,12,"initialParamsFromParams"],[264,37,238,35],[264,40,238,38,"route"],[264,45,238,43],[264,47,238,45,"params"],[264,53,238,51],[264,55,238,53,"state"],[264,60,238,58],[264,64,238,62],[264,68,238,66],[264,72,238,70,"route"],[264,77,238,75],[264,79,238,77,"params"],[264,85,238,83],[264,87,238,85,"initial"],[264,94,238,92],[264,99,238,97],[264,104,238,102],[264,108,238,106,"route"],[264,113,238,111],[264,115,238,113,"params"],[264,121,238,119],[264,123,238,121,"screen"],[264,129,238,127],[264,134,238,132,"curr"],[264,138,238,136],[264,141,238,139,"route"],[264,146,238,144],[264,147,238,145,"params"],[264,153,238,151],[264,154,238,152,"params"],[264,160,238,158],[264,163,238,161,"undefined"],[264,172,238,170],[265,8,239,6,"acc"],[265,11,239,9],[265,12,239,10,"curr"],[265,16,239,14],[265,17,239,15],[265,20,239,18,"initialParams"],[265,33,239,31],[265,38,239,36,"undefined"],[265,47,239,45],[265,51,239,49,"initialParamsFromParams"],[265,74,239,72],[265,79,239,77,"undefined"],[265,88,239,86],[265,91,239,86,"Object"],[265,97,239,86],[265,98,239,86,"assign"],[265,104,239,86],[265,109,240,11,"initialParams"],[265,122,240,24],[265,124,241,11,"initialParamsFromParams"],[265,147,241,34],[265,151,242,10,"undefined"],[265,160,242,19],[266,8,243,6],[266,15,243,13,"acc"],[266,18,243,16],[267,6,244,4],[267,7,244,5],[267,9,244,7],[267,10,244,8],[267,11,244,9],[267,12,244,10],[269,6,246,4],[270,6,247,4],[271,6,248,4],[272,6,249,4],[273,6,250,4],[273,10,250,8],[273,11,250,9,"currentState"],[273,23,250,21],[273,28,250,26,"undefined"],[273,37,250,35],[273,41,250,39],[273,42,250,40,"isStateValid"],[273,54,250,52],[273,55,250,53,"currentState"],[273,67,250,65],[273,68,250,66],[273,73,250,71,"route"],[273,78,250,76],[273,80,250,78,"params"],[273,86,250,84],[273,88,250,86,"state"],[273,93,250,91],[273,97,250,95],[273,101,250,99],[273,105,250,103],[273,107,250,105],[273,114,250,112,"route"],[273,119,250,117],[273,121,250,119,"params"],[273,127,250,125],[273,129,250,127,"screen"],[273,135,250,133],[273,140,250,138],[273,148,250,146],[273,152,250,150,"route"],[273,157,250,155],[273,159,250,157,"params"],[273,165,250,163],[273,167,250,165,"initial"],[273,174,250,172],[273,179,250,177],[273,184,250,182],[273,185,250,183],[273,187,250,185],[274,8,251,6],[274,15,251,13],[274,16,251,14,"undefined"],[274,25,251,23],[274,27,251,25,"router"],[274,33,251,31],[274,34,251,32,"getInitialState"],[274,49,251,47],[274,50,251,48],[275,10,252,8,"routeNames"],[275,20,252,18],[276,10,253,8,"routeParamList"],[276,24,253,22],[276,26,253,24,"initialRouteParamList"],[276,47,253,45],[277,10,254,8,"routeGetIdList"],[278,8,255,6],[278,9,255,7],[278,10,255,8],[278,12,255,10],[278,16,255,14],[278,17,255,15],[279,6,256,4],[279,7,256,5],[279,13,256,11],[280,8,257,6],[280,14,257,12,"stateFromParams"],[280,29,257,27],[280,32,257,30,"getStateFromParams"],[280,50,257,48],[280,51,257,49,"route"],[280,56,257,54],[280,58,257,56,"params"],[280,64,257,62],[280,65,257,63],[281,8,258,6],[281,14,258,12,"stateBeforeInitialization"],[281,39,258,37],[281,42,258,40,"stateFromParams"],[281,57,258,55],[281,61,258,59,"currentState"],[281,73,258,71],[282,8,259,6],[282,14,259,12,"hydratedState"],[282,27,259,25],[282,30,259,28,"router"],[282,36,259,34],[282,37,259,35,"getRehydratedState"],[282,55,259,53],[282,56,259,54,"stateBeforeInitialization"],[282,81,259,79],[282,83,259,81],[283,10,260,8,"routeNames"],[283,20,260,18],[284,10,261,8,"routeParamList"],[284,24,261,22],[284,26,261,24,"initialRouteParamList"],[284,47,261,45],[285,10,262,8,"routeGetIdList"],[286,8,263,6],[286,9,263,7],[286,10,263,8],[287,8,264,6],[287,12,264,10,"options"],[287,19,264,17],[287,20,264,18,"UNSTABLE_routeNamesChangeBehavior"],[287,53,264,51],[287,58,264,56],[287,73,264,71],[287,77,264,75,"doesStateHaveOnlyInvalidRoutes"],[287,107,264,105],[287,108,264,106,"stateBeforeInitialization"],[287,133,264,131],[287,134,264,132],[287,136,264,134],[288,10,265,8],[288,17,265,15],[288,18,265,16,"stateBeforeInitialization"],[288,43,265,41],[288,45,265,43,"hydratedState"],[288,58,265,56],[288,60,265,58],[288,64,265,62],[288,65,265,63],[289,8,266,6],[290,8,267,6],[290,15,267,13],[290,16,267,14,"undefined"],[290,25,267,23],[290,27,267,25,"hydratedState"],[290,40,267,38],[290,42,267,40],[290,47,267,45],[290,48,267,46],[291,6,268,4],[292,6,269,4],[293,6,270,4],[294,6,271,4],[295,6,272,4],[296,6,273,4],[297,6,274,4],[298,4,275,2],[298,5,275,3],[298,7,275,5],[298,8,275,6,"currentState"],[298,20,275,18],[298,22,275,20,"router"],[298,28,275,26],[298,30,275,28,"isStateValid"],[298,42,275,40],[298,43,275,41],[298,44,275,42],[299,4,276,2],[299,10,276,8,"previousRouteKeyListRef"],[299,33,276,31],[299,36,276,34,"React"],[299,41,276,39],[299,42,276,40,"useRef"],[299,48,276,46],[299,49,276,47,"routeKeyList"],[299,61,276,59],[299,62,276,60],[300,4,277,2,"React"],[300,9,277,7],[300,10,277,8,"useEffect"],[300,19,277,17],[300,20,277,18],[300,26,277,24],[301,6,278,4,"previousRouteKeyListRef"],[301,29,278,27],[301,30,278,28,"current"],[301,37,278,35],[301,40,278,38,"routeKeyList"],[301,52,278,50],[302,4,279,2],[302,5,279,3],[302,6,279,4],[303,4,280,2],[303,10,280,8,"previousRouteKeyList"],[303,30,280,28],[303,33,280,31,"previousRouteKeyListRef"],[303,56,280,54],[303,57,280,55,"current"],[303,64,280,62],[304,4,281,2],[304,10,281,8],[304,11,281,9,"unhandledState"],[304,25,281,23],[304,27,281,25,"setUnhandledState"],[304,44,281,42],[304,45,281,43],[304,48,281,46,"React"],[304,53,281,51],[304,54,281,52,"useState"],[304,62,281,60],[304,63,281,61,"stateBeforeInitialization"],[304,88,281,86],[304,89,281,87],[306,4,283,2],[307,4,284,2],[308,4,285,2],[309,4,286,2],[310,4,287,2],[310,8,287,6,"options"],[310,15,287,13],[310,16,287,14,"UNSTABLE_routeNamesChangeBehavior"],[310,49,287,47],[310,54,287,52],[310,69,287,67],[310,73,287,71,"stateBeforeInitialization"],[310,98,287,96],[310,102,287,100,"unhandledState"],[310,116,287,114],[310,121,287,119,"stateBeforeInitialization"],[310,146,287,144],[310,148,287,146],[311,6,288,4,"setUnhandledState"],[311,23,288,21],[311,24,288,22,"stateBeforeInitialization"],[311,49,288,47],[311,50,288,48],[312,4,289,2],[313,4,290,2],[313,8,290,6,"state"],[313,13,290,11],[314,4,291,2],[315,4,292,2],[316,4,293,2],[317,4,294,2,"isStateInitialized"],[317,22,294,20],[317,23,294,21,"currentState"],[317,35,294,33],[317,36,294,34],[317,39,294,37,"currentState"],[317,51,294,49],[317,54,294,52,"initializedState"],[317,70,294,68],[318,4,295,2],[318,8,295,6,"nextState"],[318,17,295,15],[318,20,295,18,"state"],[318,25,295,23],[319,4,296,2],[319,8,296,6,"shouldClearUnhandledState"],[319,33,296,31],[319,36,296,34],[319,41,296,39],[321,4,298,2],[322,4,299,2],[323,4,300,2],[324,4,301,2],[324,8,301,6,"unhandledState"],[324,22,301,20],[324,24,301,22,"routes"],[324,30,301,28],[324,31,301,29,"every"],[324,36,301,34],[324,37,301,35,"r"],[324,38,301,36],[324,42,301,40,"routeNames"],[324,52,301,50],[324,53,301,51,"includes"],[324,61,301,59],[324,62,301,60,"r"],[324,63,301,61],[324,64,301,62,"name"],[324,68,301,66],[324,69,301,67],[324,70,301,68],[324,74,301,72,"state"],[324,79,301,77],[324,81,301,79,"routes"],[324,87,301,85],[324,88,301,86,"every"],[324,93,301,91],[324,94,301,92,"r"],[324,95,301,93],[324,99,301,97],[324,100,301,98,"routeNames"],[324,110,301,108],[324,111,301,109,"includes"],[324,119,301,117],[324,120,301,118,"r"],[324,121,301,119],[324,122,301,120,"name"],[324,126,301,124],[324,127,301,125],[324,128,301,126],[324,130,301,128],[325,6,302,4,"shouldClearUnhandledState"],[325,31,302,29],[325,34,302,32],[325,38,302,36],[326,6,303,4,"nextState"],[326,15,303,13],[326,18,303,16,"router"],[326,24,303,22],[326,25,303,23,"getRehydratedState"],[326,43,303,41],[326,44,303,42,"unhandledState"],[326,58,303,56],[326,60,303,58],[327,8,304,6,"routeNames"],[327,18,304,16],[328,8,305,6,"routeParamList"],[328,22,305,20],[329,8,306,6,"routeGetIdList"],[330,6,307,4],[330,7,307,5],[330,8,307,6],[331,4,308,2],[331,5,308,3],[331,11,308,9],[331,15,308,13],[331,16,308,14],[331,20,308,14,"isArrayEqual"],[331,35,308,26],[331,36,308,26,"isArrayEqual"],[331,48,308,26],[331,50,308,27,"state"],[331,55,308,32],[331,56,308,33,"routeNames"],[331,66,308,43],[331,68,308,45,"routeNames"],[331,78,308,55],[331,79,308,56],[331,83,308,60],[331,84,308,61],[331,88,308,61,"isRecordEqual"],[331,104,308,74],[331,105,308,74,"isRecordEqual"],[331,118,308,74],[331,120,308,75,"routeKeyList"],[331,132,308,87],[331,134,308,89,"previousRouteKeyList"],[331,154,308,109],[331,155,308,110],[331,157,308,112],[332,6,309,4],[333,6,310,4,"nextState"],[333,15,310,13],[333,18,310,16,"router"],[333,24,310,22],[333,25,310,23,"getStateForRouteNamesChange"],[333,52,310,50],[333,53,310,51,"state"],[333,58,310,56],[333,60,310,58],[334,8,311,6,"routeNames"],[334,18,311,16],[335,8,312,6,"routeParamList"],[335,22,312,20],[336,8,313,6,"routeGetIdList"],[336,22,313,20],[337,8,314,6,"routeKeyChanges"],[337,23,314,21],[337,25,314,23,"Object"],[337,31,314,29],[337,32,314,30,"keys"],[337,36,314,34],[337,37,314,35,"routeKeyList"],[337,49,314,47],[337,50,314,48],[337,51,314,49,"filter"],[337,57,314,55],[337,58,314,56,"name"],[337,62,314,60],[337,66,314,64,"name"],[337,70,314,68],[337,74,314,72,"previousRouteKeyList"],[337,94,314,92],[337,98,314,96,"routeKeyList"],[337,110,314,108],[337,111,314,109,"name"],[337,115,314,113],[337,116,314,114],[337,121,314,119,"previousRouteKeyList"],[337,141,314,139],[337,142,314,140,"name"],[337,146,314,144],[337,147,314,145],[338,6,315,4],[338,7,315,5],[338,8,315,6],[339,4,316,2],[340,4,317,2],[340,10,317,8,"previousNestedParamsRef"],[340,33,317,31],[340,36,317,34,"React"],[340,41,317,39],[340,42,317,40,"useRef"],[340,48,317,46],[340,49,317,47,"route"],[340,54,317,52],[340,56,317,54,"params"],[340,62,317,60],[340,63,317,61],[341,4,318,2,"React"],[341,9,318,7],[341,10,318,8,"useEffect"],[341,19,318,17],[341,20,318,18],[341,26,318,24],[342,6,319,4,"previousNestedParamsRef"],[342,29,319,27],[342,30,319,28,"current"],[342,37,319,35],[342,40,319,38,"route"],[342,45,319,43],[342,47,319,45,"params"],[342,53,319,51],[343,4,320,2],[343,5,320,3],[343,7,320,5],[343,8,320,6,"route"],[343,13,320,11],[343,15,320,13,"params"],[343,21,320,19],[343,22,320,20],[343,23,320,21],[344,4,321,2],[344,8,321,6,"route"],[344,13,321,11],[344,15,321,13,"params"],[344,21,321,19],[344,23,321,21],[345,6,322,4],[345,12,322,10,"previousParams"],[345,26,322,24],[345,29,322,27,"previousNestedParamsRef"],[345,52,322,50],[345,53,322,51,"current"],[345,60,322,58],[346,6,323,4],[346,10,323,8,"action"],[346,16,323,14],[347,6,324,4],[347,10,324,8],[347,17,324,15,"route"],[347,22,324,20],[347,23,324,21,"params"],[347,29,324,27],[347,30,324,28,"state"],[347,35,324,33],[347,40,324,38],[347,48,324,46],[347,52,324,50,"route"],[347,57,324,55],[347,58,324,56,"params"],[347,64,324,62],[347,65,324,63,"state"],[347,70,324,68],[347,74,324,72],[347,78,324,76],[347,82,324,80,"route"],[347,87,324,85],[347,88,324,86,"params"],[347,94,324,92],[347,99,324,97,"previousParams"],[347,113,324,111],[347,115,324,113],[348,8,325,6],[348,12,325,10,"options"],[348,19,325,17],[348,20,325,18,"UNSTABLE_routeNamesChangeBehavior"],[348,53,325,51],[348,58,325,56],[348,73,325,71],[348,77,325,75,"doesStateHaveOnlyInvalidRoutes"],[348,107,325,105],[348,108,325,106,"route"],[348,113,325,111],[348,114,325,112,"params"],[348,120,325,118],[348,121,325,119,"state"],[348,126,325,124],[348,127,325,125],[348,129,325,127],[349,10,326,8],[349,14,326,12,"route"],[349,19,326,17],[349,20,326,18,"params"],[349,26,326,24],[349,27,326,25,"state"],[349,32,326,30],[349,37,326,35,"unhandledState"],[349,51,326,49],[349,53,326,51],[350,12,327,10,"setUnhandledState"],[350,29,327,27],[350,30,327,28,"route"],[350,35,327,33],[350,36,327,34,"params"],[350,42,327,40],[350,43,327,41,"state"],[350,48,327,46],[350,49,327,47],[351,10,328,8],[352,8,329,6],[352,9,329,7],[352,15,329,13],[353,10,330,8],[354,10,331,8,"action"],[354,16,331,14],[354,19,331,17,"CommonActions"],[354,42,331,30],[354,43,331,30,"CommonActions"],[354,56,331,30],[354,57,331,31,"reset"],[354,62,331,36],[354,63,331,37,"route"],[354,68,331,42],[354,69,331,43,"params"],[354,75,331,49],[354,76,331,50,"state"],[354,81,331,55],[354,82,331,56],[355,8,332,6],[356,6,333,4],[356,7,333,5],[356,13,333,11],[356,17,333,15],[356,24,333,22,"route"],[356,29,333,27],[356,30,333,28,"params"],[356,36,333,34],[356,37,333,35,"screen"],[356,43,333,41],[356,48,333,46],[356,56,333,54],[356,61,333,59,"route"],[356,66,333,64],[356,67,333,65,"params"],[356,73,333,71],[356,74,333,72,"initial"],[356,81,333,79],[356,86,333,84],[356,91,333,89],[356,95,333,93,"isFirstStateInitialization"],[356,121,333,119],[356,125,333,123,"route"],[356,130,333,128],[356,131,333,129,"params"],[356,137,333,135],[356,142,333,140,"previousParams"],[356,156,333,154],[356,157,333,155],[356,159,333,157],[357,8,334,6],[357,12,334,10,"options"],[357,19,334,17],[357,20,334,18,"UNSTABLE_routeNamesChangeBehavior"],[357,53,334,51],[357,58,334,56],[357,73,334,71],[357,77,334,75],[357,78,334,76,"routeNames"],[357,88,334,86],[357,89,334,87,"includes"],[357,97,334,95],[357,98,334,96,"route"],[357,103,334,101],[357,104,334,102,"params"],[357,110,334,108],[357,111,334,109,"screen"],[357,117,334,115],[357,118,334,116],[357,120,334,118],[358,10,335,8],[358,16,335,14,"state"],[358,21,335,19],[358,24,335,22,"getStateFromParams"],[358,42,335,40],[358,43,335,41,"route"],[358,48,335,46],[358,49,335,47,"params"],[358,55,335,53],[358,56,335,54],[359,10,336,8],[359,14,336,12,"state"],[359,19,336,17],[359,23,336,21],[359,27,336,25],[359,31,336,29],[359,32,336,30],[359,36,336,30,"deepEqual"],[359,45,336,39],[359,46,336,39,"default"],[359,53,336,39],[359,55,336,40,"state"],[359,60,336,45],[359,62,336,47,"unhandledState"],[359,76,336,61],[359,77,336,62],[359,79,336,64],[360,12,337,10,"setUnhandledState"],[360,29,337,27],[360,30,337,28,"state"],[360,35,337,33],[360,36,337,34],[361,10,338,8],[362,8,339,6],[362,9,339,7],[362,15,339,13],[363,10,340,8],[364,10,341,8,"action"],[364,16,341,14],[364,19,341,17,"CommonActions"],[364,42,341,30],[364,43,341,30,"CommonActions"],[364,56,341,30],[364,57,341,31,"navigate"],[364,65,341,39],[364,66,341,40],[365,12,342,10,"name"],[365,16,342,14],[365,18,342,16,"route"],[365,23,342,21],[365,24,342,22,"params"],[365,30,342,28],[365,31,342,29,"screen"],[365,37,342,35],[366,12,343,10,"params"],[366,18,343,16],[366,20,343,18,"route"],[366,25,343,23],[366,26,343,24,"params"],[366,32,343,30],[366,33,343,31,"params"],[366,39,343,37],[367,12,344,10,"path"],[367,16,344,14],[367,18,344,16,"route"],[367,23,344,21],[367,24,344,22,"params"],[367,30,344,28],[367,31,344,29,"path"],[367,35,344,33],[368,12,345,10,"merge"],[368,17,345,15],[368,19,345,17,"route"],[368,24,345,22],[368,25,345,23,"params"],[368,31,345,29],[368,32,345,30,"merge"],[368,37,345,35],[369,12,346,10,"pop"],[369,15,346,13],[369,17,346,15,"route"],[369,22,346,20],[369,23,346,21,"params"],[369,29,346,27],[369,30,346,28,"pop"],[370,10,347,8],[370,11,347,9],[370,12,347,10],[371,8,348,6],[372,6,349,4],[374,6,351,4],[375,6,352,4],[375,12,352,10,"updatedState"],[375,24,352,22],[375,27,352,25,"action"],[375,33,352,31],[375,36,352,34,"router"],[375,42,352,40],[375,43,352,41,"getStateForAction"],[375,60,352,58],[375,61,352,59,"nextState"],[375,70,352,68],[375,72,352,70,"action"],[375,78,352,76],[375,80,352,78],[376,8,353,6,"routeNames"],[376,18,353,16],[377,8,354,6,"routeParamList"],[377,22,354,20],[378,8,355,6,"routeGetIdList"],[379,6,356,4],[379,7,356,5],[379,8,356,6],[379,11,356,9],[379,15,356,13],[380,6,357,4,"nextState"],[380,15,357,13],[380,18,357,16,"updatedState"],[380,30,357,28],[380,35,357,33],[380,39,357,37],[380,42,357,40,"router"],[380,48,357,46],[380,49,357,47,"getRehydratedState"],[380,67,357,65],[380,68,357,66,"updatedState"],[380,80,357,78],[380,82,357,80],[381,8,358,6,"routeNames"],[381,18,358,16],[382,8,359,6,"routeParamList"],[382,22,359,20],[383,8,360,6,"routeGetIdList"],[384,6,361,4],[384,7,361,5],[384,8,361,6],[384,11,361,9,"nextState"],[384,20,361,18],[385,4,362,2],[386,4,363,2],[386,10,363,8,"shouldUpdate"],[386,22,363,20],[386,25,363,23,"state"],[386,30,363,28],[386,35,363,33,"nextState"],[386,44,363,42],[387,4,364,2],[387,8,364,2,"useScheduleUpdate"],[387,28,364,19],[387,29,364,19,"useScheduleUpdate"],[387,46,364,19],[387,48,364,20],[387,54,364,26],[388,6,365,4],[388,10,365,8,"shouldUpdate"],[388,22,365,20],[388,24,365,22],[389,8,366,6],[390,8,367,6,"setState"],[390,16,367,14],[390,17,367,15,"nextState"],[390,26,367,24],[390,27,367,25],[391,8,368,6],[391,12,368,10,"shouldClearUnhandledState"],[391,37,368,35],[391,39,368,37],[392,10,369,8,"setUnhandledState"],[392,27,369,25],[392,28,369,26,"undefined"],[392,37,369,35],[392,38,369,36],[393,8,370,6],[394,6,371,4],[395,4,372,2],[395,5,372,3],[395,6,372,4],[397,4,374,2],[398,4,375,2],[399,4,376,2],[400,4,377,2,"state"],[400,9,377,7],[400,12,377,10,"nextState"],[400,21,377,19],[401,4,378,2,"React"],[401,9,378,7],[401,10,378,8,"useEffect"],[401,19,378,17],[401,20,378,18],[401,26,378,24],[402,6,379,4],[403,6,380,4],[404,6,381,4,"stateCleanedUp"],[404,20,381,18],[404,21,381,19,"current"],[404,28,381,26],[404,31,381,29],[404,36,381,34],[405,6,382,4,"setKey"],[405,12,382,10],[405,13,382,11,"navigatorKey"],[405,25,382,23],[405,26,382,24],[406,6,383,4],[406,10,383,8],[406,11,383,9,"getIsInitial"],[406,23,383,21],[406,24,383,22],[406,25,383,23],[406,27,383,25],[407,8,384,6],[408,8,385,6],[409,8,386,6],[410,8,387,6,"setState"],[410,16,387,14],[410,17,387,15,"nextState"],[410,26,387,24],[410,27,387,25],[411,6,388,4],[412,6,389,4],[412,13,389,11],[412,19,389,17],[413,8,390,6],[414,8,391,6],[414,12,391,10,"getCurrentState"],[414,27,391,25],[414,28,391,26],[414,29,391,27],[414,34,391,32,"undefined"],[414,43,391,41],[414,47,391,45,"getKey"],[414,53,391,51],[414,54,391,52],[414,55,391,53],[414,60,391,58,"navigatorKey"],[414,72,391,70],[414,74,391,72],[415,10,392,8,"setCurrentState"],[415,25,392,23],[415,26,392,24,"undefined"],[415,35,392,33],[415,36,392,34],[416,10,393,8,"stateCleanedUp"],[416,24,393,22],[416,25,393,23,"current"],[416,32,393,30],[416,35,393,33],[416,39,393,37],[417,8,394,6],[418,6,395,4],[418,7,395,5],[419,6,396,4],[420,4,397,2],[420,5,397,3],[420,7,397,5],[420,9,397,7],[420,10,397,8],[422,4,399,2],[423,4,400,2],[424,4,401,2],[425,4,402,2],[426,4,403,2],[427,4,404,2],[427,10,404,8,"stateRef"],[427,18,404,16],[427,21,404,19,"React"],[427,26,404,24],[427,27,404,25,"useRef"],[427,33,404,31],[427,34,404,32,"state"],[427,39,404,37],[427,40,404,38],[428,4,405,2,"stateRef"],[428,12,405,10],[428,13,405,11,"current"],[428,20,405,18],[428,23,405,21,"state"],[428,28,405,26],[429,4,406,2],[429,8,406,2,"useClientLayoutEffect"],[429,32,406,23],[429,33,406,23,"useClientLayoutEffect"],[429,54,406,23],[429,56,406,24],[429,62,406,30],[430,6,407,4,"stateRef"],[430,14,407,12],[430,15,407,13,"current"],[430,22,407,20],[430,25,407,23],[430,29,407,27],[431,4,408,2],[431,5,408,3],[431,6,408,4],[432,4,409,2],[432,10,409,8,"getState"],[432,18,409,16],[432,21,409,19],[432,25,409,19,"useLatestCallback"],[432,42,409,36],[432,43,409,36,"default"],[432,50,409,36],[432,52,409,37],[432,58,409,43],[433,6,410,4],[433,12,410,10,"currentState"],[433,24,410,22],[433,27,410,25,"getCurrentState"],[433,42,410,40],[433,43,410,41],[433,44,410,42],[434,6,411,4],[434,13,411,11],[434,17,411,11,"deepFreeze"],[434,30,411,21],[434,31,411,21,"deepFreeze"],[434,41,411,21],[434,43,411,22,"isStateInitialized"],[434,61,411,40],[434,62,411,41,"currentState"],[434,74,411,53],[434,75,411,54],[434,78,411,57,"currentState"],[434,90,411,69],[434,93,411,72,"initializedState"],[434,109,411,88],[434,110,411,89],[435,4,412,2],[435,5,412,3],[435,6,412,4],[436,4,413,2],[436,10,413,8,"emitter"],[436,17,413,15],[436,20,413,18],[436,24,413,18,"useEventEmitter"],[436,42,413,33],[436,43,413,33,"useEventEmitter"],[436,58,413,33],[436,60,413,34,"e"],[436,61,413,35],[436,65,413,39],[437,6,414,4],[437,12,414,10,"routeNames"],[437,22,414,20],[437,25,414,23],[437,27,414,25],[438,6,415,4],[438,10,415,8,"route"],[438,15,415,13],[439,6,416,4],[439,10,416,8,"e"],[439,11,416,9],[439,12,416,10,"target"],[439,18,416,16],[439,20,416,18],[440,8,417,6,"route"],[440,13,417,11],[440,16,417,14,"state"],[440,21,417,19],[440,22,417,20,"routes"],[440,28,417,26],[440,29,417,27,"find"],[440,33,417,31],[440,34,417,32,"route"],[440,39,417,37],[440,43,417,41,"route"],[440,48,417,46],[440,49,417,47,"key"],[440,52,417,50],[440,57,417,55,"e"],[440,58,417,56],[440,59,417,57,"target"],[440,65,417,63],[440,66,417,64],[441,8,418,6],[441,12,418,10,"route"],[441,17,418,15],[441,19,418,17,"name"],[441,23,418,21],[441,25,418,23],[442,10,419,8,"routeNames"],[442,20,419,18],[442,21,419,19,"push"],[442,25,419,23],[442,26,419,24,"route"],[442,31,419,29],[442,32,419,30,"name"],[442,36,419,34],[442,37,419,35],[443,8,420,6],[444,6,421,4],[444,7,421,5],[444,13,421,11],[445,8,422,6,"route"],[445,13,422,11],[445,16,422,14,"state"],[445,21,422,19],[445,22,422,20,"routes"],[445,28,422,26],[445,29,422,27,"state"],[445,34,422,32],[445,35,422,33,"index"],[445,40,422,38],[445,41,422,39],[446,8,423,6,"routeNames"],[446,18,423,16],[446,19,423,17,"push"],[446,23,423,21],[446,24,423,22],[446,27,423,25,"Object"],[446,33,423,31],[446,34,423,32,"keys"],[446,38,423,36],[446,39,423,37,"screens"],[446,46,423,44],[446,47,423,45],[446,48,423,46,"filter"],[446,54,423,52],[446,55,423,53,"name"],[446,59,423,57],[446,63,423,61,"route"],[446,68,423,66],[446,70,423,68,"name"],[446,74,423,72],[446,79,423,77,"name"],[446,83,423,81],[446,84,423,82],[446,85,423,83],[447,6,424,4],[448,6,425,4],[448,10,425,8,"route"],[448,15,425,13],[448,19,425,17],[448,23,425,21],[448,25,425,23],[449,8,426,6],[450,6,427,4],[451,6,428,4],[451,12,428,10,"navigation"],[451,22,428,20],[451,25,428,23,"descriptors"],[451,36,428,34],[451,37,428,35,"route"],[451,42,428,40],[451,43,428,41,"key"],[451,46,428,44],[451,47,428,45],[451,48,428,46,"navigation"],[451,58,428,56],[452,6,429,4],[452,12,429,10,"listeners"],[452,21,429,19],[452,24,429,22],[452,26,429,24],[452,27,429,25,"concat"],[452,33,429,31],[453,6,430,4],[454,6,431,4],[454,9,431,7],[454,10,431,8,"screenListeners"],[454,25,431,23],[454,27,431,25],[454,30,431,28,"routeNames"],[454,40,431,38],[454,41,431,39,"map"],[454,44,431,42],[454,45,431,43,"name"],[454,49,431,47],[454,53,431,51],[455,8,432,6],[455,14,432,12],[456,10,433,8,"listeners"],[457,8,434,6],[457,9,434,7],[457,12,434,10,"screens"],[457,19,434,17],[457,20,434,18,"name"],[457,24,434,22],[457,25,434,23],[457,26,434,24,"props"],[457,31,434,29],[458,8,435,6],[458,15,435,13,"listeners"],[458,24,435,22],[459,6,436,4],[459,7,436,5],[459,8,436,6],[459,9,436,7],[459,10,436,8,"map"],[459,13,436,11],[459,14,436,12,"listeners"],[459,23,436,21],[459,27,436,25],[460,8,437,6],[460,14,437,12,"map"],[460,17,437,15],[460,20,437,18],[460,27,437,25,"listeners"],[460,36,437,34],[460,41,437,39],[460,51,437,49],[460,54,437,52,"listeners"],[460,63,437,61],[460,64,437,62],[461,10,438,8,"route"],[461,15,438,13],[461,17,438,15,"route"],[461,22,438,20],[462,10,439,8,"navigation"],[463,8,440,6],[463,9,440,7],[463,10,440,8],[463,13,440,11,"listeners"],[463,22,440,20],[464,8,441,6],[464,15,441,13,"map"],[464,18,441,16],[464,21,441,19,"Object"],[464,27,441,25],[464,28,441,26,"keys"],[464,32,441,30],[464,33,441,31,"map"],[464,36,441,34],[464,37,441,35],[464,38,441,36,"filter"],[464,44,441,42],[464,45,441,43,"type"],[464,49,441,47],[464,53,441,51,"type"],[464,57,441,55],[464,62,441,60,"e"],[464,63,441,61],[464,64,441,62,"type"],[464,68,441,66],[464,69,441,67],[464,70,441,68,"map"],[464,73,441,71],[464,74,441,72,"type"],[464,78,441,76],[464,82,441,80,"map"],[464,85,441,83],[464,88,441,86,"type"],[464,92,441,90],[464,93,441,91],[464,94,441,92],[464,97,441,95,"undefined"],[464,106,441,104],[465,6,442,4],[465,7,442,5],[465,8,442,6],[466,6,443,4],[467,6,444,4],[468,6,444,4],[468,7,445,5,"filter"],[468,13,445,11],[468,14,445,12],[468,15,445,13,"cb"],[468,17,445,15],[468,19,445,17,"i"],[468,20,445,18],[468,22,445,20,"self"],[468,26,445,24],[468,31,445,29,"cb"],[468,33,445,31],[468,37,445,35,"self"],[468,41,445,39],[468,42,445,40,"lastIndexOf"],[468,53,445,51],[468,54,445,52,"cb"],[468,56,445,54],[468,57,445,55],[468,62,445,60,"i"],[468,63,445,61],[468,64,445,62],[469,6,446,4,"listeners"],[469,15,446,13],[469,16,446,14,"forEach"],[469,23,446,21],[469,24,446,22,"listener"],[469,32,446,30],[469,36,446,34,"listener"],[469,44,446,42],[469,47,446,45,"e"],[469,48,446,46],[469,49,446,47],[469,50,446,48],[470,4,447,2],[470,5,447,3],[470,6,447,4],[471,4,448,2],[471,8,448,2,"useFocusEvents"],[471,25,448,16],[471,26,448,16,"useFocusEvents"],[471,40,448,16],[471,42,448,17],[472,6,449,4,"state"],[472,11,449,9],[473,6,450,4,"emitter"],[474,4,451,2],[474,5,451,3],[474,6,451,4],[475,4,452,2,"React"],[475,9,452,7],[475,10,452,8,"useEffect"],[475,19,452,17],[475,20,452,18],[475,26,452,24],[476,6,453,4,"emitter"],[476,13,453,11],[476,14,453,12,"emit"],[476,18,453,16],[476,19,453,17],[477,8,454,6,"type"],[477,12,454,10],[477,14,454,12],[477,21,454,19],[478,8,455,6,"data"],[478,12,455,10],[478,14,455,12],[479,10,456,8,"state"],[480,8,457,6],[481,6,458,4],[481,7,458,5],[481,8,458,6],[482,4,459,2],[482,5,459,3],[482,7,459,5],[482,8,459,6,"emitter"],[482,15,459,13],[482,17,459,15,"state"],[482,22,459,20],[482,23,459,21],[482,24,459,22],[483,4,460,2],[483,10,460,8],[484,6,461,4,"listeners"],[484,15,461,13],[484,17,461,15,"childListeners"],[484,31,461,29],[485,6,462,4,"addListener"],[486,4,463,2],[486,5,463,3],[486,8,463,6],[486,12,463,6,"useChildListeners"],[486,32,463,23],[486,33,463,23,"useChildListeners"],[486,50,463,23],[486,52,463,24],[486,53,463,25],[487,4,464,2],[487,10,464,8],[488,6,465,4,"keyedListeners"],[488,20,465,18],[489,6,466,4,"addKeyedListener"],[490,4,467,2],[490,5,467,3],[490,8,467,6],[490,12,467,6,"useKeyedChildListeners"],[490,37,467,28],[490,38,467,28,"useKeyedChildListeners"],[490,60,467,28],[490,62,467,29],[490,63,467,30],[491,4,468,2],[491,10,468,8,"onAction"],[491,18,468,16],[491,21,468,19],[491,25,468,19,"useOnAction"],[491,39,468,30],[491,40,468,30,"useOnAction"],[491,51,468,30],[491,53,468,31],[492,6,469,4,"router"],[492,12,469,10],[493,6,470,4,"getState"],[493,14,470,12],[494,6,471,4,"setState"],[494,14,471,12],[495,6,472,4,"key"],[495,9,472,7],[495,11,472,9,"route"],[495,16,472,14],[495,18,472,16,"key"],[495,21,472,19],[496,6,473,4,"actionListeners"],[496,21,473,19],[496,23,473,21,"childListeners"],[496,37,473,35],[496,38,473,36,"action"],[496,44,473,42],[497,6,474,4,"beforeRemoveListeners"],[497,27,474,25],[497,29,474,27,"keyedListeners"],[497,43,474,41],[497,44,474,42,"beforeRemove"],[497,56,474,54],[498,6,475,4,"routerConfigOptions"],[498,25,475,23],[498,27,475,25],[499,8,476,6,"routeNames"],[499,18,476,16],[500,8,477,6,"routeParamList"],[500,22,477,20],[501,8,478,6,"routeGetIdList"],[502,6,479,4],[502,7,479,5],[503,6,480,4,"emitter"],[504,4,481,2],[504,5,481,3],[504,6,481,4],[505,4,482,2],[505,10,482,8,"onRouteFocus"],[505,22,482,20],[505,25,482,23],[505,29,482,23,"useOnRouteFocus"],[505,47,482,38],[505,48,482,38,"useOnRouteFocus"],[505,63,482,38],[505,65,482,39],[506,6,483,4,"router"],[506,12,483,10],[507,6,484,4,"key"],[507,9,484,7],[507,11,484,9,"route"],[507,16,484,14],[507,18,484,16,"key"],[507,21,484,19],[508,6,485,4,"getState"],[508,14,485,12],[509,6,486,4,"setState"],[510,4,487,2],[510,5,487,3],[510,6,487,4],[511,4,488,2],[511,10,488,8,"onUnhandledActionParent"],[511,33,488,31],[511,36,488,34,"React"],[511,41,488,39],[511,42,488,40,"useContext"],[511,52,488,50],[511,53,488,51,"UnhandledActionContext"],[511,78,488,73],[511,79,488,73,"UnhandledActionContext"],[511,101,488,73],[511,102,488,74],[512,4,489,2],[512,10,489,8,"onUnhandledAction"],[512,27,489,25],[512,30,489,28],[512,34,489,28,"useLatestCallback"],[512,51,489,45],[512,52,489,45,"default"],[512,59,489,45],[512,61,489,46,"action"],[512,67,489,52],[512,71,489,56],[513,6,490,4],[513,10,490,8,"options"],[513,17,490,15],[513,18,490,16,"UNSTABLE_routeNamesChangeBehavior"],[513,51,490,49],[513,56,490,54],[513,71,490,69],[513,75,490,73,"action"],[513,81,490,79],[513,82,490,80,"type"],[513,86,490,84],[513,91,490,89],[513,101,490,99],[513,105,490,103,"action"],[513,111,490,109],[513,112,490,110,"payload"],[513,119,490,117],[513,123,490,121],[513,127,490,125],[513,131,490,129],[513,137,490,135],[513,141,490,139,"action"],[513,147,490,145],[513,148,490,146,"payload"],[513,155,490,153],[513,159,490,157],[513,166,490,164,"action"],[513,172,490,170],[513,173,490,171,"payload"],[513,180,490,178],[513,181,490,179,"name"],[513,185,490,183],[513,190,490,188],[513,198,490,196],[513,202,490,200],[513,203,490,201,"routeNames"],[513,213,490,211],[513,214,490,212,"includes"],[513,222,490,220],[513,223,490,221,"action"],[513,229,490,227],[513,230,490,228,"payload"],[513,237,490,235],[513,238,490,236,"name"],[513,242,490,240],[513,243,490,241],[513,245,490,243],[514,8,491,6],[514,14,491,12,"state"],[514,19,491,17],[514,22,491,20],[515,10,492,8,"routes"],[515,16,492,14],[515,18,492,16],[515,19,492,17],[516,12,493,10,"name"],[516,16,493,14],[516,18,493,16,"action"],[516,24,493,22],[516,25,493,23,"payload"],[516,32,493,30],[516,33,493,31,"name"],[516,37,493,35],[517,12,494,10,"params"],[517,18,494,16],[517,20,494,18],[517,28,494,26],[517,32,494,30,"action"],[517,38,494,36],[517,39,494,37,"payload"],[517,46,494,44],[517,50,494,48],[517,57,494,55,"action"],[517,63,494,61],[517,64,494,62,"payload"],[517,71,494,69],[517,72,494,70,"params"],[517,78,494,76],[517,83,494,81],[517,91,494,89],[517,95,494,93,"action"],[517,101,494,99],[517,102,494,100,"payload"],[517,109,494,107],[517,110,494,108,"params"],[517,116,494,114],[517,121,494,119],[517,125,494,123],[517,128,494,126,"action"],[517,134,494,132],[517,135,494,133,"payload"],[517,142,494,140],[517,143,494,141,"params"],[517,149,494,147],[517,152,494,150,"undefined"],[517,161,494,159],[518,12,495,10,"path"],[518,16,495,14],[518,18,495,16],[518,24,495,22],[518,28,495,26,"action"],[518,34,495,32],[518,35,495,33,"payload"],[518,42,495,40],[518,46,495,44],[518,53,495,51,"action"],[518,59,495,57],[518,60,495,58,"payload"],[518,67,495,65],[518,68,495,66,"path"],[518,72,495,70],[518,77,495,75],[518,85,495,83],[518,88,495,86,"action"],[518,94,495,92],[518,95,495,93,"payload"],[518,102,495,100],[518,103,495,101,"path"],[518,107,495,105],[518,110,495,108,"undefined"],[519,10,496,8],[519,11,496,9],[520,8,497,6],[520,9,497,7],[521,8,498,6,"setUnhandledState"],[521,25,498,23],[521,26,498,24,"state"],[521,31,498,29],[521,32,498,30],[522,6,499,4],[523,6,500,4,"onUnhandledActionParent"],[523,29,500,27],[523,32,500,30,"action"],[523,38,500,36],[523,39,500,37],[524,4,501,2],[524,5,501,3],[524,6,501,4],[525,4,502,2],[525,10,502,8,"navigation"],[525,20,502,18],[525,23,502,21],[525,27,502,21,"useNavigationHelpers"],[525,50,502,41],[525,51,502,41,"useNavigationHelpers"],[525,71,502,41],[525,73,502,42],[526,6,503,4,"id"],[526,8,503,6],[526,10,503,8,"options"],[526,17,503,15],[526,18,503,16,"id"],[526,20,503,18],[527,6,504,4,"onAction"],[527,14,504,12],[528,6,505,4,"onUnhandledAction"],[528,23,505,21],[529,6,506,4,"getState"],[529,14,506,12],[530,6,507,4,"emitter"],[530,13,507,11],[531,6,508,4,"router"],[531,12,508,10],[532,6,509,4,"stateRef"],[533,4,510,2],[533,5,510,3],[533,6,510,4],[534,4,511,2],[534,8,511,2,"useFocusedListenersChildrenAdapter"],[534,45,511,36],[534,46,511,36,"useFocusedListenersChildrenAdapter"],[534,80,511,36],[534,82,511,37],[535,6,512,4,"navigation"],[535,16,512,14],[536,6,513,4,"focusedListeners"],[536,22,513,20],[536,24,513,22,"childListeners"],[536,38,513,36],[536,39,513,37,"focus"],[537,4,514,2],[537,5,514,3],[537,6,514,4],[538,4,515,2],[538,8,515,2,"useOnGetState"],[538,24,515,15],[538,25,515,15,"useOnGetState"],[538,38,515,15],[538,40,515,16],[539,6,516,4,"getState"],[539,14,516,12],[540,6,517,4,"getStateListeners"],[540,23,517,21],[540,25,517,23,"keyedListeners"],[540,39,517,37],[540,40,517,38,"getState"],[541,4,518,2],[541,5,518,3],[541,6,518,4],[542,4,519,2],[542,10,519,8],[543,6,520,4,"describe"],[543,14,520,12],[544,6,521,4,"descriptors"],[545,4,522,2],[545,5,522,3],[545,8,522,6],[545,12,522,6,"useDescriptors"],[545,29,522,20],[545,30,522,20,"useDescriptors"],[545,44,522,20],[545,46,522,21],[546,6,523,4,"state"],[546,11,523,9],[547,6,524,4,"screens"],[547,13,524,11],[548,6,525,4,"navigation"],[548,16,525,14],[549,6,526,4,"screenOptions"],[549,19,526,17],[550,6,527,4,"screenLayout"],[550,18,527,16],[551,6,528,4,"onAction"],[551,14,528,12],[552,6,529,4,"getState"],[552,14,529,12],[553,6,530,4,"setState"],[553,14,530,12],[554,6,531,4,"onRouteFocus"],[554,18,531,16],[555,6,532,4,"addListener"],[555,17,532,15],[556,6,533,4,"addKeyedListener"],[556,22,533,20],[557,6,534,4,"router"],[557,12,534,10],[558,6,535,4],[559,6,536,4,"emitter"],[560,4,537,2],[560,5,537,3],[560,6,537,4],[561,4,538,2],[561,8,538,2,"useCurrentRender"],[561,27,538,18],[561,28,538,18,"useCurrentRender"],[561,44,538,18],[561,46,538,19],[562,6,539,4,"state"],[562,11,539,9],[563,6,540,4,"navigation"],[563,16,540,14],[564,6,541,4,"descriptors"],[565,4,542,2],[565,5,542,3],[565,6,542,4],[566,4,543,2],[566,10,543,8,"NavigationContent"],[566,27,543,25],[566,30,543,28],[566,34,543,28,"useComponent"],[566,49,543,40],[566,50,543,40,"useComponent"],[566,62,543,40],[566,64,543,41,"children"],[566,72,543,49],[566,76,543,53],[567,6,544,4],[567,12,544,10,"element"],[567,19,544,17],[567,22,544,20,"layout"],[567,28,544,26],[567,32,544,30],[567,36,544,34],[567,39,544,37,"layout"],[567,45,544,43],[567,46,544,44],[568,8,545,6,"state"],[568,13,545,11],[569,8,546,6,"descriptors"],[569,19,546,17],[570,8,547,6,"navigation"],[570,18,547,16],[571,8,548,6,"children"],[572,6,549,4],[572,7,549,5],[572,8,549,6],[572,11,549,9,"children"],[572,19,549,17],[573,6,550,4],[573,13,550,11],[573,26,550,24],[573,30,550,24,"_jsx"],[573,46,550,28],[573,47,550,28,"jsx"],[573,50,550,28],[573,52,550,29,"NavigationHelpersContext"],[573,79,550,53],[573,80,550,53,"NavigationHelpersContext"],[573,104,550,53],[573,105,550,54,"Provider"],[573,113,550,62],[573,115,550,64],[574,8,551,6,"value"],[574,13,551,11],[574,15,551,13,"navigation"],[574,25,551,23],[575,8,552,6,"children"],[575,16,552,14],[575,18,552,16],[575,31,552,29],[575,35,552,29,"_jsx"],[575,51,552,33],[575,52,552,33,"jsx"],[575,55,552,33],[575,57,552,34,"NavigationStateListenerProvider"],[575,78,552,65],[575,79,552,65,"NavigationStateListenerProvider"],[575,110,552,65],[575,112,552,67],[576,10,553,8,"state"],[576,15,553,13],[576,17,553,15,"state"],[576,22,553,20],[577,10,554,8,"children"],[577,18,554,16],[577,20,554,18],[577,33,554,31],[577,37,554,31,"_jsx"],[577,53,554,35],[577,54,554,35,"jsx"],[577,57,554,35],[577,59,554,36,"PreventRemoveProvider"],[577,83,554,57],[577,84,554,57,"PreventRemoveProvider"],[577,105,554,57],[577,107,554,59],[578,12,555,10,"children"],[578,20,555,18],[578,22,555,20,"element"],[579,10,556,8],[579,11,556,9],[580,8,557,6],[580,9,557,7],[581,6,558,4],[581,7,558,5],[581,8,558,6],[582,4,559,2],[582,5,559,3],[582,6,559,4],[583,4,560,2],[583,11,560,9],[584,6,561,4,"state"],[584,11,561,9],[585,6,562,4,"navigation"],[585,16,562,14],[586,6,563,4,"describe"],[586,14,563,12],[587,6,564,4,"descriptors"],[587,17,564,15],[588,6,565,4,"NavigationContent"],[589,4,566,2],[589,5,566,3],[590,2,567,0],[591,0,567,1],[591,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","getStateFromParams","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","doesStateHaveOnlyInvalidRoutes","state.routes.every$argument_0","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","unhandledState.routes.every$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useClientLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCwC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;2BOC;CPa;OQS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;2DSC,4BC,iCD,CT;qCWU;GXQ;kGYC;oDPC;KOU;GZ+B;kBaE;GbE;mCcsB,gCd,yBU,iCV;wDea,yFf;kBaI;GbE;oBgB4C;GhBQ;kBaM;WIW;KJM;GbE;wBkBS;GlBE;qCWC;GXG;kCmBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GnBC;kBaK;GbO;8CW8B;GXY;yC0B0C;G1BgB;CRQ"},"hasCjsExports":false},"type":"js/module"}]}