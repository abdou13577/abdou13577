{"dependencies":[{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"],"imports":1}},{"name":"fast-deep-equal","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":40,"index":114}}],"key":"kmUMBZlZK8fLQ5NsiSOBIMofZVo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":115},"end":{"line":5,"column":31,"index":146}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":147},"end":{"line":6,"column":46,"index":193}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"],"imports":1}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":194},"end":{"line":7,"column":52,"index":246}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"],"imports":1}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":247},"end":{"line":8,"column":45,"index":292}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"],"imports":1}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":293},"end":{"line":9,"column":35,"index":328}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"],"imports":1}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":329},"end":{"line":10,"column":49,"index":378}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"],"imports":1}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":379},"end":{"line":11,"column":51,"index":430}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"],"imports":1}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":431},"end":{"line":12,"column":73,"index":504}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"],"imports":1}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":505},"end":{"line":13,"column":69,"index":574}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"],"imports":1}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":575},"end":{"line":14,"column":69,"index":644}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"],"imports":1}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":645},"end":{"line":15,"column":67,"index":712}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"],"imports":1}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":713},"end":{"line":16,"column":37,"index":750}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"],"imports":1}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":751},"end":{"line":17,"column":47,"index":798}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"],"imports":1}},{"name":"./UnhandledActionContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":799},"end":{"line":18,"column":69,"index":868}}],"key":"hbxQFgxZ0nD1dniBnLKjFC5C/nw=","exportNames":["*"],"imports":1}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":869},"end":{"line":19,"column":59,"index":928}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"],"imports":1}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":929},"end":{"line":20,"column":67,"index":996}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"],"imports":1}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":997},"end":{"line":21,"column":49,"index":1046}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"],"imports":1}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1047},"end":{"line":22,"column":57,"index":1104}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"],"imports":1}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1105},"end":{"line":23,"column":53,"index":1158}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"],"imports":1}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1159},"end":{"line":24,"column":55,"index":1214}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"],"imports":1}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1215},"end":{"line":25,"column":93,"index":1308}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"],"imports":1}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1309},"end":{"line":26,"column":53,"index":1362}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"],"imports":1}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1363},"end":{"line":27,"column":69,"index":1432}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"],"imports":1}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1433},"end":{"line":28,"column":49,"index":1482}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"],"imports":1}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1483},"end":{"line":29,"column":65,"index":1548}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"],"imports":1}},{"name":"./useNavigationState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1549},"end":{"line":30,"column":74,"index":1623}}],"key":"YLzO6pWqOUYOyLCSKhbq1BFmhy0=","exportNames":["*"],"imports":1}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1624},"end":{"line":31,"column":47,"index":1671}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"],"imports":1}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1672},"end":{"line":32,"column":51,"index":1723}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"],"imports":1}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1724},"end":{"line":33,"column":55,"index":1779}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"],"imports":1}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":1780},"end":{"line":34,"column":65,"index":1845}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"],"imports":1}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":1846},"end":{"line":35,"column":59,"index":1905}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":2021},"end":{"line":39,"column":48,"index":2069}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _reactNavigationRouters = require(_dependencyMap[0], \"@react-navigation/routers\");\n  var _fastDeepEqual = require(_dependencyMap[1], \"fast-deep-equal\");\n  var deepEqual = _interopDefault(_fastDeepEqual);\n  var _react = require(_dependencyMap[2], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactIs = require(_dependencyMap[3], \"react-is\");\n  var _useLatestCallback = require(_dependencyMap[4], \"use-latest-callback\");\n  var useLatestCallback = _interopDefault(_useLatestCallback);\n  var _deepFreezeJs = require(_dependencyMap[5], \"./deepFreeze.js\");\n  var _GroupJs = require(_dependencyMap[6], \"./Group.js\");\n  var _isArrayEqualJs = require(_dependencyMap[7], \"./isArrayEqual.js\");\n  var _isRecordEqualJs = require(_dependencyMap[8], \"./isRecordEqual.js\");\n  var _NavigationHelpersContextJs = require(_dependencyMap[9], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContextJs = require(_dependencyMap[10], \"./NavigationRouteContext.js\");\n  var _NavigationStateContextJs = require(_dependencyMap[11], \"./NavigationStateContext.js\");\n  var _PreventRemoveProviderJs = require(_dependencyMap[12], \"./PreventRemoveProvider.js\");\n  var _ScreenJs = require(_dependencyMap[13], \"./Screen.js\");\n  var _typesJs = require(_dependencyMap[14], \"./types.js\");\n  var _UnhandledActionContextJs = require(_dependencyMap[15], \"./UnhandledActionContext.js\");\n  var _useChildListenersJs = require(_dependencyMap[16], \"./useChildListeners.js\");\n  var _useClientLayoutEffectJs = require(_dependencyMap[17], \"./useClientLayoutEffect.js\");\n  var _useComponentJs = require(_dependencyMap[18], \"./useComponent.js\");\n  var _useCurrentRenderJs = require(_dependencyMap[19], \"./useCurrentRender.js\");\n  var _useDescriptorsJs = require(_dependencyMap[20], \"./useDescriptors.js\");\n  var _useEventEmitterJs = require(_dependencyMap[21], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapterJs = require(_dependencyMap[22], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEventsJs = require(_dependencyMap[23], \"./useFocusEvents.js\");\n  var _useKeyedChildListenersJs = require(_dependencyMap[24], \"./useKeyedChildListeners.js\");\n  var _useLazyValueJs = require(_dependencyMap[25], \"./useLazyValue.js\");\n  var _useNavigationHelpersJs = require(_dependencyMap[26], \"./useNavigationHelpers.js\");\n  var _useNavigationStateJs = require(_dependencyMap[27], \"./useNavigationState.js\");\n  var _useOnActionJs = require(_dependencyMap[28], \"./useOnAction.js\");\n  var _useOnGetStateJs = require(_dependencyMap[29], \"./useOnGetState.js\");\n  var _useOnRouteFocusJs = require(_dependencyMap[30], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigatorJs = require(_dependencyMap[31], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdateJs = require(_dependencyMap[32], \"./useScheduleUpdate.js\");\n  var _reactJsxRuntime = require(_dependencyMap[33], \"react/jsx-runtime\");\n  // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n  _typesJs.PrivateValueStore;\n  const isScreen = child => {\n    return child.type === _ScreenJs.Screen;\n  };\n  const isGroup = child => {\n    return child.type === React.Fragment || child.type === _GroupJs.Group;\n  };\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _GroupJs.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n  const getStateFromParams = params => {\n    if (params?.state != null) {\n      return params.state;\n    } else if (typeof params?.screen === 'string' && params?.initial !== false) {\n      return {\n        routes: [{\n          name: params.screen,\n          params: params.params,\n          path: params.path\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigatorJs.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContextJs.NavigationRouteContext);\n    const {\n      children,\n      layout,\n      screenOptions,\n      screenLayout,\n      screenListeners,\n      UNSTABLE_router,\n      ...rest\n    } = options;\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValueJs.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const doesStateHaveOnlyInvalidRoutes = React.useCallback(state => state.routes.every(r => !routeNames.includes(r.name)), [routeNames]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContextJs.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [stateBeforeInitialization, initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n          ...initialParams,\n          ...initialParamsFromParams\n        } : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [undefined, router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        const stateFromParams = getStateFromParams(route?.params);\n        const stateBeforeInitialization = stateFromParams ?? currentState;\n        const hydratedState = router.getRehydratedState(stateBeforeInitialization, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        });\n        if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && doesStateHaveOnlyInvalidRoutes(stateBeforeInitialization)) {\n          return [stateBeforeInitialization, hydratedState, true];\n        }\n        return [undefined, hydratedState, false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    const [unhandledState, setUnhandledState] = React.useState(stateBeforeInitialization);\n\n    // An unhandled state is state that didn't have any valid routes\n    // So it was unhandled, i.e. not used for initializing the state\n    // It's possible that they were absent due to conditional render\n    // Store this state so we can reuse it if the routes change later\n    if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && stateBeforeInitialization && unhandledState !== stateBeforeInitialization) {\n      setUnhandledState(stateBeforeInitialization);\n    }\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    let shouldClearUnhandledState = false;\n\n    // Previously unhandled state is now valid again\n    // And current state no longer has any valid routes\n    // We should reuse the unhandled state instead of re-calculating the state\n    if (unhandledState?.routes.every(r => routeNames.includes(r.name)) && state?.routes.every(r => !routeNames.includes(r.name))) {\n      shouldClearUnhandledState = true;\n      nextState = router.getRehydratedState(unhandledState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      });\n    } else if (!(0, _isArrayEqualJs.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqualJs.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && doesStateHaveOnlyInvalidRoutes(route.params.state)) {\n          if (route.params.state !== unhandledState) {\n            setUnhandledState(route.params.state);\n          }\n        } else {\n          // If the route was updated with new state, we should reset to it\n          action = _reactNavigationRouters.CommonActions.reset(route.params.state);\n        }\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && !routeNames.includes(route.params.screen)) {\n          const state = getStateFromParams(route.params);\n          if (state != null && !(0, deepEqual.default)(state, unhandledState)) {\n            setUnhandledState(state);\n          }\n        } else {\n          // If the route was updated with new screen name and/or params, we should navigate there\n          action = _reactNavigationRouters.CommonActions.navigate({\n            name: route.params.screen,\n            params: route.params.params,\n            path: route.params.path,\n            merge: route.params.merge,\n            pop: route.params.pop\n          });\n        }\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdateJs.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n        if (shouldClearUnhandledState) {\n          setUnhandledState(undefined);\n        }\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useClientLayoutEffectJs.useClientLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreezeJs.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitterJs.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEventsJs.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListenersJs.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListenersJs.useKeyedChildListeners)();\n    const onAction = (0, _useOnActionJs.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocusJs.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const onUnhandledActionParent = React.useContext(_UnhandledActionContextJs.UnhandledActionContext);\n    const onUnhandledAction = (0, useLatestCallback.default)(action => {\n      if (options.UNSTABLE_routeNamesChangeBehavior === 'lastUnhandled' && action.type === 'NAVIGATE' && action.payload != null && 'name' in action.payload && typeof action.payload.name === 'string' && !routeNames.includes(action.payload.name)) {\n        const state = {\n          routes: [{\n            name: action.payload.name,\n            params: 'params' in action.payload && typeof action.payload.params === 'object' && action.payload.params !== null ? action.payload.params : undefined,\n            path: 'path' in action.payload && typeof action.payload.path === 'string' ? action.payload.path : undefined\n          }]\n        };\n        setUnhandledState(state);\n      }\n      onUnhandledActionParent?.(action);\n    });\n    const navigation = (0, _useNavigationHelpersJs.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      onUnhandledAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapterJs.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetStateJs.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptorsJs.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRenderJs.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponentJs.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_NavigationHelpersContextJs.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_useNavigationStateJs.NavigationStateListenerProvider, {\n          state: state,\n          children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_PreventRemoveProviderJs.PreventRemoveProvider, {\n            children: element\n          })\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":596,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,1,13],[12,11,1,13,"_interopNamespace"],[12,29,1,13,"e"],[12,30,1,13],[13,4,1,13],[13,8,1,13,"e"],[13,9,1,13],[13,13,1,13,"e"],[13,14,1,13],[13,15,1,13,"__esModule"],[13,25,1,13],[13,34,1,13,"e"],[13,35,1,13],[14,4,1,13],[14,8,1,13,"n"],[14,9,1,13],[15,4,1,13],[15,8,1,13,"e"],[15,9,1,13],[15,11,1,13,"Object"],[15,17,1,13],[15,18,1,13,"keys"],[15,22,1,13],[15,23,1,13,"e"],[15,24,1,13],[15,26,1,13,"forEach"],[15,33,1,13],[15,44,1,13,"k"],[15,45,1,13],[16,6,1,13],[16,10,1,13,"d"],[16,11,1,13],[16,14,1,13,"Object"],[16,20,1,13],[16,21,1,13,"getOwnPropertyDescriptor"],[16,45,1,13],[16,46,1,13,"e"],[16,47,1,13],[16,49,1,13,"k"],[16,50,1,13],[17,6,1,13,"Object"],[17,12,1,13],[17,13,1,13,"defineProperty"],[17,27,1,13],[17,28,1,13,"n"],[17,29,1,13],[17,31,1,13,"k"],[17,32,1,13],[17,34,1,13,"d"],[17,35,1,13],[17,36,1,13,"get"],[17,39,1,13],[17,42,1,13,"d"],[17,43,1,13],[18,8,1,13,"enumerable"],[18,18,1,13],[19,8,1,13,"get"],[19,11,1,13],[19,22,1,13,"get"],[19,23,1,13],[20,10,1,13],[20,17,1,13,"e"],[20,18,1,13],[20,19,1,13,"k"],[20,20,1,13],[21,8,1,13],[22,6,1,13],[23,4,1,13],[24,4,1,13,"n"],[24,5,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,16,1,13,"e"],[24,17,1,13],[25,4,1,13],[25,11,1,13,"n"],[25,12,1,13],[26,2,1,13],[27,2,160,0,"exports"],[27,9,160,0],[27,10,160,0,"useNavigationBuilder"],[27,30,160,0],[27,33,160,0,"useNavigationBuilder"],[27,53,160,0],[28,2,3,0],[28,6,3,0,"_reactNavigationRouters"],[28,29,3,0],[28,32,3,0,"require"],[28,39,3,0],[28,40,3,0,"_dependencyMap"],[28,54,3,0],[29,2,4,0],[29,6,4,0,"_fastDeepEqual"],[29,20,4,0],[29,23,4,0,"require"],[29,30,4,0],[29,31,4,0,"_dependencyMap"],[29,45,4,0],[30,2,4,0],[30,6,4,0,"deepEqual"],[30,15,4,0],[30,18,4,0,"_interopDefault"],[30,33,4,0],[30,34,4,0,"_fastDeepEqual"],[30,48,4,0],[31,2,5,0],[31,6,5,0,"_react"],[31,12,5,0],[31,15,5,0,"require"],[31,22,5,0],[31,23,5,0,"_dependencyMap"],[31,37,5,0],[32,2,5,0],[32,6,5,0,"React"],[32,11,5,0],[32,14,5,0,"_interopNamespace"],[32,31,5,0],[32,32,5,0,"_react"],[32,38,5,0],[33,2,6,0],[33,6,6,0,"_reactIs"],[33,14,6,0],[33,17,6,0,"require"],[33,24,6,0],[33,25,6,0,"_dependencyMap"],[33,39,6,0],[34,2,7,0],[34,6,7,0,"_useLatestCallback"],[34,24,7,0],[34,27,7,0,"require"],[34,34,7,0],[34,35,7,0,"_dependencyMap"],[34,49,7,0],[35,2,7,0],[35,6,7,0,"useLatestCallback"],[35,23,7,0],[35,26,7,0,"_interopDefault"],[35,41,7,0],[35,42,7,0,"_useLatestCallback"],[35,60,7,0],[36,2,8,0],[36,6,8,0,"_deepFreezeJs"],[36,19,8,0],[36,22,8,0,"require"],[36,29,8,0],[36,30,8,0,"_dependencyMap"],[36,44,8,0],[37,2,9,0],[37,6,9,0,"_GroupJs"],[37,14,9,0],[37,17,9,0,"require"],[37,24,9,0],[37,25,9,0,"_dependencyMap"],[37,39,9,0],[38,2,10,0],[38,6,10,0,"_isArrayEqualJs"],[38,21,10,0],[38,24,10,0,"require"],[38,31,10,0],[38,32,10,0,"_dependencyMap"],[38,46,10,0],[39,2,11,0],[39,6,11,0,"_isRecordEqualJs"],[39,22,11,0],[39,25,11,0,"require"],[39,32,11,0],[39,33,11,0,"_dependencyMap"],[39,47,11,0],[40,2,12,0],[40,6,12,0,"_NavigationHelpersContextJs"],[40,33,12,0],[40,36,12,0,"require"],[40,43,12,0],[40,44,12,0,"_dependencyMap"],[40,58,12,0],[41,2,13,0],[41,6,13,0,"_NavigationRouteContextJs"],[41,31,13,0],[41,34,13,0,"require"],[41,41,13,0],[41,42,13,0,"_dependencyMap"],[41,56,13,0],[42,2,14,0],[42,6,14,0,"_NavigationStateContextJs"],[42,31,14,0],[42,34,14,0,"require"],[42,41,14,0],[42,42,14,0,"_dependencyMap"],[42,56,14,0],[43,2,15,0],[43,6,15,0,"_PreventRemoveProviderJs"],[43,30,15,0],[43,33,15,0,"require"],[43,40,15,0],[43,41,15,0,"_dependencyMap"],[43,55,15,0],[44,2,16,0],[44,6,16,0,"_ScreenJs"],[44,15,16,0],[44,18,16,0,"require"],[44,25,16,0],[44,26,16,0,"_dependencyMap"],[44,40,16,0],[45,2,17,0],[45,6,17,0,"_typesJs"],[45,14,17,0],[45,17,17,0,"require"],[45,24,17,0],[45,25,17,0,"_dependencyMap"],[45,39,17,0],[46,2,18,0],[46,6,18,0,"_UnhandledActionContextJs"],[46,31,18,0],[46,34,18,0,"require"],[46,41,18,0],[46,42,18,0,"_dependencyMap"],[46,56,18,0],[47,2,19,0],[47,6,19,0,"_useChildListenersJs"],[47,26,19,0],[47,29,19,0,"require"],[47,36,19,0],[47,37,19,0,"_dependencyMap"],[47,51,19,0],[48,2,20,0],[48,6,20,0,"_useClientLayoutEffectJs"],[48,30,20,0],[48,33,20,0,"require"],[48,40,20,0],[48,41,20,0,"_dependencyMap"],[48,55,20,0],[49,2,21,0],[49,6,21,0,"_useComponentJs"],[49,21,21,0],[49,24,21,0,"require"],[49,31,21,0],[49,32,21,0,"_dependencyMap"],[49,46,21,0],[50,2,22,0],[50,6,22,0,"_useCurrentRenderJs"],[50,25,22,0],[50,28,22,0,"require"],[50,35,22,0],[50,36,22,0,"_dependencyMap"],[50,50,22,0],[51,2,23,0],[51,6,23,0,"_useDescriptorsJs"],[51,23,23,0],[51,26,23,0,"require"],[51,33,23,0],[51,34,23,0,"_dependencyMap"],[51,48,23,0],[52,2,24,0],[52,6,24,0,"_useEventEmitterJs"],[52,24,24,0],[52,27,24,0,"require"],[52,34,24,0],[52,35,24,0,"_dependencyMap"],[52,49,24,0],[53,2,25,0],[53,6,25,0,"_useFocusedListenersChildrenAdapterJs"],[53,43,25,0],[53,46,25,0,"require"],[53,53,25,0],[53,54,25,0,"_dependencyMap"],[53,68,25,0],[54,2,26,0],[54,6,26,0,"_useFocusEventsJs"],[54,23,26,0],[54,26,26,0,"require"],[54,33,26,0],[54,34,26,0,"_dependencyMap"],[54,48,26,0],[55,2,27,0],[55,6,27,0,"_useKeyedChildListenersJs"],[55,31,27,0],[55,34,27,0,"require"],[55,41,27,0],[55,42,27,0,"_dependencyMap"],[55,56,27,0],[56,2,28,0],[56,6,28,0,"_useLazyValueJs"],[56,21,28,0],[56,24,28,0,"require"],[56,31,28,0],[56,32,28,0,"_dependencyMap"],[56,46,28,0],[57,2,29,0],[57,6,29,0,"_useNavigationHelpersJs"],[57,29,29,0],[57,32,29,0,"require"],[57,39,29,0],[57,40,29,0,"_dependencyMap"],[57,54,29,0],[58,2,30,0],[58,6,30,0,"_useNavigationStateJs"],[58,27,30,0],[58,30,30,0,"require"],[58,37,30,0],[58,38,30,0,"_dependencyMap"],[58,52,30,0],[59,2,31,0],[59,6,31,0,"_useOnActionJs"],[59,20,31,0],[59,23,31,0,"require"],[59,30,31,0],[59,31,31,0,"_dependencyMap"],[59,45,31,0],[60,2,32,0],[60,6,32,0,"_useOnGetStateJs"],[60,22,32,0],[60,25,32,0,"require"],[60,32,32,0],[60,33,32,0,"_dependencyMap"],[60,47,32,0],[61,2,33,0],[61,6,33,0,"_useOnRouteFocusJs"],[61,24,33,0],[61,27,33,0,"require"],[61,34,33,0],[61,35,33,0,"_dependencyMap"],[61,49,33,0],[62,2,34,0],[62,6,34,0,"_useRegisterNavigatorJs"],[62,29,34,0],[62,32,34,0,"require"],[62,39,34,0],[62,40,34,0,"_dependencyMap"],[62,54,34,0],[63,2,35,0],[63,6,35,0,"_useScheduleUpdateJs"],[63,26,35,0],[63,29,35,0,"require"],[63,36,35,0],[63,37,35,0,"_dependencyMap"],[63,51,35,0],[64,2,39,0],[64,6,39,0,"_reactJsxRuntime"],[64,22,39,0],[64,25,39,0,"require"],[64,32,39,0],[64,33,39,0,"_dependencyMap"],[64,47,39,0],[65,2,37,0],[66,2,38,0],[68,2,40,0,"PrivateValueStore"],[68,10,40,17],[68,11,40,17,"PrivateValueStore"],[68,28,40,17],[69,2,41,0],[69,8,41,6,"isScreen"],[69,16,41,14],[69,19,41,17,"child"],[69,24,41,22],[69,28,41,26],[70,4,42,2],[70,11,42,9,"child"],[70,16,42,14],[70,17,42,15,"type"],[70,21,42,19],[70,26,42,24,"Screen"],[70,35,42,30],[70,36,42,30,"Screen"],[70,42,42,30],[71,2,43,0],[71,3,43,1],[72,2,44,0],[72,8,44,6,"isGroup"],[72,15,44,13],[72,18,44,16,"child"],[72,23,44,21],[72,27,44,25],[73,4,45,2],[73,11,45,9,"child"],[73,16,45,14],[73,17,45,15,"type"],[73,21,45,19],[73,26,45,24,"React"],[73,31,45,29],[73,32,45,30,"Fragment"],[73,40,45,38],[73,44,45,42,"child"],[73,49,45,47],[73,50,45,48,"type"],[73,54,45,52],[73,59,45,57,"Group"],[73,67,45,62],[73,68,45,62,"Group"],[73,73,45,62],[74,2,46,0],[74,3,46,1],[75,2,47,0],[75,8,47,6,"isValidKey"],[75,18,47,16],[75,21,47,19,"key"],[75,24,47,22],[75,28,47,26,"key"],[75,31,47,29],[75,36,47,34,"undefined"],[75,45,47,43],[75,49,47,47],[75,56,47,54,"key"],[75,59,47,57],[75,64,47,62],[75,72,47,70],[75,76,47,74,"key"],[75,79,47,77],[75,84,47,82],[75,86,47,84],[77,2,49,0],[78,0,50,0],[79,0,51,0],[80,0,52,0],[81,0,53,0],[82,2,54,0],[82,8,54,6,"getRouteConfigsFromChildren"],[82,35,54,33],[82,38,54,36,"getRouteConfigsFromChildren"],[82,39,54,37,"children"],[82,47,54,45],[82,49,54,47,"groupKey"],[82,57,54,55],[82,59,54,57,"groupOptions"],[82,71,54,69],[82,73,54,71,"groupLayout"],[82,84,54,82],[82,89,54,87],[83,4,55,2],[83,10,55,8,"configs"],[83,17,55,15],[83,20,55,18,"React"],[83,25,55,23],[83,26,55,24,"Children"],[83,34,55,32],[83,35,55,33,"toArray"],[83,42,55,40],[83,43,55,41,"children"],[83,51,55,49],[83,52,55,50],[83,53,55,51,"reduce"],[83,59,55,57],[83,60,55,58],[83,61,55,59,"acc"],[83,64,55,62],[83,66,55,64,"child"],[83,71,55,69],[83,76,55,74],[84,6,56,4],[84,10,56,8],[84,23,56,21,"React"],[84,28,56,26],[84,29,56,27,"isValidElement"],[84,43,56,41],[84,44,56,42,"child"],[84,49,56,47],[84,50,56,48],[84,52,56,50],[85,8,57,6],[85,12,57,10,"isScreen"],[85,20,57,18],[85,21,57,19,"child"],[85,26,57,24],[85,27,57,25],[85,29,57,27],[86,10,58,8],[87,10,59,8],[89,10,61,8],[89,14,61,12],[89,21,61,19,"child"],[89,26,61,24],[89,27,61,25,"props"],[89,32,61,30],[89,37,61,35],[89,45,61,43],[89,49,61,47,"child"],[89,54,61,52],[89,55,61,53,"props"],[89,60,61,58],[89,65,61,63],[89,69,61,67],[89,71,61,69],[90,12,62,10],[90,18,62,16],[90,22,62,20,"Error"],[90,27,62,25],[90,28,62,26],[90,64,62,62],[90,65,62,63],[91,10,63,8],[92,10,64,8],[92,14,64,12],[92,21,64,19,"child"],[92,26,64,24],[92,27,64,25,"props"],[92,32,64,30],[92,33,64,31,"name"],[92,37,64,35],[92,42,64,40],[92,50,64,48],[92,54,64,52,"child"],[92,59,64,57],[92,60,64,58,"props"],[92,65,64,63],[92,66,64,64,"name"],[92,70,64,68],[92,75,64,73],[92,77,64,75],[92,79,64,77],[93,12,65,10],[93,18,65,16],[93,22,65,20,"Error"],[93,27,65,25],[93,28,65,26],[93,52,65,50,"JSON"],[93,56,65,54],[93,57,65,55,"stringify"],[93,66,65,64],[93,67,65,65,"child"],[93,72,65,70],[93,73,65,71,"props"],[93,78,65,76],[93,79,65,77,"name"],[93,83,65,81],[93,84,65,82],[93,134,65,132],[93,135,65,133],[94,10,66,8],[95,10,67,8],[95,14,67,12,"child"],[95,19,67,17],[95,20,67,18,"props"],[95,25,67,23],[95,26,67,24,"navigationKey"],[95,39,67,37],[95,44,67,42,"undefined"],[95,53,67,51],[95,58,67,56],[95,65,67,63,"child"],[95,70,67,68],[95,71,67,69,"props"],[95,76,67,74],[95,77,67,75,"navigationKey"],[95,90,67,88],[95,95,67,93],[95,103,67,101],[95,107,67,105,"child"],[95,112,67,110],[95,113,67,111,"props"],[95,118,67,116],[95,119,67,117,"navigationKey"],[95,132,67,130],[95,137,67,135],[95,139,67,137],[95,140,67,138],[95,142,67,140],[96,12,68,10],[96,18,68,16],[96,22,68,20,"Error"],[96,27,68,25],[96,28,68,26],[96,68,68,66,"JSON"],[96,72,68,70],[96,73,68,71,"stringify"],[96,82,68,80],[96,83,68,81,"child"],[96,88,68,86],[96,89,68,87,"props"],[96,94,68,92],[96,95,68,93,"navigationKey"],[96,108,68,106],[96,109,68,107],[96,130,68,128,"child"],[96,135,68,133],[96,136,68,134,"props"],[96,141,68,139],[96,142,68,140,"name"],[96,146,68,144],[96,196,68,194],[96,197,68,195],[97,10,69,8],[98,10,70,8,"acc"],[98,13,70,11],[98,14,70,12,"push"],[98,18,70,16],[98,19,70,17],[99,12,71,10,"keys"],[99,16,71,14],[99,18,71,16],[99,19,71,17,"groupKey"],[99,27,71,25],[99,29,71,27,"child"],[99,34,71,32],[99,35,71,33,"props"],[99,40,71,38],[99,41,71,39,"navigationKey"],[99,54,71,52],[99,55,71,53],[100,12,72,10,"options"],[100,19,72,17],[100,21,72,19,"groupOptions"],[100,33,72,31],[101,12,73,10,"layout"],[101,18,73,16],[101,20,73,18,"groupLayout"],[101,31,73,29],[102,12,74,10,"props"],[102,17,74,15],[102,19,74,17,"child"],[102,24,74,22],[102,25,74,23,"props"],[103,10,75,8],[103,11,75,9],[103,12,75,10],[104,10,76,8],[104,17,76,15,"acc"],[104,20,76,18],[105,8,77,6],[106,8,78,6],[106,12,78,10,"isGroup"],[106,19,78,17],[106,20,78,18,"child"],[106,25,78,23],[106,26,78,24],[106,28,78,26],[107,10,79,8],[107,14,79,12],[107,15,79,13,"isValidKey"],[107,25,79,23],[107,26,79,24,"child"],[107,31,79,29],[107,32,79,30,"props"],[107,37,79,35],[107,38,79,36,"navigationKey"],[107,51,79,49],[107,52,79,50],[107,54,79,52],[108,12,80,10],[108,18,80,16],[108,22,80,20,"Error"],[108,27,80,25],[108,28,80,26],[108,68,80,66,"JSON"],[108,72,80,70],[108,73,80,71,"stringify"],[108,82,80,80],[108,83,80,81,"child"],[108,88,80,86],[108,89,80,87,"props"],[108,94,80,92],[108,95,80,93,"navigationKey"],[108,108,80,106],[108,109,80,107],[108,173,80,171],[108,174,80,172],[109,10,81,8],[111,10,83,8],[112,10,84,8],[113,10,85,8,"acc"],[113,13,85,11],[113,14,85,12,"push"],[113,18,85,16],[113,19,85,17],[113,22,85,20,"getRouteConfigsFromChildren"],[113,49,85,47],[113,50,85,48,"child"],[113,55,85,53],[113,56,85,54,"props"],[113,61,85,59],[113,62,85,60,"children"],[113,70,85,68],[113,72,85,70,"child"],[113,77,85,75],[113,78,85,76,"props"],[113,83,85,81],[113,84,85,82,"navigationKey"],[113,97,85,95],[114,10,86,8],[115,10,87,8],[116,10,88,8,"child"],[116,15,88,13],[116,16,88,14,"type"],[116,20,88,18],[116,25,88,23,"Group"],[116,33,88,28],[116,34,88,28,"Group"],[116,39,88,28],[116,42,88,31,"groupOptions"],[116,54,88,43],[116,57,88,46,"groupOptions"],[116,69,88,58],[116,73,88,62],[116,77,88,66],[116,80,88,69],[116,81,88,70],[116,84,88,73,"groupOptions"],[116,96,88,85],[116,98,88,87,"child"],[116,103,88,92],[116,104,88,93,"props"],[116,109,88,98],[116,110,88,99,"screenOptions"],[116,123,88,112],[116,124,88,113],[116,127,88,116],[116,128,88,117,"child"],[116,133,88,122],[116,134,88,123,"props"],[116,139,88,128],[116,140,88,129,"screenOptions"],[116,153,88,142],[116,154,88,143],[116,156,88,145],[116,163,88,152,"child"],[116,168,88,157],[116,169,88,158,"props"],[116,174,88,163],[116,175,88,164,"screenLayout"],[116,187,88,176],[116,192,88,181],[116,202,88,191],[116,205,88,194,"child"],[116,210,88,199],[116,211,88,200,"props"],[116,216,88,205],[116,217,88,206,"screenLayout"],[116,229,88,218],[116,232,88,221,"groupLayout"],[116,243,88,232],[116,244,88,233],[116,245,88,234],[117,10,89,8],[117,17,89,15,"acc"],[117,20,89,18],[118,8,90,6],[119,6,91,4],[120,6,92,4],[120,12,92,10],[120,16,92,14,"Error"],[120,21,92,19],[120,22,92,20],[120,122,92,120],[120,135,92,133],[120,149,92,133,"React"],[120,154,92,138],[120,155,92,139,"isValidElement"],[120,169,92,153],[120,170,92,154,"child"],[120,175,92,159],[120,176,92,160],[120,179,92,163],[120,183,92,167],[120,190,92,174,"child"],[120,195,92,179],[120,196,92,180,"type"],[120,200,92,184],[120,205,92,189],[120,213,92,197],[120,216,92,200,"child"],[120,221,92,205],[120,222,92,206,"type"],[120,226,92,210],[120,229,92,213,"child"],[120,234,92,218],[120,235,92,219,"type"],[120,239,92,223],[120,241,92,225,"name"],[120,245,92,229],[120,249,92,233,"child"],[120,254,92,238],[120,255,92,239,"props"],[120,260,92,244],[120,264,92,248],[120,268,92,252],[120,272,92,256],[120,279,92,263,"child"],[120,284,92,268],[120,285,92,269,"props"],[120,290,92,274],[120,295,92,279],[120,303,92,287],[120,307,92,291],[120,313,92,297],[120,317,92,301,"child"],[120,322,92,306],[120,323,92,307,"props"],[120,328,92,312],[120,332,92,316,"child"],[120,337,92,321],[120,338,92,322,"props"],[120,343,92,327],[120,345,92,329,"name"],[120,349,92,333],[120,352,92,336],[120,372,92,356,"child"],[120,377,92,361],[120,378,92,362,"props"],[120,383,92,367],[120,384,92,368,"name"],[120,388,92,372],[120,391,92,375],[120,394,92,378],[120,396,92,380],[120,398,92,382],[120,401,92,385],[120,408,92,392,"child"],[120,413,92,397],[120,418,92,402],[120,426,92,410],[120,429,92,413,"JSON"],[120,433,92,417],[120,434,92,418,"stringify"],[120,443,92,427],[120,444,92,428,"child"],[120,449,92,433],[120,450,92,434],[120,453,92,437],[120,457,92,441,"String"],[120,463,92,447],[120,464,92,448,"child"],[120,469,92,453],[120,470,92,454],[120,473,92,457],[120,565,92,549],[120,566,92,550],[121,4,93,2],[121,5,93,3],[121,7,93,5],[121,9,93,7],[121,10,93,8],[122,4,94,2],[122,8,94,6,"process"],[122,15,94,13],[122,16,94,14,"env"],[122,19,94,17],[122,20,94,18,"NODE_ENV"],[122,28,94,26],[122,33,94,31],[122,45,94,43],[122,47,94,45],[123,6,95,4,"configs"],[123,13,95,11],[123,14,95,12,"forEach"],[123,21,95,19],[123,22,95,20,"config"],[123,28,95,26],[123,32,95,30],[124,8,96,6],[124,14,96,12],[125,10,97,8,"name"],[125,14,97,12],[126,10,98,8,"children"],[126,18,98,16],[127,10,99,8,"component"],[127,19,99,17],[128,10,100,8,"getComponent"],[129,8,101,6],[129,9,101,7],[129,12,101,10,"config"],[129,18,101,16],[129,19,101,17,"props"],[129,24,101,22],[130,8,102,6],[130,12,102,10,"children"],[130,20,102,18],[130,24,102,22],[130,28,102,26],[130,32,102,30,"component"],[130,41,102,39],[130,46,102,44,"undefined"],[130,55,102,53],[130,59,102,57,"getComponent"],[130,71,102,69],[130,76,102,74,"undefined"],[130,85,102,83],[130,87,102,85],[131,10,103,8],[131,14,103,12,"children"],[131,22,103,20],[131,26,103,24],[131,30,103,28],[131,34,103,32,"component"],[131,43,103,41],[131,48,103,46,"undefined"],[131,57,103,55],[131,59,103,57],[132,12,104,10],[132,18,104,16],[132,22,104,20,"Error"],[132,27,104,25],[132,28,104,26],[132,89,104,87,"name"],[132,93,104,91],[132,129,104,127],[132,130,104,128],[133,10,105,8],[134,10,106,8],[134,14,106,12,"children"],[134,22,106,20],[134,26,106,24],[134,30,106,28],[134,34,106,32,"getComponent"],[134,46,106,44],[134,51,106,49,"undefined"],[134,60,106,58],[134,62,106,60],[135,12,107,10],[135,18,107,16],[135,22,107,20,"Error"],[135,27,107,25],[135,28,107,26],[135,92,107,90,"name"],[135,96,107,94],[135,132,107,130],[135,133,107,131],[136,10,108,8],[137,10,109,8],[137,14,109,12,"component"],[137,23,109,21],[137,28,109,26,"undefined"],[137,37,109,35],[137,41,109,39,"getComponent"],[137,53,109,51],[137,58,109,56,"undefined"],[137,67,109,65],[137,69,109,67],[138,12,110,10],[138,18,110,16],[138,22,110,20,"Error"],[138,27,110,25],[138,28,110,26],[138,93,110,91,"name"],[138,97,110,95],[138,133,110,131],[138,134,110,132],[139,10,111,8],[140,10,112,8],[140,14,112,12,"children"],[140,22,112,20],[140,26,112,24],[140,30,112,28],[140,34,112,32],[140,41,112,39,"children"],[140,49,112,47],[140,54,112,52],[140,64,112,62],[140,66,112,64],[141,12,113,10],[141,18,113,16],[141,22,113,20,"Error"],[141,27,113,25],[141,28,113,26],[141,88,113,86,"name"],[141,92,113,90],[141,145,113,143],[141,146,113,144],[142,10,114,8],[143,10,115,8],[143,14,115,12,"component"],[143,23,115,21],[143,28,115,26,"undefined"],[143,37,115,35],[143,41,115,39],[143,42,115,40],[143,46,115,40,"isValidElementType"],[143,54,115,58],[143,55,115,58,"isValidElementType"],[143,73,115,58],[143,75,115,59,"component"],[143,84,115,68],[143,85,115,69],[143,87,115,71],[144,12,116,10],[144,18,116,16],[144,22,116,20,"Error"],[144,27,116,25],[144,28,116,26],[144,89,116,87,"name"],[144,93,116,91],[144,133,116,131],[144,134,116,132],[145,10,117,8],[146,10,118,8],[146,14,118,12,"getComponent"],[146,26,118,24],[146,31,118,29,"undefined"],[146,40,118,38],[146,44,118,42],[146,51,118,49,"getComponent"],[146,63,118,61],[146,68,118,66],[146,78,118,76],[146,80,118,78],[147,12,119,10],[147,18,119,16],[147,22,119,20,"Error"],[147,27,119,25],[147,28,119,26],[147,92,119,90,"name"],[147,96,119,94],[147,151,119,149],[147,152,119,150],[148,10,120,8],[149,10,121,8],[149,14,121,12],[149,21,121,19,"component"],[149,30,121,28],[149,35,121,33],[149,45,121,43],[149,47,121,45],[150,12,122,10],[150,16,122,14,"component"],[150,25,122,23],[150,26,122,24,"name"],[150,30,122,28],[150,35,122,33],[150,46,122,44],[150,48,122,46],[151,14,123,12],[152,14,124,12],[153,14,125,12],[154,14,126,12,"console"],[154,21,126,19],[154,22,126,20,"warn"],[154,26,126,24],[154,27,126,25],[154,112,126,110,"name"],[154,116,126,114],[154,395,126,393],[154,396,126,394],[155,12,127,10],[155,13,127,11],[155,19,127,17],[155,23,127,21],[155,31,127,29],[155,32,127,30,"test"],[155,36,127,34],[155,37,127,35,"component"],[155,46,127,44],[155,47,127,45,"name"],[155,51,127,49],[155,52,127,50],[155,54,127,52],[156,14,128,12,"console"],[156,21,128,19],[156,22,128,20,"warn"],[156,26,128,24],[156,27,128,25],[156,61,128,59,"component"],[156,70,128,68],[156,71,128,69,"name"],[156,75,128,73],[156,96,128,94,"name"],[156,100,128,98],[156,301,128,299],[156,302,128,300],[157,12,129,10],[158,10,130,8],[159,8,131,6],[159,9,131,7],[159,15,131,13],[160,10,132,8],[160,16,132,14],[160,20,132,18,"Error"],[160,25,132,23],[160,26,132,24],[160,108,132,106,"name"],[160,112,132,110],[160,293,132,291],[160,294,132,292],[161,8,133,6],[162,6,134,4],[162,7,134,5],[162,8,134,6],[163,4,135,2],[164,4,136,2],[164,11,136,9,"configs"],[164,18,136,16],[165,2,137,0],[165,3,137,1],[166,2,138,0],[166,8,138,6,"getStateFromParams"],[166,26,138,24],[166,29,138,27,"params"],[166,35,138,33],[166,39,138,37],[167,4,139,2],[167,8,139,6,"params"],[167,14,139,12],[167,16,139,14,"state"],[167,21,139,19],[167,25,139,23],[167,29,139,27],[167,31,139,29],[168,6,140,4],[168,13,140,11,"params"],[168,19,140,17],[168,20,140,18,"state"],[168,25,140,23],[169,4,141,2],[169,5,141,3],[169,11,141,9],[169,15,141,13],[169,22,141,20,"params"],[169,28,141,26],[169,30,141,28,"screen"],[169,36,141,34],[169,41,141,39],[169,49,141,47],[169,53,141,51,"params"],[169,59,141,57],[169,61,141,59,"initial"],[169,68,141,66],[169,73,141,71],[169,78,141,76],[169,80,141,78],[170,6,142,4],[170,13,142,11],[171,8,143,6,"routes"],[171,14,143,12],[171,16,143,14],[171,17,143,15],[172,10,144,8,"name"],[172,14,144,12],[172,16,144,14,"params"],[172,22,144,20],[172,23,144,21,"screen"],[172,29,144,27],[173,10,145,8,"params"],[173,16,145,14],[173,18,145,16,"params"],[173,24,145,22],[173,25,145,23,"params"],[173,31,145,29],[174,10,146,8,"path"],[174,14,146,12],[174,16,146,14,"params"],[174,22,146,20],[174,23,146,21,"path"],[175,8,147,6],[175,9,147,7],[176,6,148,4],[176,7,148,5],[177,4,149,2],[178,4,150,2],[178,11,150,9,"undefined"],[178,20,150,18],[179,2,151,0],[179,3,151,1],[181,2,153,0],[182,0,154,0],[183,0,155,0],[184,0,156,0],[185,0,157,0],[186,0,158,0],[187,0,159,0],[188,2,160,7],[188,11,160,16,"useNavigationBuilder"],[188,31,160,36,"useNavigationBuilder"],[188,32,160,37,"createRouter"],[188,44,160,49],[188,46,160,51,"options"],[188,53,160,58],[188,55,160,60],[189,4,161,2],[189,10,161,8,"navigatorKey"],[189,22,161,20],[189,25,161,23],[189,29,161,23,"useRegisterNavigator"],[189,52,161,43],[189,53,161,43,"useRegisterNavigator"],[189,73,161,43],[189,75,161,44],[189,76,161,45],[190,4,162,2],[190,10,162,8,"route"],[190,15,162,13],[190,18,162,16,"React"],[190,23,162,21],[190,24,162,22,"useContext"],[190,34,162,32],[190,35,162,33,"NavigationRouteContext"],[190,60,162,55],[190,61,162,55,"NavigationRouteContext"],[190,83,162,55],[190,84,162,56],[191,4,163,2],[191,10,163,8],[192,6,164,4,"children"],[192,14,164,12],[193,6,165,4,"layout"],[193,12,165,10],[194,6,166,4,"screenOptions"],[194,19,166,17],[195,6,167,4,"screenLayout"],[195,18,167,16],[196,6,168,4,"screenListeners"],[196,21,168,19],[197,6,169,4,"UNSTABLE_router"],[197,21,169,19],[198,6,170,4],[198,9,170,7,"rest"],[199,4,171,2],[199,5,171,3],[199,8,171,6,"options"],[199,15,171,13],[200,4,172,2],[200,10,172,8,"routeConfigs"],[200,22,172,20],[200,25,172,23,"getRouteConfigsFromChildren"],[200,52,172,50],[200,53,172,51,"children"],[200,61,172,59],[200,62,172,60],[201,4,173,2],[201,10,173,8,"router"],[201,16,173,14],[201,19,173,17],[201,23,173,17,"useLazyValue"],[201,38,173,29],[201,39,173,29,"useLazyValue"],[201,51,173,29],[201,53,173,30],[201,59,173,36],[202,6,174,4],[202,10,174,8,"rest"],[202,14,174,12],[202,15,174,13,"initialRouteName"],[202,31,174,29],[202,35,174,33],[202,39,174,37],[202,43,174,41,"routeConfigs"],[202,55,174,53],[202,56,174,54,"every"],[202,61,174,59],[202,62,174,60,"config"],[202,68,174,66],[202,72,174,70,"config"],[202,78,174,76],[202,79,174,77,"props"],[202,84,174,82],[202,85,174,83,"name"],[202,89,174,87],[202,94,174,92,"rest"],[202,98,174,96],[202,99,174,97,"initialRouteName"],[202,115,174,113],[202,116,174,114],[202,118,174,116],[203,8,175,6],[203,14,175,12],[203,18,175,16,"Error"],[203,23,175,21],[203,24,175,22],[203,57,175,55,"rest"],[203,61,175,59],[203,62,175,60,"initialRouteName"],[203,78,175,76],[203,111,175,109],[203,112,175,110],[204,6,176,4],[205,6,177,4],[205,12,177,10,"original"],[205,20,177,18],[205,23,177,21,"createRouter"],[205,35,177,33],[205,36,177,34,"rest"],[205,40,177,38],[205,41,177,39],[206,6,178,4],[206,10,178,8,"UNSTABLE_router"],[206,25,178,23],[206,29,178,27],[206,33,178,31],[206,35,178,33],[207,8,179,6],[207,14,179,12,"overrides"],[207,23,179,21],[207,26,179,24,"UNSTABLE_router"],[207,41,179,39],[207,42,179,40,"original"],[207,50,179,48],[207,51,179,49],[208,8,180,6],[208,15,180,13],[209,10,181,8],[209,13,181,11,"original"],[209,21,181,19],[210,10,182,8],[210,13,182,11,"overrides"],[211,8,183,6],[211,9,183,7],[212,6,184,4],[213,6,185,4],[213,13,185,11,"original"],[213,21,185,19],[214,4,186,2],[214,5,186,3],[214,6,186,4],[215,4,187,2],[215,10,187,8,"screens"],[215,17,187,15],[215,20,187,18,"routeConfigs"],[215,32,187,30],[215,33,187,31,"reduce"],[215,39,187,37],[215,40,187,38],[215,41,187,39,"acc"],[215,44,187,42],[215,46,187,44,"config"],[215,52,187,50],[215,57,187,55],[216,6,188,4],[216,10,188,8,"config"],[216,16,188,14],[216,17,188,15,"props"],[216,22,188,20],[216,23,188,21,"name"],[216,27,188,25],[216,31,188,29,"acc"],[216,34,188,32],[216,36,188,34],[217,8,189,6],[217,14,189,12],[217,18,189,16,"Error"],[217,23,189,21],[217,24,189,22],[217,133,189,131,"config"],[217,139,189,137],[217,140,189,138,"props"],[217,145,189,143],[217,146,189,144,"name"],[217,150,189,148],[217,154,189,152],[217,155,189,153],[218,6,190,4],[219,6,191,4,"acc"],[219,9,191,7],[219,10,191,8,"config"],[219,16,191,14],[219,17,191,15,"props"],[219,22,191,20],[219,23,191,21,"name"],[219,27,191,25],[219,28,191,26],[219,31,191,29,"config"],[219,37,191,35],[220,6,192,4],[220,13,192,11,"acc"],[220,16,192,14],[221,4,193,2],[221,5,193,3],[221,7,193,5],[221,8,193,6],[221,9,193,7],[221,10,193,8],[222,4,194,2],[222,10,194,8,"routeNames"],[222,20,194,18],[222,23,194,21,"routeConfigs"],[222,35,194,33],[222,36,194,34,"map"],[222,39,194,37],[222,40,194,38,"config"],[222,46,194,44],[222,50,194,48,"config"],[222,56,194,54],[222,57,194,55,"props"],[222,62,194,60],[222,63,194,61,"name"],[222,67,194,65],[222,68,194,66],[223,4,195,2],[223,10,195,8,"routeKeyList"],[223,22,195,20],[223,25,195,23,"routeNames"],[223,35,195,33],[223,36,195,34,"reduce"],[223,42,195,40],[223,43,195,41],[223,44,195,42,"acc"],[223,47,195,45],[223,49,195,47,"curr"],[223,53,195,51],[223,58,195,56],[224,6,196,4,"acc"],[224,9,196,7],[224,10,196,8,"curr"],[224,14,196,12],[224,15,196,13],[224,18,196,16,"screens"],[224,25,196,23],[224,26,196,24,"curr"],[224,30,196,28],[224,31,196,29],[224,32,196,30,"keys"],[224,36,196,34],[224,37,196,35,"map"],[224,40,196,38],[224,41,196,39,"key"],[224,44,196,42],[224,48,196,46,"key"],[224,51,196,49],[224,55,196,53],[224,57,196,55],[224,58,196,56],[224,59,196,57,"join"],[224,63,196,61],[224,64,196,62],[224,67,196,65],[224,68,196,66],[225,6,197,4],[225,13,197,11,"acc"],[225,16,197,14],[226,4,198,2],[226,5,198,3],[226,7,198,5],[226,8,198,6],[226,9,198,7],[226,10,198,8],[227,4,199,2],[227,10,199,8,"routeParamList"],[227,24,199,22],[227,27,199,25,"routeNames"],[227,37,199,35],[227,38,199,36,"reduce"],[227,44,199,42],[227,45,199,43],[227,46,199,44,"acc"],[227,49,199,47],[227,51,199,49,"curr"],[227,55,199,53],[227,60,199,58],[228,6,200,4],[228,12,200,10],[229,8,201,6,"initialParams"],[230,6,202,4],[230,7,202,5],[230,10,202,8,"screens"],[230,17,202,15],[230,18,202,16,"curr"],[230,22,202,20],[230,23,202,21],[230,24,202,22,"props"],[230,29,202,27],[231,6,203,4,"acc"],[231,9,203,7],[231,10,203,8,"curr"],[231,14,203,12],[231,15,203,13],[231,18,203,16,"initialParams"],[231,31,203,29],[232,6,204,4],[232,13,204,11,"acc"],[232,16,204,14],[233,4,205,2],[233,5,205,3],[233,7,205,5],[233,8,205,6],[233,9,205,7],[233,10,205,8],[234,4,206,2],[234,10,206,8,"routeGetIdList"],[234,24,206,22],[234,27,206,25,"routeNames"],[234,37,206,35],[234,38,206,36,"reduce"],[234,44,206,42],[234,45,206,43],[234,46,206,44,"acc"],[234,49,206,47],[234,51,206,49,"curr"],[234,55,206,53],[234,60,206,58,"Object"],[234,66,206,64],[234,67,206,65,"assign"],[234,73,206,71],[234,74,206,72,"acc"],[234,77,206,75],[234,79,206,77],[235,6,207,4],[235,7,207,5,"curr"],[235,11,207,9],[235,14,207,12,"screens"],[235,21,207,19],[235,22,207,20,"curr"],[235,26,207,24],[235,27,207,25],[235,28,207,26,"props"],[235,33,207,31],[235,34,207,32,"getId"],[236,4,208,2],[236,5,208,3],[236,6,208,4],[236,8,208,6],[236,9,208,7],[236,10,208,8],[236,11,208,9],[237,4,209,2],[237,8,209,6],[237,9,209,7,"routeNames"],[237,19,209,17],[237,20,209,18,"length"],[237,26,209,24],[237,28,209,26],[238,6,210,4],[238,12,210,10],[238,16,210,14,"Error"],[238,21,210,19],[238,22,210,20],[238,114,210,112],[238,115,210,113],[239,4,211,2],[240,4,212,2],[240,10,212,8,"isStateValid"],[240,22,212,20],[240,25,212,23,"React"],[240,30,212,28],[240,31,212,29,"useCallback"],[240,42,212,40],[240,43,212,41,"state"],[240,48,212,46],[240,52,212,50,"state"],[240,57,212,55],[240,58,212,56,"type"],[240,62,212,60],[240,67,212,65,"undefined"],[240,76,212,74],[240,80,212,78,"state"],[240,85,212,83],[240,86,212,84,"type"],[240,90,212,88],[240,95,212,93,"router"],[240,101,212,99],[240,102,212,100,"type"],[240,106,212,104],[240,108,212,106],[240,109,212,107,"router"],[240,115,212,113],[240,116,212,114,"type"],[240,120,212,118],[240,121,212,119],[240,122,212,120],[241,4,213,2],[241,10,213,8,"isStateInitialized"],[241,28,213,26],[241,31,213,29,"React"],[241,36,213,34],[241,37,213,35,"useCallback"],[241,48,213,46],[241,49,213,47,"state"],[241,54,213,52],[241,58,213,56,"state"],[241,63,213,61],[241,68,213,66,"undefined"],[241,77,213,75],[241,81,213,79,"state"],[241,86,213,84],[241,87,213,85,"stale"],[241,92,213,90],[241,97,213,95],[241,102,213,100],[241,106,213,104,"isStateValid"],[241,118,213,116],[241,119,213,117,"state"],[241,124,213,122],[241,125,213,123],[241,127,213,125],[241,128,213,126,"isStateValid"],[241,140,213,138],[241,141,213,139],[241,142,213,140],[242,4,214,2],[242,10,214,8,"doesStateHaveOnlyInvalidRoutes"],[242,40,214,38],[242,43,214,41,"React"],[242,48,214,46],[242,49,214,47,"useCallback"],[242,60,214,58],[242,61,214,59,"state"],[242,66,214,64],[242,70,214,68,"state"],[242,75,214,73],[242,76,214,74,"routes"],[242,82,214,80],[242,83,214,81,"every"],[242,88,214,86],[242,89,214,87,"r"],[242,90,214,88],[242,94,214,92],[242,95,214,93,"routeNames"],[242,105,214,103],[242,106,214,104,"includes"],[242,114,214,112],[242,115,214,113,"r"],[242,116,214,114],[242,117,214,115,"name"],[242,121,214,119],[242,122,214,120],[242,123,214,121],[242,125,214,123],[242,126,214,124,"routeNames"],[242,136,214,134],[242,137,214,135],[242,138,214,136],[243,4,215,2],[243,10,215,8],[244,6,216,4,"state"],[244,11,216,9],[244,13,216,11,"currentState"],[244,25,216,23],[245,6,217,4,"getState"],[245,14,217,12],[245,16,217,14,"getCurrentState"],[245,31,217,29],[246,6,218,4,"setState"],[246,14,218,12],[246,16,218,14,"setCurrentState"],[246,31,218,29],[247,6,219,4,"setKey"],[247,12,219,10],[248,6,220,4,"getKey"],[248,12,220,10],[249,6,221,4,"getIsInitial"],[250,4,222,2],[250,5,222,3],[250,8,222,6,"React"],[250,13,222,11],[250,14,222,12,"useContext"],[250,24,222,22],[250,25,222,23,"NavigationStateContext"],[250,50,222,45],[250,51,222,45,"NavigationStateContext"],[250,73,222,45],[250,74,222,46],[251,4,223,2],[251,10,223,8,"stateCleanedUp"],[251,24,223,22],[251,27,223,25,"React"],[251,32,223,30],[251,33,223,31,"useRef"],[251,39,223,37],[251,40,223,38],[251,45,223,43],[251,46,223,44],[252,4,224,2],[252,10,224,8,"setState"],[252,18,224,16],[252,21,224,19],[252,25,224,19,"useLatestCallback"],[252,42,224,36],[252,43,224,36,"default"],[252,50,224,36],[252,52,224,37,"state"],[252,57,224,42],[252,61,224,46],[253,6,225,4],[253,10,225,8,"stateCleanedUp"],[253,24,225,22],[253,25,225,23,"current"],[253,32,225,30],[253,34,225,32],[254,8,226,6],[255,8,227,6],[256,8,228,6],[257,8,229,6],[258,6,230,4],[259,6,231,4,"setCurrentState"],[259,21,231,19],[259,22,231,20,"state"],[259,27,231,25],[259,28,231,26],[260,4,232,2],[260,5,232,3],[260,6,232,4],[261,4,233,2],[261,10,233,8],[261,11,233,9,"stateBeforeInitialization"],[261,36,233,34],[261,38,233,36,"initializedState"],[261,54,233,52],[261,56,233,54,"isFirstStateInitialization"],[261,82,233,80],[261,83,233,81],[261,86,233,84,"React"],[261,91,233,89],[261,92,233,90,"useMemo"],[261,99,233,97],[261,100,233,98],[261,106,233,104],[262,6,234,4],[262,12,234,10,"initialRouteParamList"],[262,33,234,31],[262,36,234,34,"routeNames"],[262,46,234,44],[262,47,234,45,"reduce"],[262,53,234,51],[262,54,234,52],[262,55,234,53,"acc"],[262,58,234,56],[262,60,234,58,"curr"],[262,64,234,62],[262,69,234,67],[263,8,235,6],[263,14,235,12],[264,10,236,8,"initialParams"],[265,8,237,6],[265,9,237,7],[265,12,237,10,"screens"],[265,19,237,17],[265,20,237,18,"curr"],[265,24,237,22],[265,25,237,23],[265,26,237,24,"props"],[265,31,237,29],[266,8,238,6],[266,14,238,12,"initialParamsFromParams"],[266,37,238,35],[266,40,238,38,"route"],[266,45,238,43],[266,47,238,45,"params"],[266,53,238,51],[266,55,238,53,"state"],[266,60,238,58],[266,64,238,62],[266,68,238,66],[266,72,238,70,"route"],[266,77,238,75],[266,79,238,77,"params"],[266,85,238,83],[266,87,238,85,"initial"],[266,94,238,92],[266,99,238,97],[266,104,238,102],[266,108,238,106,"route"],[266,113,238,111],[266,115,238,113,"params"],[266,121,238,119],[266,123,238,121,"screen"],[266,129,238,127],[266,134,238,132,"curr"],[266,138,238,136],[266,141,238,139,"route"],[266,146,238,144],[266,147,238,145,"params"],[266,153,238,151],[266,154,238,152,"params"],[266,160,238,158],[266,163,238,161,"undefined"],[266,172,238,170],[267,8,239,6,"acc"],[267,11,239,9],[267,12,239,10,"curr"],[267,16,239,14],[267,17,239,15],[267,20,239,18,"initialParams"],[267,33,239,31],[267,38,239,36,"undefined"],[267,47,239,45],[267,51,239,49,"initialParamsFromParams"],[267,74,239,72],[267,79,239,77,"undefined"],[267,88,239,86],[267,91,239,89],[268,10,240,8],[268,13,240,11,"initialParams"],[268,26,240,24],[269,10,241,8],[269,13,241,11,"initialParamsFromParams"],[270,8,242,6],[270,9,242,7],[270,12,242,10,"undefined"],[270,21,242,19],[271,8,243,6],[271,15,243,13,"acc"],[271,18,243,16],[272,6,244,4],[272,7,244,5],[272,9,244,7],[272,10,244,8],[272,11,244,9],[272,12,244,10],[274,6,246,4],[275,6,247,4],[276,6,248,4],[277,6,249,4],[278,6,250,4],[278,10,250,8],[278,11,250,9,"currentState"],[278,23,250,21],[278,28,250,26,"undefined"],[278,37,250,35],[278,41,250,39],[278,42,250,40,"isStateValid"],[278,54,250,52],[278,55,250,53,"currentState"],[278,67,250,65],[278,68,250,66],[278,73,250,71,"route"],[278,78,250,76],[278,80,250,78,"params"],[278,86,250,84],[278,88,250,86,"state"],[278,93,250,91],[278,97,250,95],[278,101,250,99],[278,105,250,103],[278,107,250,105],[278,114,250,112,"route"],[278,119,250,117],[278,121,250,119,"params"],[278,127,250,125],[278,129,250,127,"screen"],[278,135,250,133],[278,140,250,138],[278,148,250,146],[278,152,250,150,"route"],[278,157,250,155],[278,159,250,157,"params"],[278,165,250,163],[278,167,250,165,"initial"],[278,174,250,172],[278,179,250,177],[278,184,250,182],[278,185,250,183],[278,187,250,185],[279,8,251,6],[279,15,251,13],[279,16,251,14,"undefined"],[279,25,251,23],[279,27,251,25,"router"],[279,33,251,31],[279,34,251,32,"getInitialState"],[279,49,251,47],[279,50,251,48],[280,10,252,8,"routeNames"],[280,20,252,18],[281,10,253,8,"routeParamList"],[281,24,253,22],[281,26,253,24,"initialRouteParamList"],[281,47,253,45],[282,10,254,8,"routeGetIdList"],[283,8,255,6],[283,9,255,7],[283,10,255,8],[283,12,255,10],[283,16,255,14],[283,17,255,15],[284,6,256,4],[284,7,256,5],[284,13,256,11],[285,8,257,6],[285,14,257,12,"stateFromParams"],[285,29,257,27],[285,32,257,30,"getStateFromParams"],[285,50,257,48],[285,51,257,49,"route"],[285,56,257,54],[285,58,257,56,"params"],[285,64,257,62],[285,65,257,63],[286,8,258,6],[286,14,258,12,"stateBeforeInitialization"],[286,39,258,37],[286,42,258,40,"stateFromParams"],[286,57,258,55],[286,61,258,59,"currentState"],[286,73,258,71],[287,8,259,6],[287,14,259,12,"hydratedState"],[287,27,259,25],[287,30,259,28,"router"],[287,36,259,34],[287,37,259,35,"getRehydratedState"],[287,55,259,53],[287,56,259,54,"stateBeforeInitialization"],[287,81,259,79],[287,83,259,81],[288,10,260,8,"routeNames"],[288,20,260,18],[289,10,261,8,"routeParamList"],[289,24,261,22],[289,26,261,24,"initialRouteParamList"],[289,47,261,45],[290,10,262,8,"routeGetIdList"],[291,8,263,6],[291,9,263,7],[291,10,263,8],[292,8,264,6],[292,12,264,10,"options"],[292,19,264,17],[292,20,264,18,"UNSTABLE_routeNamesChangeBehavior"],[292,53,264,51],[292,58,264,56],[292,73,264,71],[292,77,264,75,"doesStateHaveOnlyInvalidRoutes"],[292,107,264,105],[292,108,264,106,"stateBeforeInitialization"],[292,133,264,131],[292,134,264,132],[292,136,264,134],[293,10,265,8],[293,17,265,15],[293,18,265,16,"stateBeforeInitialization"],[293,43,265,41],[293,45,265,43,"hydratedState"],[293,58,265,56],[293,60,265,58],[293,64,265,62],[293,65,265,63],[294,8,266,6],[295,8,267,6],[295,15,267,13],[295,16,267,14,"undefined"],[295,25,267,23],[295,27,267,25,"hydratedState"],[295,40,267,38],[295,42,267,40],[295,47,267,45],[295,48,267,46],[296,6,268,4],[297,6,269,4],[298,6,270,4],[299,6,271,4],[300,6,272,4],[301,6,273,4],[302,6,274,4],[303,4,275,2],[303,5,275,3],[303,7,275,5],[303,8,275,6,"currentState"],[303,20,275,18],[303,22,275,20,"router"],[303,28,275,26],[303,30,275,28,"isStateValid"],[303,42,275,40],[303,43,275,41],[303,44,275,42],[304,4,276,2],[304,10,276,8,"previousRouteKeyListRef"],[304,33,276,31],[304,36,276,34,"React"],[304,41,276,39],[304,42,276,40,"useRef"],[304,48,276,46],[304,49,276,47,"routeKeyList"],[304,61,276,59],[304,62,276,60],[305,4,277,2,"React"],[305,9,277,7],[305,10,277,8,"useEffect"],[305,19,277,17],[305,20,277,18],[305,26,277,24],[306,6,278,4,"previousRouteKeyListRef"],[306,29,278,27],[306,30,278,28,"current"],[306,37,278,35],[306,40,278,38,"routeKeyList"],[306,52,278,50],[307,4,279,2],[307,5,279,3],[307,6,279,4],[308,4,280,2],[308,10,280,8,"previousRouteKeyList"],[308,30,280,28],[308,33,280,31,"previousRouteKeyListRef"],[308,56,280,54],[308,57,280,55,"current"],[308,64,280,62],[309,4,281,2],[309,10,281,8],[309,11,281,9,"unhandledState"],[309,25,281,23],[309,27,281,25,"setUnhandledState"],[309,44,281,42],[309,45,281,43],[309,48,281,46,"React"],[309,53,281,51],[309,54,281,52,"useState"],[309,62,281,60],[309,63,281,61,"stateBeforeInitialization"],[309,88,281,86],[309,89,281,87],[311,4,283,2],[312,4,284,2],[313,4,285,2],[314,4,286,2],[315,4,287,2],[315,8,287,6,"options"],[315,15,287,13],[315,16,287,14,"UNSTABLE_routeNamesChangeBehavior"],[315,49,287,47],[315,54,287,52],[315,69,287,67],[315,73,287,71,"stateBeforeInitialization"],[315,98,287,96],[315,102,287,100,"unhandledState"],[315,116,287,114],[315,121,287,119,"stateBeforeInitialization"],[315,146,287,144],[315,148,287,146],[316,6,288,4,"setUnhandledState"],[316,23,288,21],[316,24,288,22,"stateBeforeInitialization"],[316,49,288,47],[316,50,288,48],[317,4,289,2],[318,4,290,2],[318,8,290,6,"state"],[318,13,290,11],[319,4,291,2],[320,4,292,2],[321,4,293,2],[322,4,294,2,"isStateInitialized"],[322,22,294,20],[322,23,294,21,"currentState"],[322,35,294,33],[322,36,294,34],[322,39,294,37,"currentState"],[322,51,294,49],[322,54,294,52,"initializedState"],[322,70,294,68],[323,4,295,2],[323,8,295,6,"nextState"],[323,17,295,15],[323,20,295,18,"state"],[323,25,295,23],[324,4,296,2],[324,8,296,6,"shouldClearUnhandledState"],[324,33,296,31],[324,36,296,34],[324,41,296,39],[326,4,298,2],[327,4,299,2],[328,4,300,2],[329,4,301,2],[329,8,301,6,"unhandledState"],[329,22,301,20],[329,24,301,22,"routes"],[329,30,301,28],[329,31,301,29,"every"],[329,36,301,34],[329,37,301,35,"r"],[329,38,301,36],[329,42,301,40,"routeNames"],[329,52,301,50],[329,53,301,51,"includes"],[329,61,301,59],[329,62,301,60,"r"],[329,63,301,61],[329,64,301,62,"name"],[329,68,301,66],[329,69,301,67],[329,70,301,68],[329,74,301,72,"state"],[329,79,301,77],[329,81,301,79,"routes"],[329,87,301,85],[329,88,301,86,"every"],[329,93,301,91],[329,94,301,92,"r"],[329,95,301,93],[329,99,301,97],[329,100,301,98,"routeNames"],[329,110,301,108],[329,111,301,109,"includes"],[329,119,301,117],[329,120,301,118,"r"],[329,121,301,119],[329,122,301,120,"name"],[329,126,301,124],[329,127,301,125],[329,128,301,126],[329,130,301,128],[330,6,302,4,"shouldClearUnhandledState"],[330,31,302,29],[330,34,302,32],[330,38,302,36],[331,6,303,4,"nextState"],[331,15,303,13],[331,18,303,16,"router"],[331,24,303,22],[331,25,303,23,"getRehydratedState"],[331,43,303,41],[331,44,303,42,"unhandledState"],[331,58,303,56],[331,60,303,58],[332,8,304,6,"routeNames"],[332,18,304,16],[333,8,305,6,"routeParamList"],[333,22,305,20],[334,8,306,6,"routeGetIdList"],[335,6,307,4],[335,7,307,5],[335,8,307,6],[336,4,308,2],[336,5,308,3],[336,11,308,9],[336,15,308,13],[336,16,308,14],[336,20,308,14,"isArrayEqual"],[336,35,308,26],[336,36,308,26,"isArrayEqual"],[336,48,308,26],[336,50,308,27,"state"],[336,55,308,32],[336,56,308,33,"routeNames"],[336,66,308,43],[336,68,308,45,"routeNames"],[336,78,308,55],[336,79,308,56],[336,83,308,60],[336,84,308,61],[336,88,308,61,"isRecordEqual"],[336,104,308,74],[336,105,308,74,"isRecordEqual"],[336,118,308,74],[336,120,308,75,"routeKeyList"],[336,132,308,87],[336,134,308,89,"previousRouteKeyList"],[336,154,308,109],[336,155,308,110],[336,157,308,112],[337,6,309,4],[338,6,310,4,"nextState"],[338,15,310,13],[338,18,310,16,"router"],[338,24,310,22],[338,25,310,23,"getStateForRouteNamesChange"],[338,52,310,50],[338,53,310,51,"state"],[338,58,310,56],[338,60,310,58],[339,8,311,6,"routeNames"],[339,18,311,16],[340,8,312,6,"routeParamList"],[340,22,312,20],[341,8,313,6,"routeGetIdList"],[341,22,313,20],[342,8,314,6,"routeKeyChanges"],[342,23,314,21],[342,25,314,23,"Object"],[342,31,314,29],[342,32,314,30,"keys"],[342,36,314,34],[342,37,314,35,"routeKeyList"],[342,49,314,47],[342,50,314,48],[342,51,314,49,"filter"],[342,57,314,55],[342,58,314,56,"name"],[342,62,314,60],[342,66,314,64,"name"],[342,70,314,68],[342,74,314,72,"previousRouteKeyList"],[342,94,314,92],[342,98,314,96,"routeKeyList"],[342,110,314,108],[342,111,314,109,"name"],[342,115,314,113],[342,116,314,114],[342,121,314,119,"previousRouteKeyList"],[342,141,314,139],[342,142,314,140,"name"],[342,146,314,144],[342,147,314,145],[343,6,315,4],[343,7,315,5],[343,8,315,6],[344,4,316,2],[345,4,317,2],[345,10,317,8,"previousNestedParamsRef"],[345,33,317,31],[345,36,317,34,"React"],[345,41,317,39],[345,42,317,40,"useRef"],[345,48,317,46],[345,49,317,47,"route"],[345,54,317,52],[345,56,317,54,"params"],[345,62,317,60],[345,63,317,61],[346,4,318,2,"React"],[346,9,318,7],[346,10,318,8,"useEffect"],[346,19,318,17],[346,20,318,18],[346,26,318,24],[347,6,319,4,"previousNestedParamsRef"],[347,29,319,27],[347,30,319,28,"current"],[347,37,319,35],[347,40,319,38,"route"],[347,45,319,43],[347,47,319,45,"params"],[347,53,319,51],[348,4,320,2],[348,5,320,3],[348,7,320,5],[348,8,320,6,"route"],[348,13,320,11],[348,15,320,13,"params"],[348,21,320,19],[348,22,320,20],[348,23,320,21],[349,4,321,2],[349,8,321,6,"route"],[349,13,321,11],[349,15,321,13,"params"],[349,21,321,19],[349,23,321,21],[350,6,322,4],[350,12,322,10,"previousParams"],[350,26,322,24],[350,29,322,27,"previousNestedParamsRef"],[350,52,322,50],[350,53,322,51,"current"],[350,60,322,58],[351,6,323,4],[351,10,323,8,"action"],[351,16,323,14],[352,6,324,4],[352,10,324,8],[352,17,324,15,"route"],[352,22,324,20],[352,23,324,21,"params"],[352,29,324,27],[352,30,324,28,"state"],[352,35,324,33],[352,40,324,38],[352,48,324,46],[352,52,324,50,"route"],[352,57,324,55],[352,58,324,56,"params"],[352,64,324,62],[352,65,324,63,"state"],[352,70,324,68],[352,74,324,72],[352,78,324,76],[352,82,324,80,"route"],[352,87,324,85],[352,88,324,86,"params"],[352,94,324,92],[352,99,324,97,"previousParams"],[352,113,324,111],[352,115,324,113],[353,8,325,6],[353,12,325,10,"options"],[353,19,325,17],[353,20,325,18,"UNSTABLE_routeNamesChangeBehavior"],[353,53,325,51],[353,58,325,56],[353,73,325,71],[353,77,325,75,"doesStateHaveOnlyInvalidRoutes"],[353,107,325,105],[353,108,325,106,"route"],[353,113,325,111],[353,114,325,112,"params"],[353,120,325,118],[353,121,325,119,"state"],[353,126,325,124],[353,127,325,125],[353,129,325,127],[354,10,326,8],[354,14,326,12,"route"],[354,19,326,17],[354,20,326,18,"params"],[354,26,326,24],[354,27,326,25,"state"],[354,32,326,30],[354,37,326,35,"unhandledState"],[354,51,326,49],[354,53,326,51],[355,12,327,10,"setUnhandledState"],[355,29,327,27],[355,30,327,28,"route"],[355,35,327,33],[355,36,327,34,"params"],[355,42,327,40],[355,43,327,41,"state"],[355,48,327,46],[355,49,327,47],[356,10,328,8],[357,8,329,6],[357,9,329,7],[357,15,329,13],[358,10,330,8],[359,10,331,8,"action"],[359,16,331,14],[359,19,331,17,"CommonActions"],[359,42,331,30],[359,43,331,30,"CommonActions"],[359,56,331,30],[359,57,331,31,"reset"],[359,62,331,36],[359,63,331,37,"route"],[359,68,331,42],[359,69,331,43,"params"],[359,75,331,49],[359,76,331,50,"state"],[359,81,331,55],[359,82,331,56],[360,8,332,6],[361,6,333,4],[361,7,333,5],[361,13,333,11],[361,17,333,15],[361,24,333,22,"route"],[361,29,333,27],[361,30,333,28,"params"],[361,36,333,34],[361,37,333,35,"screen"],[361,43,333,41],[361,48,333,46],[361,56,333,54],[361,61,333,59,"route"],[361,66,333,64],[361,67,333,65,"params"],[361,73,333,71],[361,74,333,72,"initial"],[361,81,333,79],[361,86,333,84],[361,91,333,89],[361,95,333,93,"isFirstStateInitialization"],[361,121,333,119],[361,125,333,123,"route"],[361,130,333,128],[361,131,333,129,"params"],[361,137,333,135],[361,142,333,140,"previousParams"],[361,156,333,154],[361,157,333,155],[361,159,333,157],[362,8,334,6],[362,12,334,10,"options"],[362,19,334,17],[362,20,334,18,"UNSTABLE_routeNamesChangeBehavior"],[362,53,334,51],[362,58,334,56],[362,73,334,71],[362,77,334,75],[362,78,334,76,"routeNames"],[362,88,334,86],[362,89,334,87,"includes"],[362,97,334,95],[362,98,334,96,"route"],[362,103,334,101],[362,104,334,102,"params"],[362,110,334,108],[362,111,334,109,"screen"],[362,117,334,115],[362,118,334,116],[362,120,334,118],[363,10,335,8],[363,16,335,14,"state"],[363,21,335,19],[363,24,335,22,"getStateFromParams"],[363,42,335,40],[363,43,335,41,"route"],[363,48,335,46],[363,49,335,47,"params"],[363,55,335,53],[363,56,335,54],[364,10,336,8],[364,14,336,12,"state"],[364,19,336,17],[364,23,336,21],[364,27,336,25],[364,31,336,29],[364,32,336,30],[364,36,336,30,"deepEqual"],[364,45,336,39],[364,46,336,39,"default"],[364,53,336,39],[364,55,336,40,"state"],[364,60,336,45],[364,62,336,47,"unhandledState"],[364,76,336,61],[364,77,336,62],[364,79,336,64],[365,12,337,10,"setUnhandledState"],[365,29,337,27],[365,30,337,28,"state"],[365,35,337,33],[365,36,337,34],[366,10,338,8],[367,8,339,6],[367,9,339,7],[367,15,339,13],[368,10,340,8],[369,10,341,8,"action"],[369,16,341,14],[369,19,341,17,"CommonActions"],[369,42,341,30],[369,43,341,30,"CommonActions"],[369,56,341,30],[369,57,341,31,"navigate"],[369,65,341,39],[369,66,341,40],[370,12,342,10,"name"],[370,16,342,14],[370,18,342,16,"route"],[370,23,342,21],[370,24,342,22,"params"],[370,30,342,28],[370,31,342,29,"screen"],[370,37,342,35],[371,12,343,10,"params"],[371,18,343,16],[371,20,343,18,"route"],[371,25,343,23],[371,26,343,24,"params"],[371,32,343,30],[371,33,343,31,"params"],[371,39,343,37],[372,12,344,10,"path"],[372,16,344,14],[372,18,344,16,"route"],[372,23,344,21],[372,24,344,22,"params"],[372,30,344,28],[372,31,344,29,"path"],[372,35,344,33],[373,12,345,10,"merge"],[373,17,345,15],[373,19,345,17,"route"],[373,24,345,22],[373,25,345,23,"params"],[373,31,345,29],[373,32,345,30,"merge"],[373,37,345,35],[374,12,346,10,"pop"],[374,15,346,13],[374,17,346,15,"route"],[374,22,346,20],[374,23,346,21,"params"],[374,29,346,27],[374,30,346,28,"pop"],[375,10,347,8],[375,11,347,9],[375,12,347,10],[376,8,348,6],[377,6,349,4],[379,6,351,4],[380,6,352,4],[380,12,352,10,"updatedState"],[380,24,352,22],[380,27,352,25,"action"],[380,33,352,31],[380,36,352,34,"router"],[380,42,352,40],[380,43,352,41,"getStateForAction"],[380,60,352,58],[380,61,352,59,"nextState"],[380,70,352,68],[380,72,352,70,"action"],[380,78,352,76],[380,80,352,78],[381,8,353,6,"routeNames"],[381,18,353,16],[382,8,354,6,"routeParamList"],[382,22,354,20],[383,8,355,6,"routeGetIdList"],[384,6,356,4],[384,7,356,5],[384,8,356,6],[384,11,356,9],[384,15,356,13],[385,6,357,4,"nextState"],[385,15,357,13],[385,18,357,16,"updatedState"],[385,30,357,28],[385,35,357,33],[385,39,357,37],[385,42,357,40,"router"],[385,48,357,46],[385,49,357,47,"getRehydratedState"],[385,67,357,65],[385,68,357,66,"updatedState"],[385,80,357,78],[385,82,357,80],[386,8,358,6,"routeNames"],[386,18,358,16],[387,8,359,6,"routeParamList"],[387,22,359,20],[388,8,360,6,"routeGetIdList"],[389,6,361,4],[389,7,361,5],[389,8,361,6],[389,11,361,9,"nextState"],[389,20,361,18],[390,4,362,2],[391,4,363,2],[391,10,363,8,"shouldUpdate"],[391,22,363,20],[391,25,363,23,"state"],[391,30,363,28],[391,35,363,33,"nextState"],[391,44,363,42],[392,4,364,2],[392,8,364,2,"useScheduleUpdate"],[392,28,364,19],[392,29,364,19,"useScheduleUpdate"],[392,46,364,19],[392,48,364,20],[392,54,364,26],[393,6,365,4],[393,10,365,8,"shouldUpdate"],[393,22,365,20],[393,24,365,22],[394,8,366,6],[395,8,367,6,"setState"],[395,16,367,14],[395,17,367,15,"nextState"],[395,26,367,24],[395,27,367,25],[396,8,368,6],[396,12,368,10,"shouldClearUnhandledState"],[396,37,368,35],[396,39,368,37],[397,10,369,8,"setUnhandledState"],[397,27,369,25],[397,28,369,26,"undefined"],[397,37,369,35],[397,38,369,36],[398,8,370,6],[399,6,371,4],[400,4,372,2],[400,5,372,3],[400,6,372,4],[402,4,374,2],[403,4,375,2],[404,4,376,2],[405,4,377,2,"state"],[405,9,377,7],[405,12,377,10,"nextState"],[405,21,377,19],[406,4,378,2,"React"],[406,9,378,7],[406,10,378,8,"useEffect"],[406,19,378,17],[406,20,378,18],[406,26,378,24],[407,6,379,4],[408,6,380,4],[409,6,381,4,"stateCleanedUp"],[409,20,381,18],[409,21,381,19,"current"],[409,28,381,26],[409,31,381,29],[409,36,381,34],[410,6,382,4,"setKey"],[410,12,382,10],[410,13,382,11,"navigatorKey"],[410,25,382,23],[410,26,382,24],[411,6,383,4],[411,10,383,8],[411,11,383,9,"getIsInitial"],[411,23,383,21],[411,24,383,22],[411,25,383,23],[411,27,383,25],[412,8,384,6],[413,8,385,6],[414,8,386,6],[415,8,387,6,"setState"],[415,16,387,14],[415,17,387,15,"nextState"],[415,26,387,24],[415,27,387,25],[416,6,388,4],[417,6,389,4],[417,13,389,11],[417,19,389,17],[418,8,390,6],[419,8,391,6],[419,12,391,10,"getCurrentState"],[419,27,391,25],[419,28,391,26],[419,29,391,27],[419,34,391,32,"undefined"],[419,43,391,41],[419,47,391,45,"getKey"],[419,53,391,51],[419,54,391,52],[419,55,391,53],[419,60,391,58,"navigatorKey"],[419,72,391,70],[419,74,391,72],[420,10,392,8,"setCurrentState"],[420,25,392,23],[420,26,392,24,"undefined"],[420,35,392,33],[420,36,392,34],[421,10,393,8,"stateCleanedUp"],[421,24,393,22],[421,25,393,23,"current"],[421,32,393,30],[421,35,393,33],[421,39,393,37],[422,8,394,6],[423,6,395,4],[423,7,395,5],[424,6,396,4],[425,4,397,2],[425,5,397,3],[425,7,397,5],[425,9,397,7],[425,10,397,8],[427,4,399,2],[428,4,400,2],[429,4,401,2],[430,4,402,2],[431,4,403,2],[432,4,404,2],[432,10,404,8,"stateRef"],[432,18,404,16],[432,21,404,19,"React"],[432,26,404,24],[432,27,404,25,"useRef"],[432,33,404,31],[432,34,404,32,"state"],[432,39,404,37],[432,40,404,38],[433,4,405,2,"stateRef"],[433,12,405,10],[433,13,405,11,"current"],[433,20,405,18],[433,23,405,21,"state"],[433,28,405,26],[434,4,406,2],[434,8,406,2,"useClientLayoutEffect"],[434,32,406,23],[434,33,406,23,"useClientLayoutEffect"],[434,54,406,23],[434,56,406,24],[434,62,406,30],[435,6,407,4,"stateRef"],[435,14,407,12],[435,15,407,13,"current"],[435,22,407,20],[435,25,407,23],[435,29,407,27],[436,4,408,2],[436,5,408,3],[436,6,408,4],[437,4,409,2],[437,10,409,8,"getState"],[437,18,409,16],[437,21,409,19],[437,25,409,19,"useLatestCallback"],[437,42,409,36],[437,43,409,36,"default"],[437,50,409,36],[437,52,409,37],[437,58,409,43],[438,6,410,4],[438,12,410,10,"currentState"],[438,24,410,22],[438,27,410,25,"getCurrentState"],[438,42,410,40],[438,43,410,41],[438,44,410,42],[439,6,411,4],[439,13,411,11],[439,17,411,11,"deepFreeze"],[439,30,411,21],[439,31,411,21,"deepFreeze"],[439,41,411,21],[439,43,411,22,"isStateInitialized"],[439,61,411,40],[439,62,411,41,"currentState"],[439,74,411,53],[439,75,411,54],[439,78,411,57,"currentState"],[439,90,411,69],[439,93,411,72,"initializedState"],[439,109,411,88],[439,110,411,89],[440,4,412,2],[440,5,412,3],[440,6,412,4],[441,4,413,2],[441,10,413,8,"emitter"],[441,17,413,15],[441,20,413,18],[441,24,413,18,"useEventEmitter"],[441,42,413,33],[441,43,413,33,"useEventEmitter"],[441,58,413,33],[441,60,413,34,"e"],[441,61,413,35],[441,65,413,39],[442,6,414,4],[442,12,414,10,"routeNames"],[442,22,414,20],[442,25,414,23],[442,27,414,25],[443,6,415,4],[443,10,415,8,"route"],[443,15,415,13],[444,6,416,4],[444,10,416,8,"e"],[444,11,416,9],[444,12,416,10,"target"],[444,18,416,16],[444,20,416,18],[445,8,417,6,"route"],[445,13,417,11],[445,16,417,14,"state"],[445,21,417,19],[445,22,417,20,"routes"],[445,28,417,26],[445,29,417,27,"find"],[445,33,417,31],[445,34,417,32,"route"],[445,39,417,37],[445,43,417,41,"route"],[445,48,417,46],[445,49,417,47,"key"],[445,52,417,50],[445,57,417,55,"e"],[445,58,417,56],[445,59,417,57,"target"],[445,65,417,63],[445,66,417,64],[446,8,418,6],[446,12,418,10,"route"],[446,17,418,15],[446,19,418,17,"name"],[446,23,418,21],[446,25,418,23],[447,10,419,8,"routeNames"],[447,20,419,18],[447,21,419,19,"push"],[447,25,419,23],[447,26,419,24,"route"],[447,31,419,29],[447,32,419,30,"name"],[447,36,419,34],[447,37,419,35],[448,8,420,6],[449,6,421,4],[449,7,421,5],[449,13,421,11],[450,8,422,6,"route"],[450,13,422,11],[450,16,422,14,"state"],[450,21,422,19],[450,22,422,20,"routes"],[450,28,422,26],[450,29,422,27,"state"],[450,34,422,32],[450,35,422,33,"index"],[450,40,422,38],[450,41,422,39],[451,8,423,6,"routeNames"],[451,18,423,16],[451,19,423,17,"push"],[451,23,423,21],[451,24,423,22],[451,27,423,25,"Object"],[451,33,423,31],[451,34,423,32,"keys"],[451,38,423,36],[451,39,423,37,"screens"],[451,46,423,44],[451,47,423,45],[451,48,423,46,"filter"],[451,54,423,52],[451,55,423,53,"name"],[451,59,423,57],[451,63,423,61,"route"],[451,68,423,66],[451,70,423,68,"name"],[451,74,423,72],[451,79,423,77,"name"],[451,83,423,81],[451,84,423,82],[451,85,423,83],[452,6,424,4],[453,6,425,4],[453,10,425,8,"route"],[453,15,425,13],[453,19,425,17],[453,23,425,21],[453,25,425,23],[454,8,426,6],[455,6,427,4],[456,6,428,4],[456,12,428,10,"navigation"],[456,22,428,20],[456,25,428,23,"descriptors"],[456,36,428,34],[456,37,428,35,"route"],[456,42,428,40],[456,43,428,41,"key"],[456,46,428,44],[456,47,428,45],[456,48,428,46,"navigation"],[456,58,428,56],[457,6,429,4],[457,12,429,10,"listeners"],[457,21,429,19],[457,24,429,22],[457,26,429,24],[457,27,429,25,"concat"],[457,33,429,31],[458,6,430,4],[459,6,431,4],[459,9,431,7],[459,10,431,8,"screenListeners"],[459,25,431,23],[459,27,431,25],[459,30,431,28,"routeNames"],[459,40,431,38],[459,41,431,39,"map"],[459,44,431,42],[459,45,431,43,"name"],[459,49,431,47],[459,53,431,51],[460,8,432,6],[460,14,432,12],[461,10,433,8,"listeners"],[462,8,434,6],[462,9,434,7],[462,12,434,10,"screens"],[462,19,434,17],[462,20,434,18,"name"],[462,24,434,22],[462,25,434,23],[462,26,434,24,"props"],[462,31,434,29],[463,8,435,6],[463,15,435,13,"listeners"],[463,24,435,22],[464,6,436,4],[464,7,436,5],[464,8,436,6],[464,9,436,7],[464,10,436,8,"map"],[464,13,436,11],[464,14,436,12,"listeners"],[464,23,436,21],[464,27,436,25],[465,8,437,6],[465,14,437,12,"map"],[465,17,437,15],[465,20,437,18],[465,27,437,25,"listeners"],[465,36,437,34],[465,41,437,39],[465,51,437,49],[465,54,437,52,"listeners"],[465,63,437,61],[465,64,437,62],[466,10,438,8,"route"],[466,15,438,13],[466,17,438,15,"route"],[466,22,438,20],[467,10,439,8,"navigation"],[468,8,440,6],[468,9,440,7],[468,10,440,8],[468,13,440,11,"listeners"],[468,22,440,20],[469,8,441,6],[469,15,441,13,"map"],[469,18,441,16],[469,21,441,19,"Object"],[469,27,441,25],[469,28,441,26,"keys"],[469,32,441,30],[469,33,441,31,"map"],[469,36,441,34],[469,37,441,35],[469,38,441,36,"filter"],[469,44,441,42],[469,45,441,43,"type"],[469,49,441,47],[469,53,441,51,"type"],[469,57,441,55],[469,62,441,60,"e"],[469,63,441,61],[469,64,441,62,"type"],[469,68,441,66],[469,69,441,67],[469,70,441,68,"map"],[469,73,441,71],[469,74,441,72,"type"],[469,78,441,76],[469,82,441,80,"map"],[469,85,441,83],[469,88,441,86,"type"],[469,92,441,90],[469,93,441,91],[469,94,441,92],[469,97,441,95,"undefined"],[469,106,441,104],[470,6,442,4],[470,7,442,5],[470,8,442,6],[471,6,443,4],[472,6,444,4],[473,6,444,4],[473,7,445,5,"filter"],[473,13,445,11],[473,14,445,12],[473,15,445,13,"cb"],[473,17,445,15],[473,19,445,17,"i"],[473,20,445,18],[473,22,445,20,"self"],[473,26,445,24],[473,31,445,29,"cb"],[473,33,445,31],[473,37,445,35,"self"],[473,41,445,39],[473,42,445,40,"lastIndexOf"],[473,53,445,51],[473,54,445,52,"cb"],[473,56,445,54],[473,57,445,55],[473,62,445,60,"i"],[473,63,445,61],[473,64,445,62],[474,6,446,4,"listeners"],[474,15,446,13],[474,16,446,14,"forEach"],[474,23,446,21],[474,24,446,22,"listener"],[474,32,446,30],[474,36,446,34,"listener"],[474,44,446,42],[474,47,446,45,"e"],[474,48,446,46],[474,49,446,47],[474,50,446,48],[475,4,447,2],[475,5,447,3],[475,6,447,4],[476,4,448,2],[476,8,448,2,"useFocusEvents"],[476,25,448,16],[476,26,448,16,"useFocusEvents"],[476,40,448,16],[476,42,448,17],[477,6,449,4,"state"],[477,11,449,9],[478,6,450,4,"emitter"],[479,4,451,2],[479,5,451,3],[479,6,451,4],[480,4,452,2,"React"],[480,9,452,7],[480,10,452,8,"useEffect"],[480,19,452,17],[480,20,452,18],[480,26,452,24],[481,6,453,4,"emitter"],[481,13,453,11],[481,14,453,12,"emit"],[481,18,453,16],[481,19,453,17],[482,8,454,6,"type"],[482,12,454,10],[482,14,454,12],[482,21,454,19],[483,8,455,6,"data"],[483,12,455,10],[483,14,455,12],[484,10,456,8,"state"],[485,8,457,6],[486,6,458,4],[486,7,458,5],[486,8,458,6],[487,4,459,2],[487,5,459,3],[487,7,459,5],[487,8,459,6,"emitter"],[487,15,459,13],[487,17,459,15,"state"],[487,22,459,20],[487,23,459,21],[487,24,459,22],[488,4,460,2],[488,10,460,8],[489,6,461,4,"listeners"],[489,15,461,13],[489,17,461,15,"childListeners"],[489,31,461,29],[490,6,462,4,"addListener"],[491,4,463,2],[491,5,463,3],[491,8,463,6],[491,12,463,6,"useChildListeners"],[491,32,463,23],[491,33,463,23,"useChildListeners"],[491,50,463,23],[491,52,463,24],[491,53,463,25],[492,4,464,2],[492,10,464,8],[493,6,465,4,"keyedListeners"],[493,20,465,18],[494,6,466,4,"addKeyedListener"],[495,4,467,2],[495,5,467,3],[495,8,467,6],[495,12,467,6,"useKeyedChildListeners"],[495,37,467,28],[495,38,467,28,"useKeyedChildListeners"],[495,60,467,28],[495,62,467,29],[495,63,467,30],[496,4,468,2],[496,10,468,8,"onAction"],[496,18,468,16],[496,21,468,19],[496,25,468,19,"useOnAction"],[496,39,468,30],[496,40,468,30,"useOnAction"],[496,51,468,30],[496,53,468,31],[497,6,469,4,"router"],[497,12,469,10],[498,6,470,4,"getState"],[498,14,470,12],[499,6,471,4,"setState"],[499,14,471,12],[500,6,472,4,"key"],[500,9,472,7],[500,11,472,9,"route"],[500,16,472,14],[500,18,472,16,"key"],[500,21,472,19],[501,6,473,4,"actionListeners"],[501,21,473,19],[501,23,473,21,"childListeners"],[501,37,473,35],[501,38,473,36,"action"],[501,44,473,42],[502,6,474,4,"beforeRemoveListeners"],[502,27,474,25],[502,29,474,27,"keyedListeners"],[502,43,474,41],[502,44,474,42,"beforeRemove"],[502,56,474,54],[503,6,475,4,"routerConfigOptions"],[503,25,475,23],[503,27,475,25],[504,8,476,6,"routeNames"],[504,18,476,16],[505,8,477,6,"routeParamList"],[505,22,477,20],[506,8,478,6,"routeGetIdList"],[507,6,479,4],[507,7,479,5],[508,6,480,4,"emitter"],[509,4,481,2],[509,5,481,3],[509,6,481,4],[510,4,482,2],[510,10,482,8,"onRouteFocus"],[510,22,482,20],[510,25,482,23],[510,29,482,23,"useOnRouteFocus"],[510,47,482,38],[510,48,482,38,"useOnRouteFocus"],[510,63,482,38],[510,65,482,39],[511,6,483,4,"router"],[511,12,483,10],[512,6,484,4,"key"],[512,9,484,7],[512,11,484,9,"route"],[512,16,484,14],[512,18,484,16,"key"],[512,21,484,19],[513,6,485,4,"getState"],[513,14,485,12],[514,6,486,4,"setState"],[515,4,487,2],[515,5,487,3],[515,6,487,4],[516,4,488,2],[516,10,488,8,"onUnhandledActionParent"],[516,33,488,31],[516,36,488,34,"React"],[516,41,488,39],[516,42,488,40,"useContext"],[516,52,488,50],[516,53,488,51,"UnhandledActionContext"],[516,78,488,73],[516,79,488,73,"UnhandledActionContext"],[516,101,488,73],[516,102,488,74],[517,4,489,2],[517,10,489,8,"onUnhandledAction"],[517,27,489,25],[517,30,489,28],[517,34,489,28,"useLatestCallback"],[517,51,489,45],[517,52,489,45,"default"],[517,59,489,45],[517,61,489,46,"action"],[517,67,489,52],[517,71,489,56],[518,6,490,4],[518,10,490,8,"options"],[518,17,490,15],[518,18,490,16,"UNSTABLE_routeNamesChangeBehavior"],[518,51,490,49],[518,56,490,54],[518,71,490,69],[518,75,490,73,"action"],[518,81,490,79],[518,82,490,80,"type"],[518,86,490,84],[518,91,490,89],[518,101,490,99],[518,105,490,103,"action"],[518,111,490,109],[518,112,490,110,"payload"],[518,119,490,117],[518,123,490,121],[518,127,490,125],[518,131,490,129],[518,137,490,135],[518,141,490,139,"action"],[518,147,490,145],[518,148,490,146,"payload"],[518,155,490,153],[518,159,490,157],[518,166,490,164,"action"],[518,172,490,170],[518,173,490,171,"payload"],[518,180,490,178],[518,181,490,179,"name"],[518,185,490,183],[518,190,490,188],[518,198,490,196],[518,202,490,200],[518,203,490,201,"routeNames"],[518,213,490,211],[518,214,490,212,"includes"],[518,222,490,220],[518,223,490,221,"action"],[518,229,490,227],[518,230,490,228,"payload"],[518,237,490,235],[518,238,490,236,"name"],[518,242,490,240],[518,243,490,241],[518,245,490,243],[519,8,491,6],[519,14,491,12,"state"],[519,19,491,17],[519,22,491,20],[520,10,492,8,"routes"],[520,16,492,14],[520,18,492,16],[520,19,492,17],[521,12,493,10,"name"],[521,16,493,14],[521,18,493,16,"action"],[521,24,493,22],[521,25,493,23,"payload"],[521,32,493,30],[521,33,493,31,"name"],[521,37,493,35],[522,12,494,10,"params"],[522,18,494,16],[522,20,494,18],[522,28,494,26],[522,32,494,30,"action"],[522,38,494,36],[522,39,494,37,"payload"],[522,46,494,44],[522,50,494,48],[522,57,494,55,"action"],[522,63,494,61],[522,64,494,62,"payload"],[522,71,494,69],[522,72,494,70,"params"],[522,78,494,76],[522,83,494,81],[522,91,494,89],[522,95,494,93,"action"],[522,101,494,99],[522,102,494,100,"payload"],[522,109,494,107],[522,110,494,108,"params"],[522,116,494,114],[522,121,494,119],[522,125,494,123],[522,128,494,126,"action"],[522,134,494,132],[522,135,494,133,"payload"],[522,142,494,140],[522,143,494,141,"params"],[522,149,494,147],[522,152,494,150,"undefined"],[522,161,494,159],[523,12,495,10,"path"],[523,16,495,14],[523,18,495,16],[523,24,495,22],[523,28,495,26,"action"],[523,34,495,32],[523,35,495,33,"payload"],[523,42,495,40],[523,46,495,44],[523,53,495,51,"action"],[523,59,495,57],[523,60,495,58,"payload"],[523,67,495,65],[523,68,495,66,"path"],[523,72,495,70],[523,77,495,75],[523,85,495,83],[523,88,495,86,"action"],[523,94,495,92],[523,95,495,93,"payload"],[523,102,495,100],[523,103,495,101,"path"],[523,107,495,105],[523,110,495,108,"undefined"],[524,10,496,8],[524,11,496,9],[525,8,497,6],[525,9,497,7],[526,8,498,6,"setUnhandledState"],[526,25,498,23],[526,26,498,24,"state"],[526,31,498,29],[526,32,498,30],[527,6,499,4],[528,6,500,4,"onUnhandledActionParent"],[528,29,500,27],[528,32,500,30,"action"],[528,38,500,36],[528,39,500,37],[529,4,501,2],[529,5,501,3],[529,6,501,4],[530,4,502,2],[530,10,502,8,"navigation"],[530,20,502,18],[530,23,502,21],[530,27,502,21,"useNavigationHelpers"],[530,50,502,41],[530,51,502,41,"useNavigationHelpers"],[530,71,502,41],[530,73,502,42],[531,6,503,4,"id"],[531,8,503,6],[531,10,503,8,"options"],[531,17,503,15],[531,18,503,16,"id"],[531,20,503,18],[532,6,504,4,"onAction"],[532,14,504,12],[533,6,505,4,"onUnhandledAction"],[533,23,505,21],[534,6,506,4,"getState"],[534,14,506,12],[535,6,507,4,"emitter"],[535,13,507,11],[536,6,508,4,"router"],[536,12,508,10],[537,6,509,4,"stateRef"],[538,4,510,2],[538,5,510,3],[538,6,510,4],[539,4,511,2],[539,8,511,2,"useFocusedListenersChildrenAdapter"],[539,45,511,36],[539,46,511,36,"useFocusedListenersChildrenAdapter"],[539,80,511,36],[539,82,511,37],[540,6,512,4,"navigation"],[540,16,512,14],[541,6,513,4,"focusedListeners"],[541,22,513,20],[541,24,513,22,"childListeners"],[541,38,513,36],[541,39,513,37,"focus"],[542,4,514,2],[542,5,514,3],[542,6,514,4],[543,4,515,2],[543,8,515,2,"useOnGetState"],[543,24,515,15],[543,25,515,15,"useOnGetState"],[543,38,515,15],[543,40,515,16],[544,6,516,4,"getState"],[544,14,516,12],[545,6,517,4,"getStateListeners"],[545,23,517,21],[545,25,517,23,"keyedListeners"],[545,39,517,37],[545,40,517,38,"getState"],[546,4,518,2],[546,5,518,3],[546,6,518,4],[547,4,519,2],[547,10,519,8],[548,6,520,4,"describe"],[548,14,520,12],[549,6,521,4,"descriptors"],[550,4,522,2],[550,5,522,3],[550,8,522,6],[550,12,522,6,"useDescriptors"],[550,29,522,20],[550,30,522,20,"useDescriptors"],[550,44,522,20],[550,46,522,21],[551,6,523,4,"state"],[551,11,523,9],[552,6,524,4,"screens"],[552,13,524,11],[553,6,525,4,"navigation"],[553,16,525,14],[554,6,526,4,"screenOptions"],[554,19,526,17],[555,6,527,4,"screenLayout"],[555,18,527,16],[556,6,528,4,"onAction"],[556,14,528,12],[557,6,529,4,"getState"],[557,14,529,12],[558,6,530,4,"setState"],[558,14,530,12],[559,6,531,4,"onRouteFocus"],[559,18,531,16],[560,6,532,4,"addListener"],[560,17,532,15],[561,6,533,4,"addKeyedListener"],[561,22,533,20],[562,6,534,4,"router"],[562,12,534,10],[563,6,535,4],[564,6,536,4,"emitter"],[565,4,537,2],[565,5,537,3],[565,6,537,4],[566,4,538,2],[566,8,538,2,"useCurrentRender"],[566,27,538,18],[566,28,538,18,"useCurrentRender"],[566,44,538,18],[566,46,538,19],[567,6,539,4,"state"],[567,11,539,9],[568,6,540,4,"navigation"],[568,16,540,14],[569,6,541,4,"descriptors"],[570,4,542,2],[570,5,542,3],[570,6,542,4],[571,4,543,2],[571,10,543,8,"NavigationContent"],[571,27,543,25],[571,30,543,28],[571,34,543,28,"useComponent"],[571,49,543,40],[571,50,543,40,"useComponent"],[571,62,543,40],[571,64,543,41,"children"],[571,72,543,49],[571,76,543,53],[572,6,544,4],[572,12,544,10,"element"],[572,19,544,17],[572,22,544,20,"layout"],[572,28,544,26],[572,32,544,30],[572,36,544,34],[572,39,544,37,"layout"],[572,45,544,43],[572,46,544,44],[573,8,545,6,"state"],[573,13,545,11],[574,8,546,6,"descriptors"],[574,19,546,17],[575,8,547,6,"navigation"],[575,18,547,16],[576,8,548,6,"children"],[577,6,549,4],[577,7,549,5],[577,8,549,6],[577,11,549,9,"children"],[577,19,549,17],[578,6,550,4],[578,13,550,11],[578,26,550,24],[578,30,550,24,"_jsx"],[578,46,550,28],[578,47,550,28,"jsx"],[578,50,550,28],[578,52,550,29,"NavigationHelpersContext"],[578,79,550,53],[578,80,550,53,"NavigationHelpersContext"],[578,104,550,53],[578,105,550,54,"Provider"],[578,113,550,62],[578,115,550,64],[579,8,551,6,"value"],[579,13,551,11],[579,15,551,13,"navigation"],[579,25,551,23],[580,8,552,6,"children"],[580,16,552,14],[580,18,552,16],[580,31,552,29],[580,35,552,29,"_jsx"],[580,51,552,33],[580,52,552,33,"jsx"],[580,55,552,33],[580,57,552,34,"NavigationStateListenerProvider"],[580,78,552,65],[580,79,552,65,"NavigationStateListenerProvider"],[580,110,552,65],[580,112,552,67],[581,10,553,8,"state"],[581,15,553,13],[581,17,553,15,"state"],[581,22,553,20],[582,10,554,8,"children"],[582,18,554,16],[582,20,554,18],[582,33,554,31],[582,37,554,31,"_jsx"],[582,53,554,35],[582,54,554,35,"jsx"],[582,57,554,35],[582,59,554,36,"PreventRemoveProvider"],[582,83,554,57],[582,84,554,57,"PreventRemoveProvider"],[582,105,554,57],[582,107,554,59],[583,12,555,10,"children"],[583,20,555,18],[583,22,555,20,"element"],[584,10,556,8],[584,11,556,9],[585,8,557,6],[585,9,557,7],[586,6,558,4],[586,7,558,5],[586,8,558,6],[587,4,559,2],[587,5,559,3],[587,6,559,4],[588,4,560,2],[588,11,560,9],[589,6,561,4,"state"],[589,11,561,9],[590,6,562,4,"navigation"],[590,16,562,14],[591,6,563,4,"describe"],[591,14,563,12],[592,6,564,4,"descriptors"],[592,17,564,15],[593,6,565,4,"NavigationContent"],[594,4,566,2],[594,5,566,3],[595,2,567,0],[596,0,567,1],[596,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","getStateFromParams","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","doesStateHaveOnlyInvalidRoutes","state.routes.every$argument_0","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","unhandledState.routes.every$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useClientLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCwC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;2BOC;CPa;OQS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;2DSC,4BC,iCD,CT;qCWU;GXQ;kGYC;oDPC;KOU;GZ+B;kBaE;GbE;mCcsB,gCd,yBU,iCV;wDea,yFf;kBaI;GbE;oBgB4C;GhBQ;kBaM;WIW;KJM;GbE;wBkBS;GlBE;qCWC;GXG;kCmBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GnBC;kBaK;GbO;8CW8B;GXY;yC0B0C;G1BgB;CRQ"},"hasCjsExports":false},"type":"js/module"}]}